// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package meteora_dlmm

import (
	"bytes"
	"fmt"
	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
	programparser "github.com/yydsqu/solana-sdk/program_parser"
)

// Builds a "initialize_customizable_permissionless_lb_pair" instruction.
type InitializeCustomizablePermissionlessLbPair struct {
	// Params:
	Params CustomizableParams
	// Accounts:
	// [0] = [writable] lb_pair
	LbPair solanago.PublicKey `bin:"-"`
	// [1] = [writable,optional] bin_array_bitmap_extension
	BinArrayBitmapExtension solanago.PublicKey `bin:"-"`
	// [2] = [] token_mint_x
	TokenMintX solanago.PublicKey `bin:"-"`
	// [3] = [] token_mint_y
	TokenMintY solanago.PublicKey `bin:"-"`
	// [4] = [writable] reserve_x
	ReserveX solanago.PublicKey `bin:"-"`
	// [5] = [writable] reserve_y
	ReserveY solanago.PublicKey `bin:"-"`
	// [6] = [writable] oracle
	Oracle solanago.PublicKey `bin:"-"`
	// [7] = [] user_token_x
	UserTokenX solanago.PublicKey `bin:"-"`
	// [8] = [writable,signer] funder
	Funder solanago.PublicKey `bin:"-"`
	// [9] = [] token_program[TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA]
	TokenProgram solanago.PublicKey `bin:"-"`
	// [10] = [] system_program
	SystemProgram solanago.PublicKey `bin:"-"`
	// [11] = [] user_token_y
	UserTokenY solanago.PublicKey `bin:"-"`
	// [12] = [] event_authority
	EventAuthority solanago.PublicKey `bin:"-"`
	// [13] = [] program
	Program solanago.PublicKey `bin:"-"`
	// PublicKeySlice
	solanago.PublicKeySlice `bin:"-"`
}

func (obj InitializeCustomizablePermissionlessLbPair) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	// Serialize `paramsParam`:
	if err = encoder.Encode(obj.Params); err != nil {
		return fmt.Errorf("error while marshaling paramsParam:%w", err)
	}
	return nil
}

func (obj *InitializeCustomizablePermissionlessLbPair) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	// Deserialize `Params`:
	if err = decoder.Decode(&obj.Params); err != nil {
		return fmt.Errorf("error while unmarshaling Params:%w", err)
	}
	return nil
}

func (obj *InitializeCustomizablePermissionlessLbPair) SetAccounts(accounts solanago.PublicKeySlice) (err error) {
	if len(accounts) < 14 {
		return fmt.Errorf("too few accounts, expect %d actual %d", 14, len(accounts))
	}
	obj.LbPair = accounts[0]
	obj.BinArrayBitmapExtension = accounts[1]
	obj.TokenMintX = accounts[2]
	obj.TokenMintY = accounts[3]
	obj.ReserveX = accounts[4]
	obj.ReserveY = accounts[5]
	obj.Oracle = accounts[6]
	obj.UserTokenX = accounts[7]
	obj.Funder = accounts[8]
	obj.TokenProgram = accounts[9]
	obj.SystemProgram = accounts[10]
	obj.UserTokenY = accounts[11]
	obj.EventAuthority = accounts[12]
	obj.Program = accounts[13]
	obj.PublicKeySlice = accounts
	return nil
}
func (obj *InitializeCustomizablePermissionlessLbPair) PublicKeys() solanago.PublicKeySlice {
	return obj.PublicKeySlice
}

func (*InitializeCustomizablePermissionlessLbPair) TypeID() binary.TypeID {
	return binary.TypeIDFromBytes(Instruction_InitializeCustomizablePermissionlessLbPair)
}

func (*InitializeCustomizablePermissionlessLbPair) NewInstance() programparser.Instruction {
	return new(InitializeCustomizablePermissionlessLbPair)
}

func (inst *InitializeCustomizablePermissionlessLbPair) GetRemainingAccounts() solanago.PublicKeySlice {
	return inst.PublicKeySlice[14:]
}

// Builds a "initialize_customizable_permissionless_lb_pair" instruction.
func NewInitializeCustomizablePermissionlessLbPairInstruction(
	// Params:
	paramsParam CustomizableParams,

	// Accounts:
	lbPair solanago.PublicKey,
	binArrayBitmapExtension solanago.PublicKey,
	tokenMintX solanago.PublicKey,
	tokenMintY solanago.PublicKey,
	reserveX solanago.PublicKey,
	reserveY solanago.PublicKey,
	oracle solanago.PublicKey,
	userTokenX solanago.PublicKey,
	funder solanago.PublicKey,
	userTokenY solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) (*solanago.GenericInstruction, error) {
	var (
		err    error
		buf__  = new(bytes.Buffer)
		enc__  = binary.NewBorshEncoder(buf__)
		metas_ = make(solanago.AccountMetaSlice, 14, 14+len(remaining__))
	)

	// Encode the instruction discriminator.
	if err = enc__.WriteBytes(Instruction_InitializeCustomizablePermissionlessLbPair[:], false); err != nil {
		return nil, fmt.Errorf("failed to write instruction discriminator: %w", err)
	}

	{
		// Serialize `paramsParam`:
		if err = enc__.Encode(paramsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling paramsParam:%w", err)
		}
	}

	// Add the accounts to the instruction.
	{
		// [0] = [writable] lb_pair
		metas_[0] = solanago.NewAccountMeta(lbPair, true, false)
		// [1] = [writable,optional] bin_array_bitmap_extension
		metas_[1] = solanago.NewAccountMeta(binArrayBitmapExtension, true, false)
		// [2] = [] token_mint_x
		metas_[2] = solanago.NewAccountMeta(tokenMintX, false, false)
		// [3] = [] token_mint_y
		metas_[3] = solanago.NewAccountMeta(tokenMintY, false, false)
		// [4] = [writable] reserve_x
		metas_[4] = solanago.NewAccountMeta(reserveX, true, false)
		// [5] = [writable] reserve_y
		metas_[5] = solanago.NewAccountMeta(reserveY, true, false)
		// [6] = [writable] oracle
		metas_[6] = solanago.NewAccountMeta(oracle, true, false)
		// [7] = [] user_token_x
		metas_[7] = solanago.NewAccountMeta(userTokenX, false, false)
		// [8] = [writable,signer] funder
		metas_[8] = solanago.NewAccountMeta(funder, true, true)
		// [9] = [] token_program[TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA]
		metas_[9] = solanago.NewAccountMeta(TokenProgram, false, false)
		// [10] = [] system_program
		metas_[10] = solanago.NewAccountMeta(SystemProgram, false, false)
		// [11] = [] user_token_y
		metas_[11] = solanago.NewAccountMeta(userTokenY, false, false)
		// [12] = [] event_authority
		metas_[12] = solanago.NewAccountMeta(eventAuthority, false, false)
		// [13] = [] program
		metas_[13] = solanago.NewAccountMeta(program, false, false)
		// append remaining metas
		metas_ = append(metas_, remaining__...)
	}

	// Create the instruction.
	return solanago.NewInstruction(
		ProgramID,
		metas_,
		buf__.Bytes(),
	), nil
}

// Builds a "BuildInitializeCustomizablePermissionlessLbPair" instruction.
func BuildInitializeCustomizablePermissionlessLbPair(
	// Params:
	paramsParam CustomizableParams,

	// Accounts:
	lbPair solanago.PublicKey,
	binArrayBitmapExtension solanago.PublicKey,
	tokenMintX solanago.PublicKey,
	tokenMintY solanago.PublicKey,
	reserveX solanago.PublicKey,
	reserveY solanago.PublicKey,
	oracle solanago.PublicKey,
	userTokenX solanago.PublicKey,
	funder solanago.PublicKey,
	userTokenY solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) *solanago.GenericInstruction {
	instruction_, _ := NewInitializeCustomizablePermissionlessLbPairInstruction(
		paramsParam,
		lbPair,
		binArrayBitmapExtension,
		tokenMintX,
		tokenMintY,
		reserveX,
		reserveY,
		oracle,
		userTokenX,
		funder,
		userTokenY,
		eventAuthority,
		program,
		remaining__...,
	)
	return instruction_
}

// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package raydium_launchpad

import (
	"bytes"
	"fmt"

	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
	programparser "github.com/yydsqu/solana-sdk/program_parser"
)

// Builds a "create_platform_config" instruction.

// Create platform config account
// # Arguments
//
// * `ctx` - The context of accounts
// # Fields
// * `fee_rate` - Fee rate of the platform
// * `name` - Name of the platform
// * `web` - Website of the platform
// * `img` - Image link of the platform
type CreatePlatformConfig struct {
	// Params:
	PlatformParams PlatformParams
	// Accounts:
	// [0] = [writable,signer] platform_admin
	PlatformAdmin solanago.PublicKey `bin:"-"`
	// [1] = [] platform_fee_wallet
	PlatformFeeWallet solanago.PublicKey `bin:"-"`
	// [2] = [] platform_nft_wallet
	PlatformNftWallet solanago.PublicKey `bin:"-"`
	// [3] = [writable] platform_config
	PlatformConfig solanago.PublicKey `bin:"-"`
	// [4] = [] cpswap_config
	CpswapConfig solanago.PublicKey `bin:"-"`
	// [5] = [] system_program
	SystemProgram solanago.PublicKey `bin:"-"`
	// [6] = [] transfer_fee_extension_authority
	TransferFeeExtensionAuthority solanago.PublicKey `bin:"-"`
	// PublicKeySlice
	solanago.PublicKeySlice `bin:"-"`
}

func (obj CreatePlatformConfig) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	// Serialize `platformParamsParam`:
	if err = encoder.Encode(obj.PlatformParams); err != nil {
		return fmt.Errorf("error while marshaling platformParamsParam:%w", err)
	}
	return nil
}

func (obj *CreatePlatformConfig) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	// Deserialize `PlatformParams`:
	if err = decoder.Decode(&obj.PlatformParams); err != nil {
		return fmt.Errorf("error while unmarshaling PlatformParams:%w", err)
	}
	return nil
}

func (obj *CreatePlatformConfig) SetAccounts(accounts solanago.PublicKeySlice) (err error) {
	if len(accounts) < 7 {
		return fmt.Errorf("too few accounts, expect %d actual %d", 7, len(accounts))
	}
	obj.PlatformAdmin = accounts[0]
	obj.PlatformFeeWallet = accounts[1]
	obj.PlatformNftWallet = accounts[2]
	obj.PlatformConfig = accounts[3]
	obj.CpswapConfig = accounts[4]
	obj.SystemProgram = accounts[5]
	obj.TransferFeeExtensionAuthority = accounts[6]
	obj.PublicKeySlice = accounts
	return nil
}
func (obj *CreatePlatformConfig) PublicKeys() solanago.PublicKeySlice {
	return obj.PublicKeySlice
}

func (*CreatePlatformConfig) TypeID() binary.TypeID {
	return binary.TypeIDFromBytes(Instruction_CreatePlatformConfig)
}

func (*CreatePlatformConfig) NewInstance() programparser.Instruction {
	return new(CreatePlatformConfig)
}

func (obj *CreatePlatformConfig) GetRemainingAccounts() solanago.PublicKeySlice {
	if len(obj.PublicKeySlice) <= 7 {
		return nil
	}
	return obj.PublicKeySlice[7:]
}

// Builds a "create_platform_config" instruction.
// Create platform config account // # Arguments //  // * `ctx` - The context of accounts // # Fields // * `fee_rate` - Fee rate of the platform // * `name` - Name of the platform // * `web` - Website of the platform // * `img` - Image link of the platform //
func NewCreatePlatformConfigInstruction(
	// Params:
	platformParamsParam PlatformParams,

	// Accounts:
	platformAdmin solanago.PublicKey,
	platformFeeWallet solanago.PublicKey,
	platformNftWallet solanago.PublicKey,
	platformConfig solanago.PublicKey,
	cpswapConfig solanago.PublicKey,
	transferFeeExtensionAuthority solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) (*solanago.GenericInstruction, error) {
	var (
		err    error
		buf__  = new(bytes.Buffer)
		enc__  = binary.NewBorshEncoder(buf__)
		metas_ = make(solanago.AccountMetaSlice, 7, 7+len(remaining__))
	)

	// Encode the instruction discriminator.
	if err = enc__.WriteBytes(Instruction_CreatePlatformConfig[:], false); err != nil {
		return nil, fmt.Errorf("failed to write instruction discriminator: %w", err)
	}

	{
		// Serialize `platformParamsParam`:
		if err = enc__.Encode(platformParamsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling platformParamsParam:%w", err)
		}
	}

	// Add the accounts to the instruction.
	{
		// [0] = [writable,signer] platform_admin
		// The account paying for the initialization costs
		metas_[0] = solanago.NewAccountMeta(platformAdmin, true, true)
		// [1] = [] platform_fee_wallet
		metas_[1] = solanago.NewAccountMeta(platformFeeWallet, false, false)
		// [2] = [] platform_nft_wallet
		metas_[2] = solanago.NewAccountMeta(platformNftWallet, false, false)
		// [3] = [writable] platform_config
		// The platform config account
		metas_[3] = solanago.NewAccountMeta(platformConfig, true, false)
		// [4] = [] cpswap_config
		metas_[4] = solanago.NewAccountMeta(cpswapConfig, false, false)
		// [5] = [] system_program
		// Required for account creation
		metas_[5] = solanago.NewAccountMeta(SystemProgram, false, false)
		// [6] = [] transfer_fee_extension_authority
		metas_[6] = solanago.NewAccountMeta(transferFeeExtensionAuthority, false, false)
		// append remaining metas
		metas_ = append(metas_, remaining__...)
	}

	// Create the instruction.
	return solanago.NewInstruction(
		ProgramID,
		metas_,
		buf__.Bytes(),
	), nil
}

// Builds a "BuildCreatePlatformConfig" instruction.
// Create platform config account // # Arguments //  // * `ctx` - The context of accounts // # Fields // * `fee_rate` - Fee rate of the platform // * `name` - Name of the platform // * `web` - Website of the platform // * `img` - Image link of the platform //
func BuildCreatePlatformConfig(
	// Params:
	platformParamsParam PlatformParams,

	// Accounts:
	platformAdmin solanago.PublicKey,
	platformFeeWallet solanago.PublicKey,
	platformNftWallet solanago.PublicKey,
	platformConfig solanago.PublicKey,
	cpswapConfig solanago.PublicKey,
	transferFeeExtensionAuthority solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) *solanago.GenericInstruction {
	instruction_, _ := NewCreatePlatformConfigInstruction(
		platformParamsParam,
		platformAdmin,
		platformFeeWallet,
		platformNftWallet,
		platformConfig,
		cpswapConfig,
		transferFeeExtensionAuthority,
		remaining__...,
	)
	return instruction_
}

// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package computebudget

import (
	"github.com/gagliardetto/solana-go"
)

const (
	Default_SIGN_FEE           = 0.000005
	MAX_COMPUTE_UNIT_LIMIT     = 1400000
	Default_COMPUTE_UNIT_LIMIT = 400000
	MIN_HEAP_FRAME_BYTES       = 32 * 1024
	MAX_HEAP_FRAME_BYTES       = 256 * 1024
)

var (
	JitoDontFront      = solana.MustPublicKeyFromBase58("jitodontfront111111111111111111111111111123")
	JitoDontFrontMetas = []*solana.AccountMeta{
		solana.Meta(JitoDontFront),
	}
)

func ComputeUnitPrice(fee float64, unit uint32) uint64 {
	if fee < Default_SIGN_FEE {
		return 0
	}
	if unit == 0 {
		unit = Default_COMPUTE_UNIT_LIMIT
	}
	return uint64((fee - Default_SIGN_FEE) * 1e15 / float64(unit))
}

func NewJitoDontFrontSetComputeUnitLimitInstruction(units uint32) *solana.GenericInstruction {
	return BuildSetComputeUnitLimit(units, solana.Meta(JitoDontFront))
}

// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.
// This file contains parsers for the types defined in the IDL.

package token_program

import (
	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
)

type Instruction interface {
	TypeID() binary.TypeID
	SetAccounts(accounts solanago.PublicKeySlice) error
	Copy() Instruction
}

type TokenState binary.BorshEnum

const (
	TokenState_Uninitialized TokenState = iota
	TokenState_Initialized
	TokenState_Frozen
)

func (value TokenState) String() string {
	switch value {
	case TokenState_Uninitialized:
		return "Uninitialized"
	case TokenState_Initialized:
		return "Initialized"
	case TokenState_Frozen:
		return "Frozen"
	default:
		return ""
	}
}

type AuthorityType binary.BorshEnum

const (
	AuthorityType_MintTokens AuthorityType = iota
	AuthorityType_FreezeAccount
	AuthorityType_AccountOwner
	AuthorityType_CloseAccount
)

func (value AuthorityType) String() string {
	switch value {
	case AuthorityType_MintTokens:
		return "MintTokens"
	case AuthorityType_FreezeAccount:
		return "FreezeAccount"
	case AuthorityType_AccountOwner:
		return "AccountOwner"
	case AuthorityType_CloseAccount:
		return "CloseAccount"
	default:
		return ""
	}
}

// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package token_metadata

import (
	"bytes"
	"fmt"
	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
	programparser "github.com/yydsqu/solana-sdk/program_parser"
)

// Builds a "bubblegum_set_collection_size" instruction.
type BubblegumSetCollectionSize struct {
	// Params:
	SetCollectionSizeArgs SetCollectionSizeArgs
	// Accounts:
	// [0] = [writable] collection_metadata
	CollectionMetadata solanago.PublicKey `bin:"-"`
	// [1] = [,signer] collection_authority
	CollectionAuthority solanago.PublicKey `bin:"-"`
	// [2] = [] collection_mint
	CollectionMint solanago.PublicKey `bin:"-"`
	// [3] = [,signer] bubblegum_signer
	BubblegumSigner solanago.PublicKey `bin:"-"`
	// [4] = [,optional] collection_authority_record
	CollectionAuthorityRecord solanago.PublicKey `bin:"-"`
	// PublicKeySlice
	solanago.PublicKeySlice `bin:"-"`
}

func (obj BubblegumSetCollectionSize) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	// Serialize `setCollectionSizeArgsParam`:
	if err = encoder.Encode(obj.SetCollectionSizeArgs); err != nil {
		return fmt.Errorf("error while marshaling setCollectionSizeArgsParam:%w", err)
	}
	return nil
}

func (obj *BubblegumSetCollectionSize) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	// Deserialize `SetCollectionSizeArgs`:
	if err = decoder.Decode(&obj.SetCollectionSizeArgs); err != nil {
		return fmt.Errorf("error while unmarshaling SetCollectionSizeArgs:%w", err)
	}
	return nil
}

func (obj *BubblegumSetCollectionSize) SetAccounts(accounts solanago.PublicKeySlice) (err error) {
	if len(accounts) < 5 {
		return fmt.Errorf("too few accounts, expect %d actual %d", 5, len(accounts))
	}
	obj.CollectionMetadata = accounts[0]
	obj.CollectionAuthority = accounts[1]
	obj.CollectionMint = accounts[2]
	obj.BubblegumSigner = accounts[3]
	obj.CollectionAuthorityRecord = accounts[4]
	obj.PublicKeySlice = accounts
	return nil
}
func (obj *BubblegumSetCollectionSize) PublicKeys() solanago.PublicKeySlice {
	return obj.PublicKeySlice
}

func (*BubblegumSetCollectionSize) TypeID() binary.TypeID {
	return binary.TypeIDFromBytes(Instruction_BubblegumSetCollectionSize)
}

func (*BubblegumSetCollectionSize) NewInstance() programparser.Instruction {
	return new(BubblegumSetCollectionSize)
}

func (obj *BubblegumSetCollectionSize) GetRemainingAccounts() solanago.PublicKeySlice {
	if len(obj.PublicKeySlice) <= 5 {
		return nil
	}
	return obj.PublicKeySlice[5:]
}

// Builds a "bubblegum_set_collection_size" instruction.
func NewBubblegumSetCollectionSizeInstruction(
	// Params:
	setCollectionSizeArgsParam SetCollectionSizeArgs,

	// Accounts:
	collectionMetadata solanago.PublicKey,
	collectionAuthority solanago.PublicKey,
	collectionMint solanago.PublicKey,
	bubblegumSigner solanago.PublicKey,
	collectionAuthorityRecord solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) (*solanago.GenericInstruction, error) {
	var (
		err    error
		buf__  = new(bytes.Buffer)
		enc__  = binary.NewBorshEncoder(buf__)
		metas_ = make(solanago.AccountMetaSlice, 5, 5+len(remaining__))
	)

	// Encode the instruction discriminator.
	if err = enc__.WriteBytes(Instruction_BubblegumSetCollectionSize[:], false); err != nil {
		return nil, fmt.Errorf("failed to write instruction discriminator: %w", err)
	}

	{
		// Serialize `setCollectionSizeArgsParam`:
		if err = enc__.Encode(setCollectionSizeArgsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling setCollectionSizeArgsParam:%w", err)
		}
	}

	// Add the accounts to the instruction.
	{
		// [0] = [writable] collection_metadata
		// Collection Metadata account
		metas_[0] = solanago.NewAccountMeta(collectionMetadata, true, false)
		// [1] = [,signer] collection_authority
		// Collection Update authority
		metas_[1] = solanago.NewAccountMeta(collectionAuthority, false, true)
		// [2] = [] collection_mint
		// Mint of the Collection
		metas_[2] = solanago.NewAccountMeta(collectionMint, false, false)
		// [3] = [,signer] bubblegum_signer
		// Signing PDA of Bubblegum program
		metas_[3] = solanago.NewAccountMeta(bubblegumSigner, false, true)
		// [4] = [,optional] collection_authority_record
		// Collection Authority Record PDA
		metas_[4] = solanago.NewAccountMeta(collectionAuthorityRecord, false, false)
		// append remaining metas
		metas_ = append(metas_, remaining__...)
	}

	// Create the instruction.
	return solanago.NewInstruction(
		ProgramID,
		metas_,
		buf__.Bytes(),
	), nil
}

// Builds a "BuildBubblegumSetCollectionSize" instruction.
func BuildBubblegumSetCollectionSize(
	// Params:
	setCollectionSizeArgsParam SetCollectionSizeArgs,

	// Accounts:
	collectionMetadata solanago.PublicKey,
	collectionAuthority solanago.PublicKey,
	collectionMint solanago.PublicKey,
	bubblegumSigner solanago.PublicKey,
	collectionAuthorityRecord solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) *solanago.GenericInstruction {
	instruction_, _ := NewBubblegumSetCollectionSizeInstruction(
		setCollectionSizeArgsParam,
		collectionMetadata,
		collectionAuthority,
		collectionMint,
		bubblegumSigner,
		collectionAuthorityRecord,
		remaining__...,
	)
	return instruction_
}

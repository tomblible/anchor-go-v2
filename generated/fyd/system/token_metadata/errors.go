// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.
// This file contains errors.

package token_metadata

// error codes
type ErrorCode uint32

const (
	ErrInstructionUnpackError ErrorCode = 0
	ErrInstructionPackError   ErrorCode = 1
	// Lamport balance below rent-exempt threshold
	ErrNotRentExempt ErrorCode = 2
	// Already initialized
	ErrAlreadyInitialized ErrorCode = 3
	// Uninitialized
	ErrUninitialized ErrorCode = 4
	// Metadata's key must match seed of ['metadata', program id, mint] provided
	ErrInvalidMetadataKey ErrorCode = 5
	// Edition's key must match seed of ['metadata', program id, name, 'edition'] provided
	ErrInvalidEditionKey ErrorCode = 6
	// Update Authority given does not match
	ErrUpdateAuthorityIncorrect ErrorCode = 7
	// Update Authority needs to be signer to update metadata
	ErrUpdateAuthorityIsNotSigner ErrorCode = 8
	// You must be the mint authority and signer on this transaction
	ErrNotMintAuthority ErrorCode = 9
	// Mint authority provided does not match the authority on the mint
	ErrInvalidMintAuthority ErrorCode = 10
	// Name too long
	ErrNameTooLong ErrorCode = 11
	// Symbol too long
	ErrSymbolTooLong ErrorCode = 12
	// URI too long
	ErrUriTooLong                                             ErrorCode = 13
	ErrUpdateAuthorityMustBeEqualToMetadataAuthorityAndSigner ErrorCode = 14
	// Mint given does not match mint on Metadata
	ErrMintMismatch ErrorCode = 15
	// Editions must have exactly one token
	ErrEditionsMustHaveExactlyOneToken                      ErrorCode = 16
	ErrMaxEditionsMintedAlready                             ErrorCode = 17
	ErrTokenMintToFailed                                    ErrorCode = 18
	ErrMasterRecordMismatch                                 ErrorCode = 19
	ErrDestinationMintMismatch                              ErrorCode = 20
	ErrEditionAlreadyMinted                                 ErrorCode = 21
	ErrPrintingMintDecimalsShouldBeZero                     ErrorCode = 22
	ErrOneTimePrintingAuthorizationMintDecimalsShouldBeZero ErrorCode = 23
	// EditionMintDecimalsShouldBeZero
	ErrEditionMintDecimalsShouldBeZero     ErrorCode = 24
	ErrTokenBurnFailed                     ErrorCode = 25
	ErrTokenAccountOneTimeAuthMintMismatch ErrorCode = 26
	// Derived key invalid
	ErrDerivedKeyInvalid ErrorCode = 27
	// The Printing mint does not match that on the master edition!
	ErrPrintingMintMismatch ErrorCode = 28
	// The One Time Printing Auth mint does not match that on the master edition!
	ErrOneTimePrintingAuthMintMismatch ErrorCode = 29
	// The mint of the token account does not match the Printing mint!
	ErrTokenAccountMintMismatch ErrorCode = 30
	// The mint of the token account does not match the master metadata mint!
	ErrTokenAccountMintMismatchV2 ErrorCode = 31
	// Not enough tokens to mint a limited edition
	ErrNotEnoughTokens                          ErrorCode = 32
	ErrPrintingMintAuthorizationAccountMismatch ErrorCode = 33
	ErrAuthorizationTokenAccountOwnerMismatch   ErrorCode = 34
	ErrDisabled                                 ErrorCode = 35
	// Creators list too long
	ErrCreatorsTooLong ErrorCode = 36
	// Creators must be at least one if set
	ErrCreatorsMustBeAtleastOne ErrorCode = 37
	ErrMustBeOneOfCreators      ErrorCode = 38
	// This metadata does not have creators
	ErrNoCreatorsPresentOnMetadata ErrorCode = 39
	// This creator address was not found
	ErrCreatorNotFound ErrorCode = 40
	// Basis points cannot be more than 10000
	ErrInvalidBasisPoints ErrorCode = 41
	// Primary sale can only be flipped to true and is immutable
	ErrPrimarySaleCanOnlyBeFlippedToTrue ErrorCode = 42
	// Owner does not match that on the account given
	ErrOwnerMismatch ErrorCode = 43
	// This account has no tokens to be used for authorization
	ErrNoBalanceInAccountForAuthorization ErrorCode = 44
	// Share total must equal 100 for creator array
	ErrShareTotalMustBe100     ErrorCode = 45
	ErrReservationExists       ErrorCode = 46
	ErrReservationDoesNotExist ErrorCode = 47
	ErrReservationNotSet       ErrorCode = 48
	ErrReservationAlreadyMade  ErrorCode = 49
	ErrBeyondMaxAddressSize    ErrorCode = 50
	// NumericalOverflowError
	ErrNumericalOverflowError           ErrorCode = 51
	ErrReservationBreachesMaximumSupply ErrorCode = 52
	ErrAddressNotInReservation          ErrorCode = 53
	// You cannot unilaterally verify another creator, they must sign
	ErrCannotVerifyAnotherCreator ErrorCode = 54
	// You cannot unilaterally unverify another creator
	ErrCannotUnverifyAnotherCreator ErrorCode = 55
	ErrSpotMismatch                 ErrorCode = 56
	// Incorrect account owner
	ErrIncorrectOwner                   ErrorCode = 57
	ErrPrintingWouldBreachMaximumSupply ErrorCode = 58
	// Data is immutable
	ErrDataIsImmutable ErrorCode = 59
	// No duplicate creator addresses
	ErrDuplicateCreatorAddress                               ErrorCode = 60
	ErrReservationSpotsRemainingShouldMatchTotalSpotsAtStart ErrorCode = 61
	// Invalid token program
	ErrInvalidTokenProgram ErrorCode = 62
	// Data type mismatch
	ErrDataTypeMismatch                    ErrorCode = 63
	ErrBeyondAlottedAddressSize            ErrorCode = 64
	ErrReservationNotComplete              ErrorCode = 65
	ErrTriedToReplaceAnExistingReservation ErrorCode = 66
	// Invalid operation
	ErrInvalidOperation ErrorCode = 67
	// Invalid Owner
	ErrInvalidOwner ErrorCode = 68
	// Printing mint supply must be zero for conversion
	ErrPrintingMintSupplyMustBeZeroForConversion ErrorCode = 69
	// One Time Auth mint supply must be zero for conversion
	ErrOneTimeAuthMintSupplyMustBeZeroForConversion ErrorCode = 70
	// You tried to insert one edition too many into an edition mark pda
	ErrInvalidEditionIndex             ErrorCode = 71
	ErrReservationArrayShouldBeSizeOne ErrorCode = 72
	// Is Mutable can only be flipped to false
	ErrIsMutableCanOnlyBeFlippedToFalse ErrorCode = 73
	// Collection cannot be verified in this instruction
	ErrCollectionCannotBeVerifiedInThisInstruction ErrorCode = 74
	// This instruction was deprecated in a previous release and is now removed
	ErrRemoved      ErrorCode = 75
	ErrMustBeBurned ErrorCode = 76
	// This use method is invalid
	ErrInvalidUseMethod ErrorCode = 77
	// Cannot Change Use Method after the first use
	ErrCannotChangeUseMethodAfterFirstUse ErrorCode = 78
	// Cannot Change Remaining or Available uses after the first use
	ErrCannotChangeUsesAfterFirstUse ErrorCode = 79
	// Collection Not Found on Metadata
	ErrCollectionNotFound ErrorCode = 80
	// Collection Update Authority is invalid
	ErrInvalidCollectionUpdateAuthority ErrorCode = 81
	// Collection Must Be a Unique Master Edition v2
	ErrCollectionMustBeAUniqueMasterEdition ErrorCode = 82
	// The Use Authority Record Already Exists, to modify it Revoke, then Approve
	ErrUseAuthorityRecordAlreadyExists ErrorCode = 83
	// The Use Authority Record is empty or already revoked
	ErrUseAuthorityRecordAlreadyRevoked ErrorCode = 84
	// This token has no uses
	ErrUnusable ErrorCode = 85
	// There are not enough Uses left on this token.
	ErrNotEnoughUses ErrorCode = 86
	// This Collection Authority Record Already Exists.
	ErrCollectionAuthorityRecordAlreadyExists ErrorCode = 87
	// This Collection Authority Record Does Not Exist.
	ErrCollectionAuthorityDoesNotExist ErrorCode = 88
	// This Use Authority Record is invalid.
	ErrInvalidUseAuthorityRecord        ErrorCode = 89
	ErrInvalidCollectionAuthorityRecord ErrorCode = 90
	// Metadata does not match the freeze authority on the mint
	ErrInvalidFreezeAuthority ErrorCode = 91
	// All tokens in this account have not been delegated to this user.
	ErrInvalidDelegate             ErrorCode = 92
	ErrCannotAdjustVerifiedCreator ErrorCode = 93
	// Verified creators cannot be removed.
	ErrCannotRemoveVerifiedCreator            ErrorCode = 94
	ErrCannotWipeVerifiedCreators             ErrorCode = 95
	ErrNotAllowedToChangeSellerFeeBasisPoints ErrorCode = 96
	// Edition override cannot be zero
	ErrEditionOverrideCannotBeZero ErrorCode = 97
	// Invalid User
	ErrInvalidUser ErrorCode = 98
	// Revoke Collection Authority signer is incorrect
	ErrRevokeCollectionAuthoritySignerIncorrect ErrorCode = 99
	ErrTokenCloseFailed                         ErrorCode = 100
	// Can't use this function on unsized collection
	ErrUnsizedCollection ErrorCode = 101
	// Can't use this function on a sized collection
	ErrSizedCollection ErrorCode = 102
	// Missing collection metadata account
	ErrMissingCollectionMetadata ErrorCode = 103
	// This NFT is not a member of the specified collection.
	ErrNotAMemberOfCollection ErrorCode = 104
	// This NFT is not a verified member of the specified collection.
	ErrNotVerifiedMemberOfCollection ErrorCode = 105
	// This NFT is not a collection parent NFT.
	ErrNotACollectionParent ErrorCode = 106
	// Could not determine a TokenStandard type.
	ErrCouldNotDetermineTokenStandard ErrorCode = 107
	// This mint account has an edition but none was provided.
	ErrMissingEditionAccount ErrorCode = 108
	// This edition is not a Master Edition
	ErrNotAMasterEdition ErrorCode = 109
	// This Master Edition has existing prints
	ErrMasterEditionHasPrints    ErrorCode = 110
	ErrBorshDeserializationError ErrorCode = 111
	// Cannot update a verified collection in this command
	ErrCannotUpdateVerifiedCollection ErrorCode = 112
	// Edition account doesnt match collection
	ErrCollectionMasterEditionAccountInvalid ErrorCode = 113
	// Item is already verified.
	ErrAlreadyVerified   ErrorCode = 114
	ErrAlreadyUnverified ErrorCode = 115
	// This edition is not a Print Edition
	ErrNotAPrintEdition ErrorCode = 116
	// Invalid Master Edition
	ErrInvalidMasterEdition ErrorCode = 117
	// Invalid Print Edition
	ErrInvalidPrintEdition ErrorCode = 118
	// Invalid Edition Marker
	ErrInvalidEditionMarker ErrorCode = 119
	// Reservation List is Deprecated
	ErrReservationListDeprecated ErrorCode = 120
	// Print Edition does not match Master Edition
	ErrPrintEditionDoesNotMatchMasterEdition ErrorCode = 121
	// Edition Number greater than max supply
	ErrEditionNumberGreaterThanMaxSupply ErrorCode = 122
	// Must unverify before migrating collections.
	ErrMustUnverify ErrorCode = 123
	// Invalid Escrow Account Bump Seed
	ErrInvalidEscrowBumpSeed ErrorCode = 124
	// Must Escrow Authority
	ErrMustBeEscrowAuthority ErrorCode = 125
	// Invalid System Program
	ErrInvalidSystemProgram ErrorCode = 126
	// Must be a Non Fungible Token
	ErrMustBeNonFungible ErrorCode = 127
	// Insufficient tokens for transfer
	ErrInsufficientTokens ErrorCode = 128
	// Borsh Serialization Error
	ErrBorshSerializationError ErrorCode = 129
	// Cannot create NFT with no Freeze Authority.
	ErrNoFreezeAuthoritySet ErrorCode = 130
	// Invalid collection size change
	ErrInvalidCollectionSizeChange ErrorCode = 131
	// Invalid bubblegum signer
	ErrInvalidBubblegumSigner ErrorCode = 132
	// Escrow parent cannot have a delegate
	ErrEscrowParentHasDelegate ErrorCode = 133
	// Mint needs to be signer to initialize the account
	ErrMintIsNotSigner ErrorCode = 134
	// Invalid token standard
	ErrInvalidTokenStandard ErrorCode = 135
	// Invalid mint account for specified token standard
	ErrInvalidMintForTokenStandard ErrorCode = 136
	// Invalid authorization rules account
	ErrInvalidAuthorizationRules ErrorCode = 137
	// Missing authorization rules account
	ErrMissingAuthorizationRules ErrorCode = 138
	// Missing programmable configuration
	ErrMissingProgrammableConfig ErrorCode = 139
	// Invalid programmable configuration
	ErrInvalidProgrammableConfig ErrorCode = 140
	// Delegate already exists
	ErrDelegateAlreadyExists ErrorCode = 141
	// Delegate not found
	ErrDelegateNotFound ErrorCode = 142
	// Required account not set in instruction builder
	ErrMissingAccountInBuilder ErrorCode = 143
	// Required argument not set in instruction builder
	ErrMissingArgumentInBuilder ErrorCode = 144
	// Feature not supported currently
	ErrFeatureNotSupported ErrorCode = 145
	// Invalid system wallet
	ErrInvalidSystemWallet ErrorCode = 146
	// Only the sale delegate can transfer while its set
	ErrOnlySaleDelegateCanTransfer ErrorCode = 147
	// Missing token account
	ErrMissingTokenAccount ErrorCode = 148
	// Missing SPL token program
	ErrMissingSplTokenProgram ErrorCode = 149
	// Missing authorization rules program
	ErrMissingAuthorizationRulesProgram ErrorCode = 150
	// Invalid delegate role for transfer
	ErrInvalidDelegateRoleForTransfer ErrorCode = 151
	// Invalid transfer authority
	ErrInvalidTransferAuthority ErrorCode = 152
	// Instruction not supported for ProgrammableNonFungible assets
	ErrInstructionNotSupported ErrorCode = 153
	// Public key does not match expected value
	ErrKeyMismatch ErrorCode = 154
	// Token is locked
	ErrLockedToken ErrorCode = 155
	// Token is unlocked
	ErrUnlockedToken ErrorCode = 156
	// Missing delegate role
	ErrMissingDelegateRole ErrorCode = 157
	// Invalid authority type
	ErrInvalidAuthorityType ErrorCode = 158
	// Missing token record account
	ErrMissingTokenRecord ErrorCode = 159
	// Mint supply must be zero for programmable assets
	ErrMintSupplyMustBeZero ErrorCode = 160
	// Data is empty or zeroed
	ErrDataIsEmptyOrZeroed ErrorCode = 161
	// Missing token owner
	ErrMissingTokenOwnerAccount ErrorCode = 162
	// Master edition account has an invalid length
	ErrInvalidMasterEditionAccountLength ErrorCode = 163
	// Incorrect token state
	ErrIncorrectTokenState ErrorCode = 164
	// Invalid delegate role
	ErrInvalidDelegateRole ErrorCode = 165
	// Print supply is required for non-fungibles
	ErrMissingPrintSupply ErrorCode = 166
	// Missing master edition account
	ErrMissingMasterEditionAccount ErrorCode = 167
	// Amount must be greater than zero
	ErrAmountMustBeGreaterThanZero ErrorCode = 168
	// Invalid delegate args
	ErrInvalidDelegateArgs ErrorCode = 169
	// Missing address for locked transfer
	ErrMissingLockedTransferAddress ErrorCode = 170
	// Invalid destination address for locked transfer
	ErrInvalidLockedTransferAddress ErrorCode = 171
	// Exceeded account realloc increase limit
	ErrDataIncrementLimitExceeded ErrorCode = 172
	// Cannot update the rule set of a programmable asset that has a delegate
	ErrCannotUpdateAssetWithDelegate ErrorCode = 173
	// Invalid token amount for this operation or token standard
	ErrInvalidAmount ErrorCode = 174
	// Missing master edition mint account
	ErrMissingMasterEditionMintAccount ErrorCode = 175
	// Missing master edition token account
	ErrMissingMasterEditionTokenAccount ErrorCode = 176
	// Missing edition marker account
	ErrMissingEditionMarkerAccount ErrorCode = 177
	// Cannot burn while persistent delegate is set
	ErrCannotBurnWithDelegate ErrorCode = 178
	// Missing edition account
	ErrMissingEdition ErrorCode = 179
	// Invalid Associated Token Account Program
	ErrInvalidAssociatedTokenAccountProgram ErrorCode = 180
	// Invalid InstructionsSysvar
	ErrInvalidInstructionsSysvar ErrorCode = 181
	// Invalid or Unneeded parent accounts
	ErrInvalidParentAccounts ErrorCode = 182
	// Authority cannot apply all update args
	ErrInvalidUpdateArgs ErrorCode = 183
	// Token account does not have enough tokens
	ErrInsufficientTokenBalance ErrorCode = 184
	// Missing collection account
	ErrMissingCollectionMint ErrorCode = 185
	// Missing collection master edition account
	ErrMissingCollectionMasterEdition ErrorCode = 186
	// Invalid token record account
	ErrInvalidTokenRecord ErrorCode = 187
	// The close authority needs to be revoked by the Utility Delegate
	ErrInvalidCloseAuthority ErrorCode = 188
	// Invalid or removed instruction
	ErrInvalidInstruction ErrorCode = 189
	// Missing delegate record
	ErrMissingDelegateRecord ErrorCode = 190
	ErrInvalidFeeAccount     ErrorCode = 191
	ErrInvalidMetadataFlags  ErrorCode = 192
	// Cannot change the update authority with a delegate
	ErrCannotChangeUpdateAuthorityWithDelegate ErrorCode = 193
	// Invalid mint extension type
	ErrInvalidMintExtensionType ErrorCode = 194
	// Invalid mint close authority
	ErrInvalidMintCloseAuthority ErrorCode = 195
	// Invalid metadata pointer
	ErrInvalidMetadataPointer ErrorCode = 196
	// Invalid token extension type
	ErrInvalidTokenExtensionType ErrorCode = 197
	// Missing immutable owner extension
	ErrMissingImmutableOwnerExtension ErrorCode = 198
	// Expected account to be uninitialized
	ErrExpectedUninitializedAccount ErrorCode = 199
	// Edition account has an invalid length
	ErrInvalidEditionAccountLength ErrorCode = 200
	// Account has already been resized
	ErrAccountAlreadyResized ErrorCode = 201
	// Conditions for closing not met
	ErrConditionsForClosingNotMet ErrorCode = 202
)

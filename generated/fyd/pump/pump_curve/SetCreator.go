// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package pump_curve

import (
	"bytes"
	"fmt"
	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
	programparser "github.com/yydsqu/solana-sdk/program_parser"
)

// Builds a "set_creator" instruction.

// Allows Global::set_creator_authority to set the bonding curve creator from Metaplex metadata or input argument
type SetCreator struct {
	// Params:
	Creator solanago.PublicKey
	// Accounts:
	// [0] = [,signer] set_creator_authority
	SetCreatorAuthority solanago.PublicKey `bin:"-"`
	// [1] = [] global
	Global solanago.PublicKey `bin:"-"`
	// [2] = [] mint
	Mint solanago.PublicKey `bin:"-"`
	// [3] = [] metadata
	Metadata solanago.PublicKey `bin:"-"`
	// [4] = [writable] bonding_curve
	BondingCurve solanago.PublicKey `bin:"-"`
	// [5] = [] event_authority
	EventAuthority solanago.PublicKey `bin:"-"`
	// [6] = [] program
	Program solanago.PublicKey `bin:"-"`
	// PublicKeySlice
	solanago.PublicKeySlice `bin:"-"`
}

func (obj SetCreator) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	// Serialize `creatorParam`:
	if err = encoder.Encode(obj.Creator); err != nil {
		return fmt.Errorf("error while marshaling creatorParam:%w", err)
	}
	return nil
}

func (obj *SetCreator) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	// Deserialize `Creator`:
	if err = decoder.Decode(&obj.Creator); err != nil {
		return fmt.Errorf("error while unmarshaling Creator:%w", err)
	}
	return nil
}

func (obj *SetCreator) SetAccounts(accounts solanago.PublicKeySlice) (err error) {
	if len(accounts) < 7 {
		return fmt.Errorf("too few accounts, expect %d actual %d", 7, len(accounts))
	}
	obj.SetCreatorAuthority = accounts[0]
	obj.Global = accounts[1]
	obj.Mint = accounts[2]
	obj.Metadata = accounts[3]
	obj.BondingCurve = accounts[4]
	obj.EventAuthority = accounts[5]
	obj.Program = accounts[6]
	obj.PublicKeySlice = accounts
	return nil
}
func (obj *SetCreator) PublicKeys() solanago.PublicKeySlice {
	return obj.PublicKeySlice
}

func (*SetCreator) TypeID() binary.TypeID {
	return binary.TypeIDFromBytes(Instruction_SetCreator)
}

func (*SetCreator) NewInstance() programparser.Instruction {
	return new(SetCreator)
}

func (obj *SetCreator) GetRemainingAccounts() solanago.PublicKeySlice {
	if len(obj.PublicKeySlice) <= 7 {
		return nil
	}
	return obj.PublicKeySlice[7:]
}

// Builds a "set_creator" instruction.
// Allows Global::set_creator_authority to set the bonding curve creator from Metaplex metadata or input argument
func NewSetCreatorInstruction(
	// Params:
	creatorParam solanago.PublicKey,

	// Accounts:
	setCreatorAuthority solanago.PublicKey,
	global solanago.PublicKey,
	mint solanago.PublicKey,
	metadata solanago.PublicKey,
	bondingCurve solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) (*solanago.GenericInstruction, error) {
	var (
		err    error
		buf__  = new(bytes.Buffer)
		enc__  = binary.NewBorshEncoder(buf__)
		metas_ = make(solanago.AccountMetaSlice, 7, 7+len(remaining__))
	)

	// Encode the instruction discriminator.
	if err = enc__.WriteBytes(Instruction_SetCreator[:], false); err != nil {
		return nil, fmt.Errorf("failed to write instruction discriminator: %w", err)
	}

	{
		// Serialize `creatorParam`:
		if err = enc__.Encode(creatorParam); err != nil {
			return nil, fmt.Errorf("error while marshaling creatorParam:%w", err)
		}
	}

	// Add the accounts to the instruction.
	{
		// [0] = [,signer] set_creator_authority
		metas_[0] = solanago.NewAccountMeta(setCreatorAuthority, false, true)
		// [1] = [] global
		metas_[1] = solanago.NewAccountMeta(global, false, false)
		// [2] = [] mint
		metas_[2] = solanago.NewAccountMeta(mint, false, false)
		// [3] = [] metadata
		metas_[3] = solanago.NewAccountMeta(metadata, false, false)
		// [4] = [writable] bonding_curve
		metas_[4] = solanago.NewAccountMeta(bondingCurve, true, false)
		// [5] = [] event_authority
		metas_[5] = solanago.NewAccountMeta(eventAuthority, false, false)
		// [6] = [] program
		metas_[6] = solanago.NewAccountMeta(program, false, false)
		// append remaining metas
		metas_ = append(metas_, remaining__...)
	}

	// Create the instruction.
	return solanago.NewInstruction(
		ProgramID,
		metas_,
		buf__.Bytes(),
	), nil
}

// Builds a "BuildSetCreator" instruction.
// Allows Global::set_creator_authority to set the bonding curve creator from Metaplex metadata or input argument
func BuildSetCreator(
	// Params:
	creatorParam solanago.PublicKey,

	// Accounts:
	setCreatorAuthority solanago.PublicKey,
	global solanago.PublicKey,
	mint solanago.PublicKey,
	metadata solanago.PublicKey,
	bondingCurve solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) *solanago.GenericInstruction {
	instruction_, _ := NewSetCreatorInstruction(
		creatorParam,
		setCreatorAuthority,
		global,
		mint,
		metadata,
		bondingCurve,
		eventAuthority,
		program,
		remaining__...,
	)
	return instruction_
}

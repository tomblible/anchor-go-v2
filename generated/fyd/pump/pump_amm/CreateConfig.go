// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package pump_amm

import (
	"bytes"
	"fmt"
	binary "github.com/gagliardetto/binary"
	solanago "github.com/gagliardetto/solana-go"
	programparser "github.com/yydsqu/solana-sdk/program_parser"
)

// Builds a "create_config" instruction.
type CreateConfig struct {
	// Params:
	LpFeeBasisPoints             uint64
	ProtocolFeeBasisPoints       uint64
	ProtocolFeeRecipients        [8]solanago.PublicKey
	CoinCreatorFeeBasisPoints    uint64
	AdminSetCoinCreatorAuthority solanago.PublicKey
	// Accounts:
	// [0] = [writable,signer] admin[8LWu7QM2dGR1G8nKDHthckea57bkCzXyBTAKPJUBDHo8]
	Admin solanago.PublicKey `bin:"-"`
	// [1] = [writable] global_config
	GlobalConfig solanago.PublicKey `bin:"-"`
	// [2] = [] system_program
	SystemProgram solanago.PublicKey `bin:"-"`
	// [3] = [] event_authority
	EventAuthority solanago.PublicKey `bin:"-"`
	// [4] = [] program
	Program solanago.PublicKey `bin:"-"`
	// PublicKeySlice
	solanago.PublicKeySlice `bin:"-"`
}

func (obj CreateConfig) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	// Serialize `lpFeeBasisPointsParam`:
	if err = encoder.Encode(obj.LpFeeBasisPoints); err != nil {
		return fmt.Errorf("error while marshaling lpFeeBasisPointsParam:%w", err)
	}
	// Serialize `protocolFeeBasisPointsParam`:
	if err = encoder.Encode(obj.ProtocolFeeBasisPoints); err != nil {
		return fmt.Errorf("error while marshaling protocolFeeBasisPointsParam:%w", err)
	}
	// Serialize `protocolFeeRecipientsParam`:
	if err = encoder.Encode(obj.ProtocolFeeRecipients); err != nil {
		return fmt.Errorf("error while marshaling protocolFeeRecipientsParam:%w", err)
	}
	// Serialize `coinCreatorFeeBasisPointsParam`:
	if err = encoder.Encode(obj.CoinCreatorFeeBasisPoints); err != nil {
		return fmt.Errorf("error while marshaling coinCreatorFeeBasisPointsParam:%w", err)
	}
	// Serialize `adminSetCoinCreatorAuthorityParam`:
	if err = encoder.Encode(obj.AdminSetCoinCreatorAuthority); err != nil {
		return fmt.Errorf("error while marshaling adminSetCoinCreatorAuthorityParam:%w", err)
	}
	return nil
}

func (obj *CreateConfig) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	// Deserialize `LpFeeBasisPoints`:
	if err = decoder.Decode(&obj.LpFeeBasisPoints); err != nil {
		return fmt.Errorf("error while unmarshaling LpFeeBasisPoints:%w", err)
	}
	// Deserialize `ProtocolFeeBasisPoints`:
	if err = decoder.Decode(&obj.ProtocolFeeBasisPoints); err != nil {
		return fmt.Errorf("error while unmarshaling ProtocolFeeBasisPoints:%w", err)
	}
	// Deserialize `ProtocolFeeRecipients`:
	if err = decoder.Decode(&obj.ProtocolFeeRecipients); err != nil {
		return fmt.Errorf("error while unmarshaling ProtocolFeeRecipients:%w", err)
	}
	// Deserialize `CoinCreatorFeeBasisPoints`:
	if err = decoder.Decode(&obj.CoinCreatorFeeBasisPoints); err != nil {
		return fmt.Errorf("error while unmarshaling CoinCreatorFeeBasisPoints:%w", err)
	}
	// Deserialize `AdminSetCoinCreatorAuthority`:
	if err = decoder.Decode(&obj.AdminSetCoinCreatorAuthority); err != nil {
		return fmt.Errorf("error while unmarshaling AdminSetCoinCreatorAuthority:%w", err)
	}
	return nil
}

func (obj *CreateConfig) SetAccounts(accounts solanago.PublicKeySlice) (err error) {
	if len(accounts) < 5 {
		return fmt.Errorf("too few accounts, expect %d actual %d", 5, len(accounts))
	}
	obj.Admin = accounts[0]
	obj.GlobalConfig = accounts[1]
	obj.SystemProgram = accounts[2]
	obj.EventAuthority = accounts[3]
	obj.Program = accounts[4]
	obj.PublicKeySlice = accounts
	return nil
}
func (obj *CreateConfig) PublicKeys() solanago.PublicKeySlice {
	return obj.PublicKeySlice
}

func (*CreateConfig) TypeID() binary.TypeID {
	return binary.TypeIDFromBytes(Instruction_CreateConfig)
}

func (*CreateConfig) NewInstance() programparser.Instruction {
	return new(CreateConfig)
}

func (obj *CreateConfig) GetRemainingAccounts() solanago.PublicKeySlice {
	return obj.PublicKeySlice[5:]
}

// Builds a "create_config" instruction.
func NewCreateConfigInstruction(
	// Params:
	lpFeeBasisPointsParam uint64,
	protocolFeeBasisPointsParam uint64,
	protocolFeeRecipientsParam [8]solanago.PublicKey,
	coinCreatorFeeBasisPointsParam uint64,
	adminSetCoinCreatorAuthorityParam solanago.PublicKey,

	// Accounts:
	globalConfig solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) (*solanago.GenericInstruction, error) {
	var (
		err    error
		buf__  = new(bytes.Buffer)
		enc__  = binary.NewBorshEncoder(buf__)
		metas_ = make(solanago.AccountMetaSlice, 5, 5+len(remaining__))
	)

	// Encode the instruction discriminator.
	if err = enc__.WriteBytes(Instruction_CreateConfig[:], false); err != nil {
		return nil, fmt.Errorf("failed to write instruction discriminator: %w", err)
	}

	{
		// Serialize `lpFeeBasisPointsParam`:
		if err = enc__.Encode(lpFeeBasisPointsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling lpFeeBasisPointsParam:%w", err)
		}
		// Serialize `protocolFeeBasisPointsParam`:
		if err = enc__.Encode(protocolFeeBasisPointsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling protocolFeeBasisPointsParam:%w", err)
		}
		// Serialize `protocolFeeRecipientsParam`:
		if err = enc__.Encode(protocolFeeRecipientsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling protocolFeeRecipientsParam:%w", err)
		}
		// Serialize `coinCreatorFeeBasisPointsParam`:
		if err = enc__.Encode(coinCreatorFeeBasisPointsParam); err != nil {
			return nil, fmt.Errorf("error while marshaling coinCreatorFeeBasisPointsParam:%w", err)
		}
		// Serialize `adminSetCoinCreatorAuthorityParam`:
		if err = enc__.Encode(adminSetCoinCreatorAuthorityParam); err != nil {
			return nil, fmt.Errorf("error while marshaling adminSetCoinCreatorAuthorityParam:%w", err)
		}
	}

	// Add the accounts to the instruction.
	{
		// [0] = [writable,signer] admin[8LWu7QM2dGR1G8nKDHthckea57bkCzXyBTAKPJUBDHo8]
		metas_[0] = solanago.NewAccountMeta(Admin, true, true)
		// [1] = [writable] global_config
		metas_[1] = solanago.NewAccountMeta(globalConfig, true, false)
		// [2] = [] system_program
		metas_[2] = solanago.NewAccountMeta(SystemProgram, false, false)
		// [3] = [] event_authority
		metas_[3] = solanago.NewAccountMeta(eventAuthority, false, false)
		// [4] = [] program
		metas_[4] = solanago.NewAccountMeta(program, false, false)
		// append remaining metas
		metas_ = append(metas_, remaining__...)
	}

	// Create the instruction.
	return solanago.NewInstruction(
		ProgramID,
		metas_,
		buf__.Bytes(),
	), nil
}

// Builds a "BuildCreateConfig" instruction.
func BuildCreateConfig(
	// Params:
	lpFeeBasisPointsParam uint64,
	protocolFeeBasisPointsParam uint64,
	protocolFeeRecipientsParam [8]solanago.PublicKey,
	coinCreatorFeeBasisPointsParam uint64,
	adminSetCoinCreatorAuthorityParam solanago.PublicKey,

	// Accounts:
	globalConfig solanago.PublicKey,
	eventAuthority solanago.PublicKey,
	program solanago.PublicKey,
	remaining__ ...*solanago.AccountMeta,
) *solanago.GenericInstruction {
	instruction_, _ := NewCreateConfigInstruction(
		lpFeeBasisPointsParam,
		protocolFeeBasisPointsParam,
		protocolFeeRecipientsParam,
		coinCreatorFeeBasisPointsParam,
		adminSetCoinCreatorAuthorityParam,
		globalConfig,
		eventAuthority,
		program,
		remaining__...,
	)
	return instruction_
}

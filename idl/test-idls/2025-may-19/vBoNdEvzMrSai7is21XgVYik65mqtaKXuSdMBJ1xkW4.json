{"version":"2.1.0","name":"validator_bonds","constants":[{"name":"PROGRAM_ID","type":"string","value":"\"vBoNdEvzMrSai7is21XgVYik65mqtaKXuSdMBJ1xkW4\""},{"name":"BOND_SEED","type":"bytes","value":"[98, 111, 110, 100, 95, 97, 99, 99, 111, 117, 110, 116]"},{"name":"BOND_MINT_SEED","type":"bytes","value":"[98, 111, 110, 100, 95, 109, 105, 110, 116]"},{"name":"SETTLEMENT_SEED","type":"bytes","value":"[115, 101, 116, 116, 108, 101, 109, 101, 110, 116, 95, 97, 99, 99, 111, 117, 110, 116]"},{"name":"WITHDRAW_REQUEST_SEED","type":"bytes","value":"[119, 105, 116, 104, 100, 114, 97, 119, 95, 97, 99, 99, 111, 117, 110, 116]"},{"name":"BONDS_WITHDRAWER_AUTHORITY_SEED","type":"bytes","value":"[98, 111, 110, 100, 115, 95, 97, 117, 116, 104, 111, 114, 105, 116, 121]"},{"name":"SETTLEMENT_STAKER_AUTHORITY_SEED","type":"bytes","value":"[115, 101, 116, 116, 108, 101, 109, 101, 110, 116, 95, 97, 117, 116, 104, 111, 114, 105, 116, 121]"},{"name":"SETTLEMENT_CLAIMS_SEED","type":"bytes","value":"[99, 108, 97, 105, 109, 115, 95, 97, 99, 99, 111, 117, 110, 116]"},{"name":"SETTLEMENT_CLAIMS_ANCHOR_HEADER_SIZE","type":"u8","value":"56"},{"name":"SETTLEMENT_CLAIM_SEED","type":"bytes","value":"[99, 108, 97, 105, 109, 95, 97, 99, 99, 111, 117, 110, 116]"}],"instructions":[{"name":"initConfig","accounts":[{"name":"config","isMut":true,"isSigner":true},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer for the config account"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"initConfigArgs","type":{"defined":"InitConfigArgs"}}]},{"name":"configureConfig","accounts":[{"name":"config","isMut":true,"isSigner":false,"relations":["admin_authority"]},{"name":"adminAuthority","isMut":false,"isSigner":true,"docs":["only the admin authority can change the config params"]},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"configureConfigArgs","type":{"defined":"ConfigureConfigArgs"}}]},{"name":"initBond","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the bond is created"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"validatorIdentity","isMut":false,"isSigner":true,"isOptional":true,"docs":["permission-ed: the validator identity signs the instruction, InitBondArgs applied","permission-less: no signature, default init bond configuration"]},{"name":"bond","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]}},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer of validator bond account creation"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"initBondArgs","type":{"defined":"InitBondArgs"}}]},{"name":"configureBond","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["vote_account","config"]},{"name":"authority","isMut":false,"isSigner":true,"docs":["validator vote account validator identity or bond authority may change the account"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"configureBondArgs","type":{"defined":"ConfigureBondArgs"}}]},{"name":"configureBondWithMint","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"mint","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_mint"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"arg","type":{"defined":"ConfigureBondWithMintArgs"},"path":"params.validator_identity"}]}},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"tokenAccount","isMut":true,"isSigner":false,"docs":["token account to burn bond mint configuration tokens from"]},{"name":"tokenAuthority","isMut":false,"isSigner":true},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"args","type":{"defined":"ConfigureBondWithMintArgs"}}]},{"name":"mintBond","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"mint","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_mint"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"account","type":"publicKey","path":"validator_identity"}]}},{"name":"validatorIdentity","isMut":false,"isSigner":false},{"name":"validatorIdentityTokenAccount","isMut":true,"isSigner":false},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"metadata","isMut":true,"isSigner":false},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer of account creation"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"associatedTokenProgram","isMut":false,"isSigner":false},{"name":"metadataProgram","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"fundBond","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":false,"isSigner":false,"docs":["bond account to be deposited to with the provided stake account"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond.vote_account"}]},"relations":["config"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"docs":["new owner of the stake_account, it's the bonds withdrawer authority"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"stakeAccount","isMut":true,"isSigner":false,"docs":["stake account to be deposited"]},{"name":"stakeAuthority","isMut":false,"isSigner":true,"docs":["authority signature permitting to change the stake_account authorities"]},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"initWithdrawRequest","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the bond was created"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"authority","isMut":false,"isSigner":true,"docs":["validator vote account node identity or bond authority may ask for the withdrawal"]},{"name":"withdrawRequest","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"withdraw_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"}]}},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer of withdraw request account creation"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"createWithdrawRequestArgs","type":{"defined":"InitWithdrawRequestArgs"}}]},{"name":"cancelWithdrawRequest","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["vote_account","config"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"authority","isMut":false,"isSigner":true,"docs":["validator vote account validator identity or bond authority may ask for cancelling"]},{"name":"withdrawRequest","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"withdraw_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"}]},"relations":["bond"]},{"name":"rentCollector","isMut":true,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"claimWithdrawRequest","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config root configuration account"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"authority","isMut":false,"isSigner":true,"docs":["validator vote account node identity or bond authority may claim"]},{"name":"withdrawRequest","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"withdraw_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"}]},"relations":["vote_account","bond"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"stakeAccount","isMut":true,"isSigner":false,"docs":["stake account to be used to withdraw the funds","this stake account has to be delegated to the validator vote account associated to the bond"]},{"name":"withdrawer","isMut":false,"isSigner":false,"docs":["New owner of the stake account, it will be accounted to the withdrawer authority"]},{"name":"splitStakeAccount","isMut":true,"isSigner":true,"docs":["this is a whatever address that does not exist","when withdrawing needs to split the provided account this will be used as a new stake account"]},{"name":"splitStakeRentPayer","isMut":true,"isSigner":true,"docs":["when the split_stake_account is created the rent for creation is taken from here","when the split_stake_account is not created then no rent is paid"]},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"initSettlement","accounts":[{"name":"config","isMut":false,"isSigner":false,"relations":["operator_authority"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond.vote_account"}]},"relations":["config"]},{"name":"settlement","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"arg","type":{"defined":"InitSettlementArgs"},"path":"params.merkle_root"},{"kind":"arg","type":{"defined":"InitSettlementArgs"},"path":"params.epoch"}]}},{"name":"settlementClaims","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"claims_account"},{"kind":"account","type":"publicKey","account":"Settlement","path":"settlement"}]}},{"name":"operatorAuthority","isMut":false,"isSigner":true,"docs":["operator signer authority that is allowed to create the settlement account"]},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer of account creation"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"initSettlementArgs","type":{"defined":"InitSettlementArgs"}}]},{"name":"upsizeSettlementClaims","accounts":[{"name":"settlementClaims","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"claims_account"},{"kind":"account","type":"publicKey","account":"SettlementClaims","path":"settlement_claims.settlement"}]}},{"name":"rentPayer","isMut":true,"isSigner":true,"docs":["rent exempt payer of account reallocation"]},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"cancelSettlement","accounts":[{"name":"config","isMut":true,"isSigner":false},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond.vote_account"}]},"relations":["config"]},{"name":"settlement","isMut":true,"isSigner":false,"docs":["settlement to close whenever the operator decides"],"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"account","type":{"array":["u8",32]},"account":"Settlement","path":"settlement.merkle_root"},{"kind":"account","type":"u64","account":"Settlement","path":"settlement.epoch_created_for"}]},"relations":["bond","rent_collector"]},{"name":"settlementClaims","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"claims_account"},{"kind":"account","type":"publicKey","account":"Settlement","path":"settlement"}]},"relations":["settlement"]},{"name":"authority","isMut":false,"isSigner":true,"docs":["Cancelling is permitted only to emergency or operator authority"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"rentCollector","isMut":true,"isSigner":false},{"name":"splitRentCollector","isMut":true,"isSigner":false},{"name":"splitRentRefundAccount","isMut":true,"isSigner":false,"docs":["The stake account is funded to the settlement and credited to the bond's validator vote account.","The lamports are utilized to pay back the rent exemption of the split_stake_account"]},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"fundSettlement","accounts":[{"name":"config","isMut":false,"isSigner":false,"relations":["operator_authority"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"settlement","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"account","type":{"array":["u8",32]},"account":"Settlement","path":"settlement.merkle_root"},{"kind":"account","type":"u64","account":"Settlement","path":"settlement.epoch_created_for"}]},"relations":["bond"]},{"name":"operatorAuthority","isMut":false,"isSigner":true,"docs":["operator signer authority is allowed to fund the settlement account"]},{"name":"stakeAccount","isMut":true,"isSigner":false,"docs":["stake account to be funded into the settlement"]},{"name":"settlementStakerAuthority","isMut":false,"isSigner":false,"docs":["the settlement stake authority differentiates between deposited and funded stake accounts","deposited accounts have the bonds_withdrawer_authority, while funded accounts have the settlement_staker_authority"],"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_authority"},{"kind":"account","type":"publicKey","account":"Settlement","path":"settlement"}]}},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"docs":["authority that manages (owns) all stakes account under the bonds program"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"splitStakeAccount","isMut":true,"isSigner":true,"docs":["if an account that does not exist is provided, it will be initialized as a stake account (with the necessary signature)","the split_stake_account is required when the provided stake_account contains more lamports than necessary to fund the settlement","in this case, the excess lamports from the stake account are split into the new split_stake_account,","if the split_stake_account is not needed, the rent payer is refunded back within tx"]},{"name":"splitStakeRentPayer","isMut":true,"isSigner":true,"docs":["the rent exempt payer of the split_stake_account creation","if the split_stake_account is not needed (no leftover lamports on funding), then the rent payer is refunded","if the split_stake_account is needed to spill out over funding of the settlement,","then the rent payer is refunded when the settlement is closed"]},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"stakeConfig","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"mergeStake","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the bond was created"]},{"name":"sourceStake","isMut":true,"isSigner":false},{"name":"destinationStake","isMut":true,"isSigner":false},{"name":"stakerAuthority","isMut":false,"isSigner":false,"docs":["bonds program authority PDA address: settlement staker or bonds withdrawer"]},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"mergeArgs","type":{"defined":"MergeStakeArgs"}}]},{"name":"resetStake","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the bond was created"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","path":"vote_account"}]},"relations":["config","vote_account"]},{"name":"settlement","isMut":false,"isSigner":false,"docs":["cannot exist; used to derive settlement authority"]},{"name":"stakeAccount","isMut":true,"isSigner":false,"docs":["stake account belonging under the settlement by staker authority"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"docs":["bonds withdrawer authority","to cancel settlement funding of the stake account changing staker authority to address"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"voteAccount","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"stakeConfig","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"withdrawStake","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the bond was created"],"relations":["operator_authority"]},{"name":"operatorAuthority","isMut":false,"isSigner":true,"docs":["operator authority is allowed to reset the non-delegated stake accounts"]},{"name":"settlement","isMut":false,"isSigner":false,"docs":["cannot exist; used to derive settlement authority"]},{"name":"stakeAccount","isMut":true,"isSigner":false,"docs":["stake account where staker authority is derived from settlement"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"docs":["bonds authority to withdraw the stake account"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"withdrawTo","isMut":true,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"emergencyPause","accounts":[{"name":"config","isMut":true,"isSigner":false,"relations":["pause_authority"]},{"name":"pauseAuthority","isMut":false,"isSigner":true},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"emergencyResume","accounts":[{"name":"config","isMut":true,"isSigner":false,"relations":["pause_authority"]},{"name":"pauseAuthority","isMut":false,"isSigner":true},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"closeSettlementV2","accounts":[{"name":"config","isMut":false,"isSigner":false},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond.vote_account"}]},"relations":["config"]},{"name":"settlement","isMut":true,"isSigner":false,"docs":["settlement to close when expired"],"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"account","type":{"array":["u8",32]},"account":"Settlement","path":"settlement.merkle_root"},{"kind":"account","type":"u64","account":"Settlement","path":"settlement.epoch_created_for"}]},"relations":["bond","rent_collector"]},{"name":"settlementClaims","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"claims_account"},{"kind":"account","type":"publicKey","account":"Settlement","path":"settlement"}]},"relations":["settlement"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"rentCollector","isMut":true,"isSigner":false},{"name":"splitRentCollector","isMut":true,"isSigner":false},{"name":"splitRentRefundAccount","isMut":true,"isSigner":false,"docs":["The stake account is funded to the settlement and credited to the bond's validator vote account.","The lamports are utilized to pay back the rent exemption of the split_stake_account, which can be created upon funding the settlement."]},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[]},{"name":"claimSettlementV2","accounts":[{"name":"config","isMut":false,"isSigner":false,"docs":["the config account under which the settlement was created"]},{"name":"bond","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"bond_account"},{"kind":"account","type":"publicKey","account":"Config","path":"config"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond.vote_account"}]},"relations":["config"]},{"name":"settlement","isMut":true,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"settlement_account"},{"kind":"account","type":"publicKey","account":"Bond","path":"bond"},{"kind":"account","type":{"array":["u8",32]},"account":"Settlement","path":"settlement.merkle_root"},{"kind":"account","type":"u64","account":"Settlement","path":"settlement.epoch_created_for"}]},"relations":["bond"]},{"name":"settlementClaims","isMut":true,"isSigner":false,"docs":["deduplication, merkle tree record cannot be claimed twice"],"pda":{"seeds":[{"kind":"const","type":"string","value":"claims_account"},{"kind":"account","type":"publicKey","account":"Settlement","path":"settlement"}]},"relations":["settlement"]},{"name":"stakeAccountFrom","isMut":true,"isSigner":false,"docs":["a stake account that will be withdrawn"]},{"name":"stakeAccountTo","isMut":true,"isSigner":false,"docs":["a stake account that will receive the funds"]},{"name":"bondsWithdrawerAuthority","isMut":false,"isSigner":false,"docs":["authority that manages (owns == by being withdrawer authority) all stakes account under the bonds program"],"pda":{"seeds":[{"kind":"const","type":"string","value":"bonds_authority"},{"kind":"account","type":"publicKey","account":"Config","path":"config"}]}},{"name":"stakeHistory","isMut":false,"isSigner":false},{"name":"clock","isMut":false,"isSigner":false},{"name":"stakeProgram","isMut":false,"isSigner":false},{"name":"eventAuthority","isMut":false,"isSigner":false,"pda":{"seeds":[{"kind":"const","type":"string","value":"__event_authority"}]}},{"name":"program","isMut":false,"isSigner":false}],"args":[{"name":"claimSettlementArgs","type":{"defined":"ClaimSettlementV2Args"}}]}],"accounts":[{"name":"SettlementClaim","docs":["The settlement claim serves for deduplication purposes,","preventing the same settlement from being claimed multiple times with the same claiming data"],"type":{"kind":"struct","fields":[{"name":"settlement","docs":["settlement account this claim belongs under"],"type":"publicKey"},{"name":"stakeAccountTo","docs":["stake account to which the claim has been withdrawn to"],"type":"publicKey"},{"name":"stakeAccountStaker","docs":["staker authority as part of the merkle proof for this claim"],"type":"publicKey"},{"name":"stakeAccountWithdrawer","docs":["withdrawer authority as part of the merkle proof for this claim"],"type":"publicKey"},{"name":"amount","docs":["claim amount"],"type":"u64"},{"name":"bump","docs":["PDA account bump, one claim per settlement"],"type":"u8"},{"name":"rentCollector","docs":["rent collector account to get the rent back for claim account creation"],"type":"publicKey"},{"name":"reserved","docs":["reserve space for future extensions"],"type":{"array":["u8",93]}}]}},{"name":"Bond","docs":["Bond account for a validator vote address"],"type":{"kind":"struct","fields":[{"name":"config","docs":["Program root config address. Validator bond is created for this config as PDA"],"type":"publicKey"},{"name":"voteAccount","docs":["Validator vote address that this bond account is crated for","INVARIANTS:","- one bond account per validator vote address","- this program does NOT change stake account delegation voter_pubkey to any other validator vote account"],"type":"publicKey"},{"name":"authority","docs":["Authority that may close the bond or withdraw stake accounts associated with the bond","The same powers has got the owner of the validator vote account"],"type":"publicKey"},{"name":"cpmpe","docs":["Cost per mille per epoch.","This field represents the bid the bond (vote) account owner is willing to pay","for up to the `max_stake_wanted` being delegated.","The bid is in cost per mille per epoch similar to Google ads cpm system.","---","The actual amount of lamports deducted from the bond account for the processed bid","is based on the actual delegated lamports during the epoch."],"type":"u64"},{"name":"bump","docs":["PDA Bond address bump seed"],"type":"u8"},{"name":"maxStakeWanted","docs":["Maximum stake (in lamports) that the bond (vote) account owner requests.","This is the maximum stake that will be distributed to the vote account","when all other constraints are fulfilled (managed off-chain).","The vote account owner then goes to auction to obtain up to that maximum.","Use the `cpmpe` field to define the bid for this purpose."],"type":"u64"},{"name":"reserved","docs":["reserve space for future extensions"],"type":{"array":["u8",134]}}]}},{"name":"Config","docs":["Root account that configures the validator bonds program"],"type":{"kind":"struct","fields":[{"name":"adminAuthority","docs":["Admin authority that can update the config"],"type":"publicKey"},{"name":"operatorAuthority","docs":["Operator authority (bot hot wallet)"],"type":"publicKey"},{"name":"epochsToClaimSettlement","docs":["How many epochs permitting to claim the settlement"],"type":"u64"},{"name":"withdrawLockupEpochs","docs":["How many epochs before withdraw is allowed"],"type":"u64"},{"name":"minimumStakeLamports","docs":["Minimum amount of lamports to be considered for a stake account operations (e.g., split)"],"type":"u64"},{"name":"bondsWithdrawerAuthorityBump","docs":["PDA bonds stake accounts authority bump seed"],"type":"u8"},{"name":"pauseAuthority","docs":["Authority that can pause the program in case of emergency"],"type":"publicKey"},{"name":"paused","type":"bool"},{"name":"slotsToStartSettlementClaiming","docs":["How many slots to wait before settlement is permitted to be claimed"],"type":"u64"},{"name":"minBondMaxStakeWanted","docs":["Minimum value of max_stake_wanted to be configured by vote account owners at bond."],"type":"u64"},{"name":"reserved","docs":["reserved space for future changes"],"type":{"array":["u8",463]}}]}},{"name":"SettlementClaims","docs":["Account serving to deduplicate claiming, consists of anchor data as metaata header and bitmap in the remaining space."],"type":{"kind":"struct","fields":[{"name":"settlement","type":"publicKey"},{"name":"version","type":"u8"},{"name":"maxRecords","type":"u64"}]}},{"name":"Settlement","docs":["Settlement account for a particular config and merkle root","Settlement defines that a protected event happened and it will be settled"],"type":{"kind":"struct","fields":[{"name":"bond","docs":["the settlement belongs under this bond, i.e., under a particular validator vote account"],"type":"publicKey"},{"name":"stakerAuthority","docs":["settlement authority used as the 'staker' stake account authority","of stake accounts funded to this settlement"],"type":"publicKey"},{"name":"merkleRoot","docs":["256-bit merkle root to check the claims against"],"type":{"array":["u8",32]}},{"name":"maxTotalClaim","docs":["maximum number of funds that can ever be claimed"],"type":"u64"},{"name":"maxMerkleNodes","docs":["maximum number of merkle tree nodes that can ever be claimed"],"type":"u64"},{"name":"lamportsFunded","docs":["total lamports funded"],"type":"u64"},{"name":"lamportsClaimed","docs":["total lamports that have been claimed"],"type":"u64"},{"name":"merkleNodesClaimed","docs":["number of nodes that have been claimed"],"type":"u64"},{"name":"epochCreatedFor","docs":["what epoch the Settlement has been created for"],"type":"u64"},{"name":"slotCreatedAt","docs":["when the Settlement was created"],"type":"u64"},{"name":"rentCollector","docs":["address that collects the rent exempt from the Settlement account when closed"],"type":"publicKey"},{"name":"splitRentCollector","docs":["address that collects rent exempt for \"split stake account\" possibly created on funding settlement"],"type":{"option":"publicKey"}},{"name":"splitRentAmount","docs":["amount of lamports that are collected for rent exempt for \"split stake account\""],"type":"u64"},{"name":"bumps","docs":["PDA bumps"],"type":{"defined":"Bumps"}},{"name":"reserved","docs":["reserve space for future extensions"],"type":{"array":["u8",90]}}]}},{"name":"WithdrawRequest","docs":["Request from a validator to withdraw the bond"],"type":{"kind":"struct","fields":[{"name":"voteAccount","docs":["Validator vote account that requested the withdrawal"],"type":"publicKey"},{"name":"bond","docs":["Bond account that the withdraw request is for (has to match with vote_account)"],"type":"publicKey"},{"name":"epoch","docs":["Epoch when the withdrawal was requested, i.e., when this \"ticket\" is created"],"type":"u64"},{"name":"requestedAmount","docs":["Amount of lamports to withdraw"],"type":"u64"},{"name":"withdrawnAmount","docs":["Amount of lamports withdrawn so far"],"type":"u64"},{"name":"bump","docs":["PDA account bump"],"type":"u8"},{"name":"reserved","docs":["reserve space for future extensions"],"type":{"array":["u8",93]}}]}}],"types":[{"name":"PubkeyValueChange","type":{"kind":"struct","fields":[{"name":"old","type":"publicKey"},{"name":"new","type":"publicKey"}]}},{"name":"U64ValueChange","type":{"kind":"struct","fields":[{"name":"old","type":"u64"},{"name":"new","type":"u64"}]}},{"name":"DelegationInfo","type":{"kind":"struct","fields":[{"name":"voterPubkey","docs":["to whom the stake is delegated"],"type":"publicKey"},{"name":"stake","docs":["activated stake amount, set at delegate() time"],"type":"u64"},{"name":"activationEpoch","docs":["epoch at which this stake was activated, std::Epoch::MAX if is a bootstrap stake"],"type":"u64"},{"name":"deactivationEpoch","docs":["epoch the stake was deactivated, std::Epoch::MAX if not deactivated"],"type":"u64"}]}},{"name":"SplitStakeData","type":{"kind":"struct","fields":[{"name":"address","type":"publicKey"},{"name":"amount","type":"u64"}]}},{"name":"ConfigureBondWithMintArgs","type":{"kind":"struct","fields":[{"name":"validatorIdentity","docs":["Validator identity configured within the vote account."],"type":"publicKey"},{"name":"bondAuthority","docs":["New bond authority that can manage the bond account."],"type":{"option":"publicKey"}},{"name":"cpmpe","docs":["New `cpmpe` value (cost per mille per epoch).","It defines the bid for the validator to get delegated up to `max_stake_wanted` lamports."],"type":{"option":"u64"}},{"name":"maxStakeWanted","docs":["new max_stake_wanted value that vote account owner declares","as the maximum delegated stake wanted"],"type":{"option":"u64"}}]}},{"name":"ConfigureBondArgs","type":{"kind":"struct","fields":[{"name":"bondAuthority","docs":["New bond authority that can manage the bond account."],"type":{"option":"publicKey"}},{"name":"cpmpe","docs":["New `cpmpe` value (cost per mille per epoch).","It defines the bid for the validator to get delegated up to `max_stake_wanted` lamports."],"type":{"option":"u64"}},{"name":"maxStakeWanted","docs":["New `max_stake_wanted` value that the vote account owner declares","as the maximum delegated stake desired."],"type":{"option":"u64"}}]}},{"name":"InitBondArgs","type":{"kind":"struct","fields":[{"name":"bondAuthority","type":"publicKey"},{"name":"cpmpe","type":"u64"},{"name":"maxStakeWanted","type":"u64"}]}},{"name":"ConfigureConfigArgs","type":{"kind":"struct","fields":[{"name":"admin","type":{"option":"publicKey"}},{"name":"operator","type":{"option":"publicKey"}},{"name":"pauseAuthority","type":{"option":"publicKey"}},{"name":"epochsToClaimSettlement","type":{"option":"u64"}},{"name":"withdrawLockupEpochs","type":{"option":"u64"}},{"name":"minimumStakeLamports","type":{"option":"u64"}},{"name":"slotsToStartSettlementClaiming","type":{"option":"u64"}},{"name":"minBondMaxStakeWanted","type":{"option":"u64"}}]}},{"name":"InitConfigArgs","type":{"kind":"struct","fields":[{"name":"adminAuthority","type":"publicKey"},{"name":"operatorAuthority","type":"publicKey"},{"name":"epochsToClaimSettlement","type":"u64"},{"name":"withdrawLockupEpochs","type":"u64"},{"name":"slotsToStartSettlementClaiming","type":"u64"}]}},{"name":"ClaimSettlementV2Args","type":{"kind":"struct","fields":[{"name":"proof","docs":["proof that the claim is appropriate"],"type":{"vec":{"array":["u8",32]}}},{"name":"treeNodeHash","type":{"array":["u8",32]}},{"name":"stakeAccountStaker","docs":["staker authority of the stake_account_to; merkle root verification"],"type":"publicKey"},{"name":"stakeAccountWithdrawer","docs":["withdrawer authority of the stake_account_to; merkle root verification"],"type":"publicKey"},{"name":"claim","docs":["claim amount; merkle root verification"],"type":"u64"},{"name":"index","docs":["index, ordered claim record in the settlement list; merkle root verification"],"type":"u64"}]}},{"name":"InitSettlementArgs","type":{"kind":"struct","fields":[{"name":"merkleRoot","docs":["merkle root for this settlement, multiple settlements can be created with the same merkle root,","settlements will be distinguished by the vote_account"],"type":{"array":["u8",32]}},{"name":"maxTotalClaim","docs":["maximal number of lamports that can be claimed from this settlement"],"type":"u64"},{"name":"maxMerkleNodes","docs":["maximal number of merkle tree nodes that can be claimed from this settlement"],"type":"u64"},{"name":"rentCollector","docs":["collects the rent exempt from the settlement account when closed"],"type":"publicKey"},{"name":"epoch","docs":["epoch that the settlement is created for"],"type":"u64"}]}},{"name":"MergeStakeArgs","type":{"kind":"struct","fields":[{"name":"settlement","type":"publicKey"}]}},{"name":"InitWithdrawRequestArgs","type":{"kind":"struct","fields":[{"name":"amount","type":"u64"}]}},{"name":"Bumps","type":{"kind":"struct","fields":[{"name":"pda","type":"u8"},{"name":"stakerAuthority","type":"u8"},{"name":"settlementClaims","type":"u8"}]}}],"events":[{"name":"InitBondEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"config","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"validatorIdentity","type":"publicKey","index":false},{"name":"authority","type":"publicKey","index":false},{"name":"cpmpe","type":"u64","index":false},{"name":"maxStakeWanted","type":"u64","index":false}]},{"name":"ConfigureBondEvent","fields":[{"name":"bondAuthority","type":{"option":{"defined":"PubkeyValueChange"}},"index":false},{"name":"cpmpe","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"maxStakeWanted","type":{"option":{"defined":"U64ValueChange"}},"index":false}]},{"name":"ConfigureBondWithMintEvent","fields":[{"name":"validatorIdentity","type":"publicKey","index":false},{"name":"bondAuthority","type":{"option":{"defined":"PubkeyValueChange"}},"index":false},{"name":"cpmpe","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"maxStakeWanted","type":{"option":{"defined":"U64ValueChange"}},"index":false}]},{"name":"FundBondEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"stakeAccount","type":"publicKey","index":false},{"name":"stakeAuthoritySigner","type":"publicKey","index":false},{"name":"depositedAmount","type":"u64","index":false}]},{"name":"MintBondEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"validatorIdentity","type":"publicKey","index":false},{"name":"validatorIdentityTokenAccount","type":"publicKey","index":false},{"name":"tokenMetadata","type":"publicKey","index":false}]},{"name":"InitConfigEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"adminAuthority","type":"publicKey","index":false},{"name":"operatorAuthority","type":"publicKey","index":false},{"name":"withdrawLockupEpochs","type":"u64","index":false},{"name":"epochsToClaimSettlement","type":"u64","index":false},{"name":"minimumStakeLamports","type":"u64","index":false},{"name":"bondsWithdrawerAuthority","type":"publicKey","index":false},{"name":"slotsToStartSettlementClaiming","type":"u64","index":false}]},{"name":"ConfigureConfigEvent","fields":[{"name":"adminAuthority","type":{"option":{"defined":"PubkeyValueChange"}},"index":false},{"name":"operatorAuthority","type":{"option":{"defined":"PubkeyValueChange"}},"index":false},{"name":"pauseAuthority","type":{"option":{"defined":"PubkeyValueChange"}},"index":false},{"name":"epochsToClaimSettlement","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"minimumStakeLamports","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"withdrawLockupEpochs","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"slotsToStartSettlementClaiming","type":{"option":{"defined":"U64ValueChange"}},"index":false},{"name":"minBondMaxStakeWanted","type":{"option":{"defined":"U64ValueChange"}},"index":false}]},{"name":"EmergencyPauseEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"adminAuthority","type":"publicKey","index":false},{"name":"operatorAuthority","type":"publicKey","index":false},{"name":"epochsToClaimSettlement","type":"u64","index":false},{"name":"withdrawLockupEpochs","type":"u64","index":false},{"name":"minimumStakeLamports","type":"u64","index":false},{"name":"pauseAuthority","type":"publicKey","index":false}]},{"name":"EmergencyResumeEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"adminAuthority","type":"publicKey","index":false},{"name":"operatorAuthority","type":"publicKey","index":false},{"name":"epochsToClaimSettlement","type":"u64","index":false},{"name":"withdrawLockupEpochs","type":"u64","index":false},{"name":"minimumStakeLamports","type":"u64","index":false},{"name":"pauseAuthority","type":"publicKey","index":false}]},{"name":"ClaimSettlementV2Event","fields":[{"name":"settlement","type":"publicKey","index":false},{"name":"settlementLamportsClaimed","type":{"defined":"U64ValueChange"},"index":false},{"name":"settlementMerkleNodesClaimed","type":"u64","index":false},{"name":"stakeAccountTo","type":"publicKey","index":false},{"name":"stakeAccountWithdrawer","type":"publicKey","index":false},{"name":"stakeAccountStaker","type":"publicKey","index":false},{"name":"amount","type":"u64","index":false},{"name":"index","type":"u64","index":false}]},{"name":"InitSettlementEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"stakerAuthority","type":"publicKey","index":false},{"name":"merkleRoot","type":{"array":["u8",32]},"index":false},{"name":"maxTotalClaim","type":"u64","index":false},{"name":"maxMerkleNodes","type":"u64","index":false},{"name":"epochCreatedFor","type":"u64","index":false},{"name":"slotCreatedAt","type":"u64","index":false},{"name":"rentCollector","type":"publicKey","index":false}]},{"name":"CloseSettlementEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"merkleRoot","type":{"array":["u8",32]},"index":false},{"name":"maxTotalClaim","type":"u64","index":false},{"name":"maxMerkleNodes","type":"u64","index":false},{"name":"lamportsFunded","type":"u64","index":false},{"name":"lamportsClaimed","type":"u64","index":false},{"name":"merkleNodesClaimed","type":"u64","index":false},{"name":"splitRentCollector","type":{"option":"publicKey"},"index":false},{"name":"splitRentRefund","type":{"option":"publicKey"},"index":false},{"name":"rentCollector","type":"publicKey","index":false},{"name":"expirationEpoch","type":"u64","index":false},{"name":"currentEpoch","type":"u64","index":false}]},{"name":"CancelSettlementEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"merkleRoot","type":{"array":["u8",32]},"index":false},{"name":"maxTotalClaim","type":"u64","index":false},{"name":"maxMerkleNodes","type":"u64","index":false},{"name":"lamportsFunded","type":"u64","index":false},{"name":"lamportsClaimed","type":"u64","index":false},{"name":"merkleNodesClaimed","type":"u64","index":false},{"name":"splitRentCollector","type":{"option":"publicKey"},"index":false},{"name":"splitRentRefund","type":{"option":"publicKey"},"index":false},{"name":"rentCollector","type":"publicKey","index":false},{"name":"authority","type":"publicKey","index":false}]},{"name":"FundSettlementEvent","fields":[{"name":"bond","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"fundingAmount","type":"u64","index":false},{"name":"stakeAccount","type":"publicKey","index":false},{"name":"lamportsFunded","type":"u64","index":false},{"name":"lamportsClaimed","type":"u64","index":false},{"name":"merkleNodesClaimed","type":"u64","index":false},{"name":"splitStakeAccount","type":{"option":{"defined":"SplitStakeData"}},"index":false},{"name":"splitRentCollector","type":{"option":"publicKey"},"index":false},{"name":"splitRentAmount","type":"u64","index":false}]},{"name":"MergeStakeEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"stakerAuthority","type":"publicKey","index":false},{"name":"destinationStake","type":"publicKey","index":false},{"name":"destinationDelegation","type":{"option":{"defined":"DelegationInfo"}},"index":false},{"name":"sourceStake","type":"publicKey","index":false},{"name":"sourceDelegation","type":{"option":{"defined":"DelegationInfo"}},"index":false}]},{"name":"ResetStakeEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"bond","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"stakeAccount","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"settlementStakerAuthority","type":"publicKey","index":false}]},{"name":"WithdrawStakeEvent","fields":[{"name":"config","type":"publicKey","index":false},{"name":"operatorAuthority","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"stakeAccount","type":"publicKey","index":false},{"name":"withdrawTo","type":"publicKey","index":false},{"name":"settlementStakerAuthority","type":"publicKey","index":false},{"name":"withdrawnAmount","type":"u64","index":false}]},{"name":"InitWithdrawRequestEvent","fields":[{"name":"withdrawRequest","type":"publicKey","index":false},{"name":"bond","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"epoch","type":"u64","index":false},{"name":"requestedAmount","type":"u64","index":false}]},{"name":"CancelWithdrawRequestEvent","fields":[{"name":"withdrawRequest","type":"publicKey","index":false},{"name":"bond","type":"publicKey","index":false},{"name":"authority","type":"publicKey","index":false},{"name":"requestedAmount","type":"u64","index":false},{"name":"withdrawnAmount","type":"u64","index":false}]},{"name":"ClaimWithdrawRequestEvent","fields":[{"name":"withdrawRequest","type":"publicKey","index":false},{"name":"bond","type":"publicKey","index":false},{"name":"voteAccount","type":"publicKey","index":false},{"name":"stakeAccount","type":"publicKey","index":false},{"name":"splitStake","type":{"option":{"defined":"SplitStakeData"}},"index":false},{"name":"newStakeAccountOwner","type":"publicKey","index":false},{"name":"withdrawingAmount","type":"u64","index":false},{"name":"withdrawnAmount","type":{"defined":"U64ValueChange"},"index":false}]},{"name":"ClaimSettlementEvent","fields":[{"name":"settlementClaim","type":"publicKey","index":false},{"name":"settlement","type":"publicKey","index":false},{"name":"settlementLamportsClaimed","type":{"defined":"U64ValueChange"},"index":false},{"name":"settlementMerkleNodesClaimed","type":"u64","index":false},{"name":"stakeAccountTo","type":"publicKey","index":false},{"name":"stakeAccountWithdrawer","type":"publicKey","index":false},{"name":"stakeAccountStaker","type":"publicKey","index":false},{"name":"amount","type":"u64","index":false},{"name":"rentCollector","type":"publicKey","index":false}]}],"errors":[{"code":6000,"name":"InvalidProgramId","msg":"Program id in context does not match with the validator bonds id"},{"code":6001,"name":"InvalidAdminAuthority","msg":"Operation requires admin authority signature"},{"code":6002,"name":"InvalidWithdrawRequestAuthority","msg":"Invalid authority to operate with the withdraw request of validator bond account"},{"code":6003,"name":"InvalidOperatorAuthority","msg":"Operation requires operator authority signature"},{"code":6004,"name":"InvalidVoteAccountProgramId","msg":"Provided vote account is not owned by the validator vote program"},{"code":6005,"name":"InvalidStakeAccountState","msg":"Fail to deserialize the stake account"},{"code":6006,"name":"InvalidStakeAccountProgramId","msg":"Provided stake account is not owned by the stake account program"},{"code":6007,"name":"InvalidSettlementAddress","msg":"Fail to create account address for Settlement"},{"code":6008,"name":"InvalidSettlementAuthorityAddress","msg":"Fail to create PDA address for Settlement Authority"},{"code":6009,"name":"InvalidBondsWithdrawerAuthorityAddress","msg":"Fail to create PDA address for Bonds Withdrawer Authority"},{"code":6010,"name":"InvalidSettlementClaimAddress","msg":"Fail to create program address for SettlementClaim"},{"code":6011,"name":"InvalidBondAddress","msg":"Fail to create program address for Bond"},{"code":6012,"name":"WrongStakeAccountWithdrawer","msg":"Wrong withdrawer authority of the stake account"},{"code":6013,"name":"InvalidWithdrawRequestAddress","msg":"Fail to create program address for WithdrawRequest"},{"code":6014,"name":"HundredthBasisPointsOverflow","msg":"Value of hundredth basis points is too big"},{"code":6015,"name":"HundredthBasisPointsCalculation","msg":"Hundredth basis points calculation failure"},{"code":6016,"name":"HundredthBasisPointsParse","msg":"Hundredth basis points failure to parse the value"},{"code":6017,"name":"FailedToDeserializeVoteAccount","msg":"Cannot deserialize validator vote account data"},{"code":6018,"name":"BondChangeNotPermitted","msg":"Wrong authority for changing the validator bond account"},{"code":6019,"name":"StakeNotDelegated","msg":"Provided stake cannot be used for bonds, it's not delegated"},{"code":6020,"name":"BondStakeWrongDelegation","msg":"Provided stake is delegated to a wrong validator vote account"},{"code":6021,"name":"WithdrawRequestNotReady","msg":"Withdraw request has not elapsed the epoch lockup period yet"},{"code":6022,"name":"SettlementNotExpired","msg":"Settlement has not expired yet"},{"code":6023,"name":"SettlementExpired","msg":"Settlement has already expired"},{"code":6024,"name":"UninitializedStake","msg":"Stake is not initialized"},{"code":6025,"name":"NoStakeOrNotFullyActivated","msg":"Stake account is not fully activated"},{"code":6026,"name":"UnexpectedRemainingAccounts","msg":"Instruction context was provided with unexpected set of remaining accounts"},{"code":6027,"name":"SettlementNotClosed","msg":"Settlement has to be closed"},{"code":6028,"name":"StakeAccountIsFundedToSettlement","msg":"Provided stake account has been already funded to a settlement"},{"code":6029,"name":"ClaimSettlementProofFailed","msg":"Settlement claim proof failed"},{"code":6030,"name":"StakeLockedUp","msg":"Provided stake account is locked-up"},{"code":6031,"name":"StakeAccountNotBigEnoughToSplit","msg":"Stake account is not big enough to be split"},{"code":6032,"name":"ClaimAmountExceedsMaxTotalClaim","msg":"Claiming bigger amount than the max total claim"},{"code":6033,"name":"ClaimCountExceedsMaxMerkleNodes","msg":"Claim exceeded number of claimable nodes in the merkle tree"},{"code":6034,"name":"EmptySettlementMerkleTree","msg":"Empty merkle tree, nothing to be claimed"},{"code":6035,"name":"ClaimingStakeAccountLamportsInsufficient","msg":"Provided stake account has not enough lamports to cover the claim"},{"code":6036,"name":"StakeAccountNotFundedToSettlement","msg":"Provided stake account is not funded under the settlement"},{"code":6037,"name":"VoteAccountValidatorIdentityMismatch","msg":"Validator vote account does not match to provided validator identity signature"},{"code":6038,"name":"VoteAccountMismatch","msg":"Bond vote account address does not match with the provided validator vote account"},{"code":6039,"name":"ConfigAccountMismatch","msg":"Bond config address does not match with the provided config account"},{"code":6040,"name":"WithdrawRequestVoteAccountMismatch","msg":"Withdraw request vote account address does not match with the provided validator vote account"},{"code":6041,"name":"BondAccountMismatch","msg":"Bond account address does not match with the stored one"},{"code":6042,"name":"SettlementAccountMismatch","msg":"Settlement account address does not match with the stored one"},{"code":6043,"name":"RentCollectorMismatch","msg":"Rent collector address does not match permitted rent collector"},{"code":6044,"name":"StakerAuthorityMismatch","msg":"Stake account's staker does not match with the provided authority"},{"code":6045,"name":"NonBondStakeAuthorities","msg":"One or both stake authorities does not belong to bonds program"},{"code":6046,"name":"SettlementAuthorityMismatch","msg":"Stake account staker authority mismatches with the settlement authority"},{"code":6047,"name":"StakeDelegationMismatch","msg":"Delegation of provided stake account mismatches"},{"code":6048,"name":"WithdrawRequestAmountTooSmall","msg":"Too small non-withdrawn withdraw request amount, cancel and init new one"},{"code":6049,"name":"WithdrawRequestAlreadyFulfilled","msg":"Withdraw request has been already fulfilled"},{"code":6050,"name":"ClaimSettlementMerkleTreeNodeMismatch","msg":"Claim settlement merkle tree node mismatch"},{"code":6051,"name":"WrongStakeAccountStaker","msg":"Wrong staker authority of the stake account"},{"code":6052,"name":"AlreadyPaused","msg":"Requested pause and already Paused"},{"code":6053,"name":"NotPaused","msg":"Requested resume, but not Paused"},{"code":6054,"name":"ProgramIsPaused","msg":"Emergency Pause is Active"},{"code":6055,"name":"InvalidPauseAuthority","msg":"Invalid pause authority"},{"code":6056,"name":"MergeMismatchSameSourceDestination","msg":"Source and destination cannot be the same for merge operation"},{"code":6057,"name":"WrongStakeAccountState","msg":"Wrong state of the stake account"},{"code":6058,"name":"ValidatorIdentityBondMintMismatch","msg":"Validator identity mismatch for bond mint"},{"code":6059,"name":"InvalidBondMintSupply","msg":"Bond mint permits only a single token to exist"},{"code":6060,"name":"OperatorAndPauseAuthorityMismatch","msg":"Operation permitted only to operator or pause authority"},{"code":6061,"name":"SettlementNotReadyForClaiming","msg":"Settlement slots to start claiming not expired yet"},{"code":6062,"name":"InvalidVoteAccountType","msg":"Unsupported vote account type to deserialize"},{"code":6063,"name":"MaxStakeWantedTooLow","msg":"Max stake wanted value is lower to minimum configured value"},{"code":6064,"name":"NoStakeOrNotActivatingOrActivated","msg":"Stake account is not activating or activated"},{"code":6065,"name":"BitmapSizeMismatch","msg":"Data size mismatch for the bitmap"},{"code":6066,"name":"BitmapIndexOutOfBonds","msg":"Bitmap index out of bounds"},{"code":6067,"name":"SettlementClaimsNotInitialized","msg":"SettlementClaims account not fully initialized, missing data size"},{"code":6068,"name":"SettlementClaimsTooManyRecords","msg":"SettlementClaims records exceed maximum to fit Solana account size"},{"code":6069,"name":"SettlementClaimsAlreadyInitialized","msg":"SettlementClaims already initialized, no need to increase account size"},{"code":6070,"name":"SettlementAlreadyClaimed","msg":"Settlement has been already claimed"}]}
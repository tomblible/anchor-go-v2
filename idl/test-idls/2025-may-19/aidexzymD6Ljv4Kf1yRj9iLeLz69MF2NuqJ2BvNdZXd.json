{"address":"aidexzymD6Ljv4Kf1yRj9iLeLz69MF2NuqJ2BvNdZXd","metadata":{"name":"ai_dex","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"close_position","docs":["Closes an existing position in the ai dex pool.","","This function closes an existing position using the provided context.","It ensures that the position is properly closed and any associated resources are released.","","# Arguments","","* `ctx` - The context for the `ClosePosition` instruction.","","# Returns","","This function returns a `Result` which is `Ok` if the position is successfully closed,","or an error if it fails."],"discriminator":[123,134,81,0,49,68,98,98],"accounts":[{"name":"position_authority","signer":true},{"name":"receiver","writable":true},{"name":"position","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110]},{"kind":"account","path":"position_mint"}]}},{"name":"position_mint","writable":true},{"name":"position_token_account","writable":true},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"}],"args":[]},{"name":"close_trade_batch_position","docs":["Closes a trade batch position in the ai dex pool.","","This function closes a trade batch position using the provided context and trade batch index.","It finalizes the position and performs any necessary cleanup.","","# Arguments","","* `ctx` - The context for the `CloseTradeBatchPosition` instruction.","* `trade_batch_index` - The index of the trade batch to close the position for, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the trade batch position is successfully closed,","or an error if it fails."],"discriminator":[54,77,254,140,239,46,250,25],"accounts":[{"name":"trade_batch_position","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,97,100,101,95,98,97,116,99,104,95,112,111,115,105,116,105,111,110]},{"kind":"account","path":"position_trade_batch.position_trade_batch_mint","account":"PositionTradeBatch"},{"kind":"arg","path":"trade_batch_index"}]}},{"name":"position_trade_batch","writable":true},{"name":"position_trade_batch_token_account"},{"name":"position_trade_batch_authority","signer":true},{"name":"receiver","writable":true}],"args":[{"name":"trade_batch_index","type":"u16"}]},{"name":"collect_fees","docs":["Collects fees of the protocol.","","This function collects fees using the provided context and optional remaining accounts information.","It handles the fee collection process of the protocol.","","# Arguments","","* `ctx` - The context for the `CollectFees` instruction.","* `remaining_accounts_info` - Optional information about remaining accounts, represented as `Option<RemainingAccountsInfo>`.","","# Returns","","This function returns a `Result` which is `Ok` if the fees are successfully collected,","or an error if it fails."],"discriminator":[164,152,207,99,30,186,19,182],"accounts":[{"name":"ai_dex_pool","relations":["position"]},{"name":"position_authority","signer":true},{"name":"position","writable":true},{"name":"position_token_account"},{"name":"token_mint_a","writable":true},{"name":"token_mint_b","writable":true},{"name":"token_owner_account_a","writable":true},{"name":"token_vault_a","writable":true},{"name":"token_owner_account_b","writable":true},{"name":"token_vault_b","writable":true},{"name":"token_program_a"},{"name":"token_program_b"},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"}],"args":[{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"collect_protocol_fees","docs":["Collects protocol fees for ai dex of the protocol.","","This function collects protocol fees using the provided context and optional remaining accounts information.","It handles the fee collection process of the protocol.","","# Arguments","","* `ctx` - The context for the `CollectProtocolFees` instruction.","* `remaining_accounts_info` - Optional information about remaining accounts, represented as `Option<RemainingAccountsInfo>`.","","# Returns","","This function returns a `Result` which is `Ok` if the protocol fees are successfully collected,","or an error if it fails."],"discriminator":[22,67,23,98,150,178,70,220],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true},{"name":"token_mint_a","writable":true},{"name":"token_mint_b","writable":true},{"name":"token_vault_a","writable":true},{"name":"token_vault_b","writable":true},{"name":"token_destination_a","writable":true},{"name":"token_destination_b","writable":true},{"name":"token_program_a"},{"name":"token_program_b"},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"}],"args":[{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"collect_referral_reward_fee","docs":["Collects the referral reward fee for the swap."],"discriminator":[245,164,105,6,177,148,213,245],"accounts":[{"name":"swap_referral","docs":["The swap referral account"],"writable":true},{"name":"referrer_address","docs":["The referrer who signs the transaction"],"signer":true,"relations":["swap_referral"]},{"name":"token_mint","docs":["The token mint of the referral fee"],"writable":true},{"name":"referral_ata","docs":["The referral's associated token account (ATA) holding the accumulated fees"],"writable":true},{"name":"destination_token_account","docs":["The destination token account for the referrer"],"writable":true},{"name":"token_program","docs":["The token program"]},{"name":"memo_program","docs":["The memo program"],"address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"},{"name":"system_program","docs":["System program"],"address":"11111111111111111111111111111111"},{"name":"rent","docs":["Rent sysvar"],"address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"amount","type":"u64"},{"name":"remaining_accounts","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"collect_reward","docs":["Collects rewards for the position.","","This function collects rewards using the provided context, reward index, and optional remaining accounts information.","It handles the reward collection process of the protocol.","","# Arguments","","* `ctx` - The context for the `CollectReward` instruction.","* `reward_index` - The index of the reward to collect, represented as a `u8`.","* `remaining_accounts_info` - Optional information about remaining accounts, represented as `Option<RemainingAccountsInfo>`.","","# Returns","","This function returns a `Result` which is `Ok` if the rewards are successfully collected,","or an error if it fails."],"discriminator":[70,5,132,87,86,235,177,34],"accounts":[{"name":"ai_dex_pool","relations":["position"]},{"name":"position_authority","signer":true},{"name":"position","writable":true},{"name":"position_token_account"},{"name":"reward_owner_account","writable":true},{"name":"reward_mint","writable":true},{"name":"reward_vault","writable":true},{"name":"reward_token_program"},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"}],"args":[{"name":"reward_index","type":"u8"},{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"create_super_admin","docs":["Initializes the super admin account with the provided public key.","","This function is responsible for initializing the `SuperAdmin` account with the specified public key,","which represents the super admin of the protocol. The initialization can only be done once.","","# Arguments","","* `ctx` - The context containing all the required accounts.","* `super_admin` - The public key of the account to be set as the super admin.","","# Returns","","This function returns a `Result` which is `Ok` if the initialization is successful,","or an `Err` if an error occurs."],"discriminator":[189,244,104,194,125,52,176,143],"accounts":[{"name":"super_admin_account","writable":true,"pda":{"seeds":[{"kind":"const","value":[115,117,112,101,114,45,97,100,109,105,110]}]}},{"name":"funder","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"super_admin","type":"pubkey"}]},{"name":"decrease_liquidity","docs":["Decreases the liquidity for a position in the ai dex pool with additional account information.","","This function reduces the liquidity for the specified position, ensuring that the minimum","token amounts are met. It uses the provided context and optional remaining accounts information","to perform the operation.","","# Arguments","","* `ctx` - The context for the `ModifyLiquidity` instruction.","* `liquidity_amount` - The amount of liquidity to be decreased, represented as a `u128`.","* `token_min_a` - The minimum amount of token A to be received, represented as a `u64`.","* `token_min_b` - The minimum amount of token B to be received, represented as a `u64`.","* `remaining_accounts_info` - Optional additional account information for the operation.","","# Returns","","This function returns a `Result` which is `Ok` if the liquidity decrease is successful,","or an error if it fails."],"discriminator":[160,38,208,111,104,91,44,1],"accounts":[{"name":"ai_dex_pool","writable":true,"relations":["position","tick_array_lower","tick_array_upper"]},{"name":"token_program_a"},{"name":"token_program_b"},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"},{"name":"position_authority","signer":true},{"name":"position","writable":true},{"name":"position_token_account"},{"name":"token_mint_a","writable":true},{"name":"token_mint_b","writable":true},{"name":"token_owner_account_a","writable":true},{"name":"token_owner_account_b","writable":true},{"name":"token_vault_a","writable":true},{"name":"token_vault_b","writable":true},{"name":"tick_array_lower","writable":true},{"name":"tick_array_upper","writable":true},{"name":"oracle_account","writable":true,"optional":true},{"name":"price_update","docs":["Oracle Price Update Account: Can be either a real PriceUpdateV2 or a MockPriceUpdate"],"optional":true}],"args":[{"name":"liquidity_amount","type":"u128"},{"name":"token_min_a","type":"u64"},{"name":"token_min_b","type":"u64"},{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}},{"name":"referral_code","type":{"option":"string"}}]},{"name":"delete_position_trade_batch","docs":["Delete a PositionTradeBatch account. Burns the position trade batch token in the owner's wallet.","","### Authority","- `position_trade_batch_owner` - The owner that owns the position trade batch token.","","### Special Errors","- `NonDeletablePositionTradeBatchError` - The provided position trade batch has open positions."],"discriminator":[76,51,134,125,187,111,53,6],"accounts":[{"name":"position_trade_batch","writable":true},{"name":"position_trade_batch_mint","writable":true},{"name":"position_trade_batch_token_account","writable":true},{"name":"position_trade_batch_owner","signer":true},{"name":"receiver","writable":true},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"}],"args":[]},{"name":"increase_liquidity","docs":["Increases the liquidity for a position in the ai dex pool with additional parameters.","","This function increases the liquidity for a position using the specified amounts of tokens.","It also allows for additional account information to be provided.","","# Arguments","","* `ctx` - The context for the `ModifyLiquidity` instruction.","* `liquidity_amount` - The amount of liquidity to add, represented as a `u128`.","* `token_max_a` - The maximum amount of token A to use, represented as a `u64`.","* `token_max_b` - The maximum amount of token B to use, represented as a `u64`.","* `remaining_accounts_info` - Optional additional account information.","","# Returns","","This function returns a `Result` which is `Ok` if the liquidity increase is successful,","or an error if it fails."],"discriminator":[46,156,243,118,13,205,251,178],"accounts":[{"name":"ai_dex_pool","writable":true,"relations":["position","tick_array_lower","tick_array_upper"]},{"name":"token_program_a"},{"name":"token_program_b"},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"},{"name":"position_authority","signer":true},{"name":"position","writable":true},{"name":"position_token_account"},{"name":"token_mint_a","writable":true},{"name":"token_mint_b","writable":true},{"name":"token_owner_account_a","writable":true},{"name":"token_owner_account_b","writable":true},{"name":"token_vault_a","writable":true},{"name":"token_vault_b","writable":true},{"name":"tick_array_lower","writable":true},{"name":"tick_array_upper","writable":true},{"name":"oracle_account","writable":true,"optional":true},{"name":"price_update","docs":["Oracle Price Update Account: Can be either a real PriceUpdateV2 or a MockPriceUpdate"],"optional":true}],"args":[{"name":"liquidity_amount","type":"u128"},{"name":"token_max_a","type":"u64"},{"name":"token_max_b","type":"u64"},{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}},{"name":"referral_code","type":{"option":"string"}}]},{"name":"initialize_config","docs":["Initializes the configuration for the ai dex.","","This function sets up the initial configuration parameters for the protocol,","including authorities and fee rates.","","# Arguments","","* `ctx` - The context for the `InitializeConfig` instruction.","* `config_authority` - The public key of the authority responsible for managing.","* `default_protocol_fee_rate` - The default fee rate for the protocol, represented as a `u16`.","* `default_referral_reward_fee_rate` - The default referral reward fee rate, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the initialization is successful,","or an error if it fails."],"discriminator":[208,127,21,1,194,190,196,70],"accounts":[{"name":"super_admin_account","docs":["SuperAdmin account that stores the current super admin's public key."]},{"name":"super_admin_authority","docs":["Signer must be the current super admin."],"writable":true,"signer":true},{"name":"config","writable":true,"pda":{"seeds":[{"kind":"const","value":[99,111,110,102,105,103]},{"kind":"arg","path":"config_authority"},{"kind":"arg","path":"default_protocol_fee_rate"}]}},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"config_authority","type":"pubkey"},{"name":"default_protocol_fee_rate","type":"u16"},{"name":"default_referral_reward_fee_rate","type":"u16"}]},{"name":"initialize_fee_tier","docs":["Initializes a new fee tier with the given parameters.","","This function sets up a new fee tier with the specified tick spacing and default fee rate.","It uses the provided context to initialize the fee tier.","","# Arguments","","* `ctx` - The context for the `InitializeFeeTier` instruction.","* `tick_spacing` - The spacing between ticks in the fee tier, represented as a `u16`.","* `default_fee_rate` - The default fee rate for the fee tier, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the fee tier initialization is successful,","or an error if it fails."],"discriminator":[183,74,156,160,112,2,42,30],"accounts":[{"name":"config"},{"name":"fee_tier","writable":true,"pda":{"seeds":[{"kind":"const","value":[102,101,101,95,116,105,101,114]},{"kind":"account","path":"config"},{"kind":"arg","path":"tick_spacing"},{"kind":"arg","path":"default_fee_rate"}]}},{"name":"funder","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"tick_spacing","type":"u16"},{"name":"default_fee_rate","type":"u16"}]},{"name":"initialize_pool_step_1","docs":["The `initialize_pool_step_1` function is the first step in initializing a pool in the AiDex protocol.","","# Parameters","- `ctx`: The context containing all the accounts required for the initialization.","- `tick_spacing`: The spacing between ticks in the pool.","- `is_oracle_pool`: A boolean flag indicating if the pool is an oracle pool.","- `is_temporary_pool`: A boolean flag indicating if the pool is a temporary pool.","- `initial_sqrt_price`: The initial square root price of the pool. Optional, since if oracle, the price feed will be used.","- `price_feed_id`: The price feed id for the oracle pool. Optional, since if classic, it will be ignored.","- `maximum_age`: The maximum age of the oracle price feed. Optional, since if classic, it will be ignored.","","# Returns","- `Result<()>`: Returns an empty result on success, or an error if the initialization fails.","","# Description","This function delegates the initialization process to the `initialize_pool_basic_handler` function,","which performs the necessary steps to set up the basic parameters of the pool, including the tick spacing","and the initial square root price."],"discriminator":[53,220,168,133,114,119,232,142],"accounts":[{"name":"ai_dex_config","relations":["fee_tier"]},{"name":"token_mint_a"},{"name":"token_mint_b"},{"name":"funder","writable":true,"signer":true},{"name":"ai_dex_pool","writable":true,"pda":{"seeds":[{"kind":"const","value":[97,105,95,100,101,120]},{"kind":"account","path":"ai_dex_config"},{"kind":"account","path":"token_mint_a"},{"kind":"account","path":"token_mint_b"},{"kind":"arg","path":"tick_spacing"}]}},{"name":"fee_tier"},{"name":"oracle_account","docs":["Optional Oracle Account: Only required for Oracle Pools"],"writable":true,"optional":true,"pda":{"seeds":[{"kind":"const","value":[111,114,97,99,108,101]},{"kind":"account","path":"ai_dex_pool"}]}},{"name":"price_update","docs":["Oracle Price Update Account read as AccountInfo","This account can be either a `PriceUpdateV2` from Pyth or a `MockPriceUpdate` from your program"],"optional":true},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"tick_spacing","type":"u16"},{"name":"is_oracle_pool","type":"bool"},{"name":"is_temporary_pool","type":"bool"},{"name":"initial_sqrt_price","type":{"option":"u128"}},{"name":"price_feed_id","type":{"option":"string"}},{"name":"maximum_age","type":{"option":"u64"}}]},{"name":"initialize_pool_step_2","docs":["The `initialize_pool_step_2` function is the second step in initializing a pool in the AiDex protocol.","","# Parameters","- `ctx`: The context containing all the accounts required for the initialization of the token vaults.","- `tick_spacing`: The spacing between ticks in the pool.","- `start_timestamp_lp`: The start timestamp for liquidity provision. Optional.","- `end_timestamp_lp`: The end timestamp for liquidity provision. Optional.","- `start_timestamp_swap`: The start timestamp for swapping. Optional.","- `end_timestamp_swap`: The end timestamp for swapping. Optional.","","# Returns","- `Result<()>`: Returns an empty result on success, or an error if the initialization fails.","","# Description","This function delegates the initialization process to the `initialize_pool_vaults_handler` function,","which performs the necessary steps to set up the token vaults for the pool."],"discriminator":[184,200,68,8,141,211,111,234],"accounts":[{"name":"ai_dex_pool","writable":true},{"name":"token_mint_a"},{"name":"token_mint_b"},{"name":"funder","writable":true,"signer":true},{"name":"token_vault_a","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,111,107,101,110,95,118,97,117,108,116,95,97]},{"kind":"account","path":"ai_dex_pool"},{"kind":"arg","path":"tick_spacing"}]}},{"name":"token_vault_b","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,111,107,101,110,95,118,97,117,108,116,95,98]},{"kind":"account","path":"ai_dex_pool"},{"kind":"arg","path":"tick_spacing"}]}},{"name":"token_program_a"},{"name":"token_program_b"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"tick_spacing","type":"u16"},{"name":"start_timestamp_lp","type":{"option":"u64"}},{"name":"end_timestamp_lp","type":{"option":"u64"}},{"name":"start_timestamp_swap","type":{"option":"u64"}},{"name":"end_timestamp_swap","type":{"option":"u64"}}]},{"name":"initialize_position_trade_batch","docs":["Initializes a position trade batch.","An NFT will be minted to represent the position trade batch in the user's wallet.","","It sets up the necessary state and configurations for a batch of trades.","","# Arguments","","* `ctx` - The context for the `InitializePositionTradeBatch` instruction.","","# Returns","","This function returns a `Result` which is `Ok` if the position trade batch is successfully initialized,","or an error if it fails."],"discriminator":[50,245,111,206,97,163,78,71],"accounts":[{"name":"position_trade_batch","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,116,114,97,100,101,95,98,97,116,99,104]},{"kind":"account","path":"position_trade_batch_mint"}]}},{"name":"position_trade_batch_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,116,114,97,100,101,95,98,97,116,99,104]},{"kind":"arg","path":"position_seed"}]}},{"name":"position_trade_batch_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"position_trade_batch_owner"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"position_trade_batch_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"position_trade_batch_owner"},{"name":"funder","writable":true,"signer":true},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"position_seed","type":"u64"}]},{"name":"initialize_position_trade_batch_with_metadata","docs":["Initializes a position trade batch with metaplex metadata.","","It sets up the necessary state and configurations for a batch of trades,","including additional METAPLEX metadata to identify the token.","","# Arguments","","* `ctx` - The context for the `InitializePositionTradeBatchWithMetadata` instruction.","","# Returns","","This function returns a `Result` which is `Ok` if the position trade batch with metadata is successfully initialized,","or an error if it fails."],"discriminator":[144,5,82,42,7,61,203,98],"accounts":[{"name":"position_trade_batch","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,116,114,97,100,101,95,98,97,116,99,104]},{"kind":"account","path":"position_trade_batch_mint"}]}},{"name":"position_trade_batch_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,116,114,97,100,101,95,98,97,116,99,104]},{"kind":"arg","path":"position_seed"}]}},{"name":"position_trade_batch_metadata","writable":true},{"name":"position_trade_batch_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"position_trade_batch_owner"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"position_trade_batch_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"position_trade_batch_owner"},{"name":"funder","writable":true,"signer":true},{"name":"metadata_update_auth","address":"updXkBTioYYqb84Xuho9Z9Ki94UkR76QXnpxoaUQCj6"},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"metadata_program","address":"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s"}],"args":[{"name":"position_seed","type":"u64"}]},{"name":"initialize_reinvestments","docs":["REINVESTMENTS ENDPOINTS <START>"],"discriminator":[71,82,244,119,239,218,113,49],"accounts":[{"name":"super_admin_account","docs":["SuperAdmin account that stores the current super admin's public key."]},{"name":"super_admin_authority","docs":["Signer must be the current super admin."],"writable":true,"signer":true},{"name":"reinvestments_account","writable":true,"pda":{"seeds":[{"kind":"const","value":[114,101,105,110,118,101,115,116,109,101,110,116,115]},{"kind":"arg","path":"reinvestments_authority"}]}},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"reinvestments_authority","type":"pubkey"},{"name":"default_reinvestment_fee_rate","type":"u16"}]},{"name":"initialize_reward","docs":["Initializes a new reward for an ai dex.","","A pool can only support up to a set number of rewards.","","This function sets up a new reward for the specified pool. It uses the provided context","and reward index to initialize the reward.","","# Arguments","","* `ctx` - The context for the `InitializeReward` instruction.","* `reward_index` - The index of the reward to be initialized, represented as a `u8`.","","# Returns","","This function returns a `Result` which is `Ok` if the reward initialization is successful,","or an error if it fails."],"discriminator":[95,135,192,196,242,129,230,68],"accounts":[{"name":"reward_authority","writable":true,"signer":true},{"name":"funder","writable":true,"signer":true},{"name":"ai_dex_pool","writable":true},{"name":"reward_mint"},{"name":"reward_vault","writable":true,"pda":{"seeds":[{"kind":"const","value":[114,101,119,97,114,100,95,118,97,117,108,116]},{"kind":"account","path":"reward_mint"},{"kind":"arg","path":"reward_index"},{"kind":"account","path":"ai_dex_pool"}]}},{"name":"reward_token_program"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"reward_index","type":"u8"}]},{"name":"initialize_swap_referral","discriminator":[252,221,208,193,41,64,53,231],"accounts":[{"name":"config_account"},{"name":"swap_referral_account","writable":true,"pda":{"seeds":[{"kind":"const","value":[115,119,97,112,45,114,101,102,101,114,114,97,108]},{"kind":"account","path":"referrer"},{"kind":"arg","path":"referral_code"}]}},{"name":"referrer","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"referral_code","type":"string"}]},{"name":"initialize_tick_array","docs":["Initializes a new tick array with the given start tick index.","","This function sets up a new tick array starting at the specified tick index.","It uses the provided context to initialize the tick array.","","# Arguments","","* `ctx` - The context for the `InitializeTickArray` instruction.","* `start_tick_index` - The starting index for the tick array, represented as an `i32`.","","# Returns","","This function returns a `Result` which is `Ok` if the tick array initialization is successful,","or an error if it fails."],"discriminator":[11,188,193,214,141,91,149,184],"accounts":[{"name":"ai_dex_pool"},{"name":"funder","writable":true,"signer":true},{"name":"tick_array","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,105,99,107,95,97,114,114,97,121]},{"kind":"account","path":"ai_dex_pool"},{"kind":"arg","path":"start_tick_index"}]}},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"start_tick_index","type":"i32"}]},{"name":"open_position","docs":["Opens a new position within the specified tick range. NFT will be minted to represent the position.","","This function sets up a new position with the given lower and upper tick indices.","It uses the provided context and bump seeds to initialize the position.","","# Arguments","","* `ctx` - The context for the `OpenPosition` instruction.","* `bumps` - The bump seeds for the position's PDA (Program Derived Address).","* `tick_lower_index` - The lower tick index for the position, represented as an `i32`.","* `tick_upper_index` - The upper tick index for the position, represented as an `i32`.","","# Returns","","This function returns a `Result` which is `Ok` if the position is successfully opened,","or an error if it fails."],"discriminator":[135,128,47,77,15,152,240,49],"accounts":[{"name":"funder","writable":true,"signer":true},{"name":"owner"},{"name":"position","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110]},{"kind":"account","path":"position_mint"}]}},{"name":"position_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,109,105,110,116]},{"kind":"account","path":"ai_dex_pool"},{"kind":"account","path":"owner"},{"kind":"arg","path":"position_seed"},{"kind":"arg","path":"tick_lower_index"},{"kind":"arg","path":"tick_upper_index"}]}},{"name":"position_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"owner"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"position_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"ai_dex_pool"},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"position_seed","type":"u64"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"is_reinvestment_on","type":"bool"}]},{"name":"open_position_with_metadata","docs":["Opens a new position with metadata within the specified tick range.","NFT will be minted to represent the position.","","This function sets up a new position with the given lower and upper tick indices,","and includes additional Metaplex metadata to identify the token.","It uses the provided context and bump seeds to initialize the position.","","# Arguments","","* `ctx` - The context for the `OpenPositionWithMetadata` instruction.","* `bumps` - The bump seeds for the position's PDA (Program Derived Address).","* `tick_lower_index` - The lower tick index for the position, represented as an `i32`.","* `tick_upper_index` - The upper tick index for the position, represented as an `i32`.","","# Returns","","This function returns a `Result` which is `Ok` if the position is successfully opened,","or an error if it fails."],"discriminator":[242,29,134,48,58,110,14,60],"accounts":[{"name":"funder","writable":true,"signer":true},{"name":"owner"},{"name":"position","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110]},{"kind":"account","path":"position_mint"}]}},{"name":"position_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,115,105,116,105,111,110,95,109,105,110,116]},{"kind":"account","path":"ai_dex_pool"},{"kind":"account","path":"owner"},{"kind":"arg","path":"position_seed"},{"kind":"arg","path":"tick_lower_index"},{"kind":"arg","path":"tick_upper_index"}]}},{"name":"position_metadata_account","writable":true},{"name":"position_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"owner"},{"kind":"const","value":[6,221,246,225,215,101,161,147,217,203,225,70,206,235,121,172,28,180,133,237,95,91,55,145,58,140,245,133,126,255,0,169]},{"kind":"account","path":"position_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"ai_dex_pool"},{"name":"token_program","address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"metadata_program","address":"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s"},{"name":"metadata_update_auth","address":"updXkBTioYYqb84Xuho9Z9Ki94UkR76QXnpxoaUQCj6"}],"args":[{"name":"position_seed","type":"u64"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"is_reinvestment_on","type":"bool"}]},{"name":"open_trade_batch_position","docs":["Opens a trade batch position in an ai_dex pool.","","No new tokens are issued because the owner of the position trade batch becomes the owner of the position.","The position will start off with 0 liquidity.","","# Arguments","","* `ctx` - The context for the `OpenTradeBatchPosition` instruction.","* `trade_batch_index` - The index of the trade batch to open the position for, represented as a `u16`.","* `tick_lower_index` - The lower tick index for the position, represented as an `i32`.","* `tick_upper_index` - The upper tick index for the position, represented as an `i32`.","","# Returns","","This function returns a `Result` which is `Ok` if the trade batch position is successfully opened,","or an error if it fails."],"discriminator":[193,239,89,204,203,252,190,168],"accounts":[{"name":"trade_batch_position","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,97,100,101,95,98,97,116,99,104,95,112,111,115,105,116,105,111,110]},{"kind":"account","path":"position_trade_batch.position_trade_batch_mint","account":"PositionTradeBatch"},{"kind":"arg","path":"trade_batch_index"}]}},{"name":"position_trade_batch","writable":true},{"name":"position_trade_batch_token_account"},{"name":"position_trade_batch_authority","signer":true},{"name":"ai_dex_pool"},{"name":"funder","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"trade_batch_index","type":"u16"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"is_reinvestment_on","type":"bool"}]},{"name":"set_default_fee_rate","docs":["Sets the default fee rate for the fee tier.","","It uses the provided context (fee authority) and fee rate to update the default fee rate.","","# Arguments","","* `ctx` - The context for the `SetDefaultFeeRate` instruction.","* `default_fee_rate` - The default fee rate to set, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the default fee rate is successfully set,","or an error if it fails."],"discriminator":[118,215,214,157,182,229,208,228],"accounts":[{"name":"ai_dex_config","relations":["fee_tier"]},{"name":"fee_tier","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"default_fee_rate","type":"u16"}]},{"name":"set_default_protocol_fee_rate","docs":["Sets the default protocol fee rate for the ai dex config.","It uses the provided context (fee authority) and fee rate to update the default protocol fee rate.","","# Arguments","","* `ctx` - The context for the `SetDefaultProtocolFeeRate` instruction.","* `default_protocol_fee_rate` - The default protocol fee rate to set, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the default protocol fee rate is successfully set,","or an error if it fails."],"discriminator":[107,205,249,226,151,35,86,0],"accounts":[{"name":"ai_dex_config","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"default_protocol_fee_rate","type":"u16"}]},{"name":"set_default_reinvestment_fee_rate","docs":["Sets the default reinvestment fee rate for the reinvestments account."],"discriminator":[19,157,15,130,37,72,82,105],"accounts":[{"name":"reinvestments_account","writable":true},{"name":"reinvestments_authority","signer":true}],"args":[{"name":"default_reinvestment_fee_rate","type":"u16"}]},{"name":"set_default_swap_referral_reward_fee_rate","docs":["Sets the default swap referral reward fee rate for the ai dex config."],"discriminator":[123,93,150,168,64,14,83,219],"accounts":[{"name":"ai_dex_config","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"default_swap_referral_reward_fee_rate","type":"u16"}]},{"name":"set_end_timestamp_lp","docs":["Sets the end timestamp for the liquidity provision."],"discriminator":[193,32,10,239,3,79,112,92],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"end_timestamp_lp","type":"u64"}]},{"name":"set_end_timestamp_swap","docs":["Sets the end timestamp for the swapping."],"discriminator":[214,98,226,179,119,60,234,7],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"end_timestamp_swap","type":"u64"}]},{"name":"set_fee_authority","docs":["Sets the fee authority for an ai dex config.","The fee authority can set the fee and protocol fee rate for individual pools or","set the default fee rate for newly minted pools.","","# Arguments","","* `ctx` - The context for the `SetFeeAuthority` instruction.","","# Returns","","This function returns a `Result` which is `Ok` if the fee authority is successfully set,","or an error if it fails."],"discriminator":[31,1,50,87,237,101,97,132],"accounts":[{"name":"ai_dex_config","writable":true},{"name":"config_authority","signer":true},{"name":"new_config_authority"}],"args":[]},{"name":"set_fee_rate","docs":["Sets the fee rate for the ai_dex.","","The fee rate is represented as hundredths of a basis point.","","# Arguments","","* `ctx` - The context (fee authority) for the `SetFeeRate` instruction.","* `fee_rate` - The fee rate to set, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the fee rate is successfully set,","or an error if it fails."],"discriminator":[53,243,137,65,8,140,158,6],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"fee_rate","type":"u16"}]},{"name":"set_new_oracle_account","docs":["Sets the new oracle account."],"discriminator":[242,130,189,187,27,165,194,194],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true},{"name":"new_oracle_account"}],"args":[]},{"name":"set_new_oracle_max_age","docs":["Sets the new max age for the oracle."],"discriminator":[111,185,100,183,102,251,180,123],"accounts":[{"name":"ai_dex_config"},{"name":"oracle_account","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"new_max_age","type":"u64"}]},{"name":"set_new_reinvestments_authority","docs":["Sets the new reinvestment authority."],"discriminator":[215,42,89,164,173,172,2,68],"accounts":[{"name":"reinvestments_account","writable":true},{"name":"reinvestments_authority","signer":true}],"args":[{"name":"new_reinvestments_authority","type":"pubkey"}]},{"name":"set_protocol_fee_rate","docs":["Sets the protocol fee rate for an ai_dex.","","This function sets the protocol fee rate for the specified ai_dex.","The protocol fee rate is represented as a basis point.","","# Arguments","","* `ctx` - The context (fee authority) for the `SetProtocolFeeRate` instruction.","* `protocol_fee_rate` - The protocol fee rate to set, represented as a `u16`.","","# Returns","","This function returns a `Result` which is `Ok` if the protocol fee rate is successfully set,","or an error if it fails."],"discriminator":[95,7,4,50,154,79,156,131],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"protocol_fee_rate","type":"u16"}]},{"name":"set_reward_authority","docs":["Sets the ai dex pool reward authority for a specific reward index.","","This function sets the reward authority for the specified reward index in the context.","The reward authority can manage the distribution and collection of rewards for the given index.","","# Arguments","","* `ctx` - The context for the `SetRewardAuthority` instruction.","* `reward_index` - The index of the reward to set the authority for, represented as a `u8`.","","# Returns","","This function returns a `Result` which is `Ok` if the reward authority is successfully set,","or an error if it fails."],"discriminator":[34,39,183,252,83,28,85,127],"accounts":[{"name":"ai_dex_pool","writable":true},{"name":"reward_authority","writable":true,"signer":true},{"name":"new_reward_authority"}],"args":[{"name":"reward_index","type":"u8"}]},{"name":"set_reward_authority_by_config_authority","docs":["Sets the reward authority for a specific reward index by a super authority.","","The super authority has the power to manage the distribution","and collection of rewards for the given index.","","# Arguments","","* `ctx` - The context for the `SetRewardAuthorityBySuperAuthority` instruction.","* `reward_index` - The index of the reward to set the authority for, represented as a `u8`.","","# Returns","","This function returns a `Result` which is `Ok` if the reward authority is successfully set,","or an error if it fails."],"discriminator":[250,169,128,84,100,121,109,55],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true},{"name":"new_reward_authority"}],"args":[{"name":"reward_index","type":"u8"}]},{"name":"set_reward_emissions","docs":["Sets the reward emissions rate for a specific reward in the ai dex pool (version 2).","","This function updates the emissions rate for the specified reward index in the pool.","It uses the provided context to set the emissions rate.","","# Arguments","","* `ctx` - The context for the `SetRewardEmissions` instruction.","* `reward_index` - The index of the reward to update, represented as a `u8`.","* `emissions_per_second_x64` - The emissions rate per second for the reward, represented as a `u128`.","","# Returns","","This function returns a `Result` which is `Ok` if the emissions rate is successfully set,","or an error if it fails."],"discriminator":[13,197,86,168,109,176,27,244],"accounts":[{"name":"ai_dex_pool","writable":true},{"name":"reward_authority","writable":true,"signer":true},{"name":"reward_vault","writable":true}],"args":[{"name":"reward_index","type":"u8"},{"name":"emissions_per_second_x64","type":"u128"}]},{"name":"set_start_timestamp_lp","docs":["Sets the start timestamp for the liquidity provision."],"discriminator":[177,177,206,243,232,15,112,219],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"start_timestamp_lp","type":"u64"}]},{"name":"set_start_timestamp_swap","docs":["Sets the start timestamp for the swapping."],"discriminator":[212,86,135,73,233,157,179,25],"accounts":[{"name":"ai_dex_config","relations":["ai_dex_pool"]},{"name":"ai_dex_pool","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"start_timestamp_swap","type":"u64"}]},{"name":"set_swap_referral_reward_fee_rate","docs":["Sets the swap referral reward fee rate for the ai dex."],"discriminator":[248,154,112,49,54,100,31,200],"accounts":[{"name":"ai_dex_config"},{"name":"swap_referral_account","writable":true},{"name":"config_authority","signer":true}],"args":[{"name":"swap_referral_reward_fee_rate","type":"u16"}]},{"name":"swap","docs":["Executes a swap operation in the AI DEX protocol.","","This function performs a swap operation with the specified parameters. It uses the provided context","and additional parameters to execute the swap.","","# Arguments","","* `ctx` - The context for the `Swap` instruction.","* `amount` - The amount to be swapped, represented as a `u64`.","* `other_amount_threshold` - The threshold for the other amount in the swap, represented as a `u64`.","* `sqrt_price_limit` - The square root price limit for the swap, represented as a `u128`.","* `amount_specified_is_input` - A boolean indicating whether the specified amount is the input amount.","* `a_to_b` - A boolean indicating the direction of the swap (true for A to B, false for B to A).","* `remaining_accounts_info` - Optional remaining accounts information for the swap.","","# Returns","","This function returns a `Result` which is `Ok` if the swap is successful, or an error if it fails."],"discriminator":[248,198,158,145,225,117,135,200],"accounts":[{"name":"token_program_a","docs":["The token program for token mint A"]},{"name":"token_program_b","docs":["The token program for token mint B"]},{"name":"memo_program","docs":["The memo program"],"address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"},{"name":"token_authority","docs":["The authority that signs transactions"],"signer":true},{"name":"ai_dex_pool","docs":["The AI DEX account, which is mutable"],"writable":true},{"name":"token_mint_a","docs":["The token mint A account"],"writable":true},{"name":"token_mint_b","docs":["The token mint B account"],"writable":true},{"name":"token_owner_account_a","docs":["The token owner account for token mint A, which is mutable and must match the mint of token mint A"],"writable":true},{"name":"token_vault_a","docs":["The token vault account for token mint A, which is mutable and must match the address in the AI DEX"],"writable":true},{"name":"token_owner_account_b","docs":["The token owner account for token mint B, which is mutable and must match the mint of token mint B"],"writable":true},{"name":"token_vault_b","docs":["The token vault account for token mint B, which is mutable and must match the address in the AI DEX"],"writable":true},{"name":"tick_array_0","writable":true},{"name":"tick_array_1","writable":true},{"name":"tick_array_2","writable":true},{"name":"oracle_account","writable":true,"optional":true},{"name":"price_update","docs":["Oracle Price Update Account: Can be either a real PriceUpdateV2 or a MockPriceUpdate"],"optional":true},{"name":"swap_referral","writable":true,"optional":true},{"name":"swap_referral_ata_a","writable":true,"optional":true},{"name":"swap_referral_ata_b","writable":true,"optional":true},{"name":"ai_dex_config","relations":["ai_dex_pool"]}],"args":[{"name":"amount","type":"u64"},{"name":"other_amount_threshold","type":"u64"},{"name":"sqrt_price_limit","type":"u128"},{"name":"amount_specified_is_input","type":"bool"},{"name":"a_to_b","type":"bool"},{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"two_hop_swap","docs":["Executes a two-hop swap with the given parameters.","","This function performs a two-hop swap operation, which involves swapping tokens","through two different pools. It uses the provided context and parameters to execute","the swap.","","# Arguments","","* `ctx` - The context for the `TwoHopSwap` instruction.","* `amount` - The amount of tokens to swap.","* `other_amount_threshold` - The threshold for the other amount in the swap.","* `amount_specified_is_input` - A boolean indicating if the specified amount is the input amount.","* `a_to_b_one` - A boolean indicating the direction of the first swap (A to B).","* `a_to_b_two` - A boolean indicating the direction of the second swap (A to B).","* `sqrt_price_limit_one` - The square root price limit for the first swap.","* `sqrt_price_limit_two` - The square root price limit for the second swap.","* `remaining_accounts_info` - Optional remaining accounts information.","","# Returns","","This function returns a `Result` which is `Ok` if the swap is successful,","or an error if it fails."],"discriminator":[195,96,237,108,68,162,219,230],"accounts":[{"name":"ai_dex_one","writable":true},{"name":"ai_dex_two","writable":true},{"name":"token_mint_input","writable":true},{"name":"token_mint_intermediate","writable":true},{"name":"token_mint_output","writable":true},{"name":"token_program_input"},{"name":"token_program_intermediate"},{"name":"token_program_output"},{"name":"token_owner_account_input","writable":true},{"name":"token_vault_one_input","writable":true},{"name":"token_vault_one_intermediate","writable":true},{"name":"token_vault_two_intermediate","writable":true},{"name":"token_vault_two_output","writable":true},{"name":"token_owner_account_output","writable":true},{"name":"token_authority","signer":true},{"name":"tick_array_one_0","writable":true},{"name":"tick_array_one_1","writable":true},{"name":"tick_array_one_2","writable":true},{"name":"tick_array_two_0","writable":true},{"name":"tick_array_two_1","writable":true},{"name":"tick_array_two_2","writable":true},{"name":"memo_program","address":"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr"},{"name":"oracle_account_a","writable":true,"optional":true},{"name":"oracle_account_b","writable":true,"optional":true},{"name":"price_update","docs":["Oracle Price Update Account: Can be either a real PriceUpdateV2 or a MockPriceUpdate"],"optional":true},{"name":"swap_referral_one","writable":true,"optional":true},{"name":"swap_referral_two","writable":true,"optional":true},{"name":"swap_referral_ata_input","writable":true,"optional":true},{"name":"swap_referral_ata_intermediate","writable":true,"optional":true},{"name":"swap_referral_ata_output","writable":true,"optional":true},{"name":"ai_dex_config_one"},{"name":"ai_dex_config_two"}],"args":[{"name":"amount","type":"u64"},{"name":"other_amount_threshold","type":"u64"},{"name":"amount_specified_is_input","type":"bool"},{"name":"a_to_b_one","type":"bool"},{"name":"a_to_b_two","type":"bool"},{"name":"sqrt_price_limit_one","type":{"array":["u8",16]}},{"name":"sqrt_price_limit_two","type":{"array":["u8",16]}},{"name":"remaining_accounts_info","type":{"option":{"defined":{"name":"RemainingAccountsInfo"}}}}]},{"name":"update_fees_and_rewards","docs":["Updates the fees and rewards for a position.","","This function updates the fees and rewards for the specified context.","It uses the provided context to perform the update.","","# Arguments","","* `ctx` - The context for the `UpdateFeesAndRewards` instruction.","","# Returns","","This function returns a `Result` which is `Ok` if the fees and rewards are successfully updated,","or an error if it fails."],"discriminator":[154,230,250,13,236,209,75,223],"accounts":[{"name":"ai_dex_pool","writable":true,"relations":["position","tick_array_lower","tick_array_upper"]},{"name":"position","writable":true},{"name":"tick_array_lower"},{"name":"tick_array_upper"}],"args":[]},{"name":"update_reinvestments","docs":["Add liquidity from the fee as reinvestment for an ai dex."],"discriminator":[62,137,191,175,193,206,168,93],"accounts":[{"name":"ai_dex_pool","writable":true,"relations":["position","tick_array_lower","tick_array_upper"]},{"name":"reinvestments_authority","signer":true},{"name":"position","writable":true},{"name":"position_token_account"},{"name":"tick_array_lower","writable":true},{"name":"tick_array_upper","writable":true},{"name":"reinvestments_account"}],"args":[]},{"name":"update_super_admin","docs":["Updates the SuperAdmin account with a new public key.","","This function allows the current super admin to authorize a new account as the super admin.","It ensures that only the current super admin has the authority to perform the update.","","# Arguments","","* `ctx` - The context containing all the required accounts.","This includes the current super admin's signature and the new super admin's address.","","# Returns","","This function returns a `Result` which is `Ok` if the update is successful,","or an `Err` if an error occurs."],"discriminator":[17,235,69,101,141,150,237,220],"accounts":[{"name":"super_admin_account","writable":true},{"name":"super_admin_address","signer":true},{"name":"new_super_admin_address"}],"args":[]}],"accounts":[{"name":"AiDexConfig","discriminator":[140,140,64,110,70,3,26,155]},{"name":"AiDexPool","discriminator":[168,226,145,229,240,148,50,33]},{"name":"AiDexReinvestments","discriminator":[57,205,190,182,59,67,218,33]},{"name":"FeeTier","discriminator":[56,75,159,76,142,68,190,105]},{"name":"OracleAccount","discriminator":[189,23,49,197,79,96,245,91]},{"name":"Position","discriminator":[170,188,143,228,122,64,247,208]},{"name":"PositionTradeBatch","discriminator":[155,155,230,69,161,68,83,66]},{"name":"SuperAdmin","discriminator":[10,254,27,111,57,58,118,146]},{"name":"SwapReferral","discriminator":[101,188,199,214,76,82,183,42]},{"name":"TickArray","discriminator":[69,97,189,190,110,7,66,187]}],"events":[{"name":"CollectProtocolFeesEvent","discriminator":[138,239,63,34,151,127,184,58]},{"name":"CollectReferralFeesEvent","discriminator":[15,111,89,198,148,148,248,177]},{"name":"ConfigInitializedEvent","discriminator":[22,167,192,50,220,20,10,71]},{"name":"DecreaseLiquidityEvent","discriminator":[58,222,86,58,68,50,85,56]},{"name":"DefaultFeeRateSetEvent","discriminator":[137,49,126,44,94,200,210,27]},{"name":"DefaultProtocolFeeRateSetEvent","discriminator":[50,31,15,7,138,43,136,205]},{"name":"DefaultReinvestmentFeeRateSetEvent","discriminator":[241,1,1,224,150,140,158,93]},{"name":"DefaultSwapReferralRewardFeeRateSetEvent","discriminator":[76,237,18,213,31,114,65,144]},{"name":"EndTimestampLpSetEvent","discriminator":[151,67,196,243,61,123,141,154]},{"name":"EndTimestampSwapSetEvent","discriminator":[212,237,117,171,19,232,10,246]},{"name":"FeeAuthorityUpdatedEvent","discriminator":[98,203,209,221,216,67,219,242]},{"name":"FeeRateSetEvent","discriminator":[228,235,2,221,236,57,177,128]},{"name":"FeeTierInitializedEvent","discriminator":[96,98,251,97,122,107,16,59]},{"name":"FeesAndRewardsUpdatedEvent","discriminator":[2,116,10,74,158,135,247,165]},{"name":"FeesCollectedEvent","discriminator":[228,238,55,219,37,85,82,54]},{"name":"IncreaseLiquidityEvent","discriminator":[49,79,105,212,32,34,30,84]},{"name":"InitializePositionTradeBatchWithMetadataEvent","discriminator":[91,213,37,223,8,180,124,168]},{"name":"InitializeTradeBatchPositionEvent","discriminator":[225,186,254,155,148,142,213,3]},{"name":"NewOracleAccountSetEvent","discriminator":[53,120,171,176,68,59,159,142]},{"name":"NewOracleMaxAgeSetEvent","discriminator":[232,192,21,149,214,40,194,57]},{"name":"PoolInitializedBasicEvent","discriminator":[86,93,176,18,69,45,149,162]},{"name":"PoolInitializedFinalEvent","discriminator":[141,253,192,197,213,5,189,70]},{"name":"PositionClosedEvent","discriminator":[76,129,10,225,238,51,158,126]},{"name":"PositionOpenedEvent","discriminator":[163,1,92,149,138,188,177,23]},{"name":"PositionTradeBatchDeletedEvent","discriminator":[49,6,45,15,230,215,23,183]},{"name":"PositionWithMetadataOpenedEvent","discriminator":[199,94,211,129,26,89,219,251]},{"name":"ProtocolFeeRateSetEvent","discriminator":[7,120,190,225,80,146,142,50]},{"name":"ReinvestFeesEvent","discriminator":[174,101,133,6,172,128,208,97]},{"name":"ReinvestmentNewAuthoritySetEvent","discriminator":[11,17,177,222,226,217,74,104]},{"name":"ReinvestmentsAuthorityInitializedEvent","discriminator":[205,78,187,184,236,105,168,65]},{"name":"RewardAuthoritySetEvent","discriminator":[68,231,197,58,26,35,174,249]},{"name":"RewardAuthorityUpdatedEvent","discriminator":[70,148,191,89,224,75,50,6]},{"name":"RewardCollectedEvent","discriminator":[241,95,182,205,45,202,7,79]},{"name":"RewardEmissionsSetEvent","discriminator":[215,34,141,201,114,152,164,116]},{"name":"RewardInitializedEvent","discriminator":[219,146,100,186,124,253,237,33]},{"name":"StartTimestampLpSetEvent","discriminator":[217,205,169,217,103,130,65,33]},{"name":"StartTimestampSwapSetEvent","discriminator":[170,109,162,106,135,201,80,25]},{"name":"SwapExecutedEvent","discriminator":[183,28,219,210,164,184,62,12]},{"name":"SwapReferralInitialized","discriminator":[191,60,210,248,35,209,153,101]},{"name":"SwapReferralRewardFeeRateSetEvent","discriminator":[234,108,197,176,160,40,31,16]},{"name":"SwapTickUpdate","discriminator":[120,92,71,210,114,233,110,172]},{"name":"TVL","discriminator":[25,217,21,197,127,136,63,102]},{"name":"TickArrayInitializedEvent","discriminator":[31,59,13,94,35,225,138,193]},{"name":"TradeBatchPositionClosedEvent","discriminator":[234,91,224,128,115,171,73,67]},{"name":"TradeBatchPositionOpenedEvent","discriminator":[107,145,106,54,157,11,59,217]},{"name":"TransferReferralFeeEvent","discriminator":[164,24,156,203,17,194,229,118]},{"name":"UpdateTicksEvent","discriminator":[218,47,200,227,120,114,99,79]}],"errors":[{"code":6000,"name":"EnumConversionError","msg":"Failed to convert enum value."},{"code":6001,"name":"InvalidStartTickIndex","msg":"Invalid start tick index."},{"code":6002,"name":"TickArrayAlreadyExists","msg":"Tick array already exists in this pool."},{"code":6003,"name":"TickArrayIndexOutOfBounds","msg":"Tick array index out of bounds."},{"code":6004,"name":"UnsupportedTickSpacing","msg":"Unsupported tick spacing."},{"code":6005,"name":"NonEmptyPositionCloseError","msg":"Position is not empty and cannot be closed."},{"code":6006,"name":"DivisionByZeroError","msg":"Division by zero is not allowed."},{"code":6007,"name":"BigIntCastError","msg":"Failed to cast number to BigInt."},{"code":6008,"name":"NumberDowncastError","msg":"Failed to downcast number."},{"code":6009,"name":"TickNotFoundError","msg":"Tick not found in tick array."},{"code":6010,"name":"InvalidTickIndexError","msg":"Tick index is out of bounds or uninitializable."},{"code":6011,"name":"SqrtPriceOutOfBoundsError","msg":"Sqrt price is out of bounds."},{"code":6012,"name":"ZeroLiquidityError","msg":"Liquidity amount must be greater than zero."},{"code":6013,"name":"ExcessiveLiquidityError","msg":"Liquidity amount exceeds maximum allowed."},{"code":6014,"name":"LiquidityOverflowError","msg":"Liquidity overflow error."},{"code":6015,"name":"LiquidityUnderflowError","msg":"Liquidity underflow error."},{"code":6016,"name":"TickLiquidityNetError","msg":"Tick liquidity net overflow or underflow."},{"code":6017,"name":"TokenLimitExceededError","msg":"Exceeded maximum token limit."},{"code":6018,"name":"TokenAmountBelowMinimumError","msg":"Token amount below minimum required."},{"code":6019,"name":"InvalidDelegateError","msg":"Invalid or missing delegate for position token account."},{"code":6020,"name":"InvalidPositionTokenAmountError","msg":"Position token amount must be exactly 1."},{"code":6021,"name":"TimestampConversionError","msg":"Timestamp conversion from i64 to u64 failed."},{"code":6022,"name":"InvalidTimestampError","msg":"Timestamp must be greater than the last updated timestamp."},{"code":6023,"name":"InvalidTickArraySequenceError","msg":"Invalid tick array sequence."},{"code":6024,"name":"InvalidTokenMintOrderError","msg":"Incorrect token mint order."},{"code":6025,"name":"RewardNotInitializedError","msg":"Reward not initialized."},{"code":6026,"name":"InvalidRewardIndexError","msg":"Invalid reward index."},{"code":6027,"name":"InsufficientRewardVaultAmountError","msg":"Insufficient reward vault amount for emissions."},{"code":6028,"name":"FeeRateExceededError","msg":"Exceeded maximum fee rate."},{"code":6029,"name":"ProtocolFeeRateExceededError","msg":"Exceeded maximum protocol fee rate."},{"code":6030,"name":"MultiplicationShiftRightOverflowError","msg":"Multiplication with shift right overflow."},{"code":6031,"name":"MulDivOverflowError","msg":"MulDiv overflow error."},{"code":6032,"name":"MulDivInvalidInputError","msg":"Invalid input for MulDiv."},{"code":6033,"name":"MultiplicationOverflowError","msg":"Multiplication overflow error."},{"code":6034,"name":"InvalidSqrtPriceLimitDirectionError","msg":"Invalid SqrtPriceLimit direction for swap."},{"code":6035,"name":"NoTradableAmountError","msg":"No tradable amount available for swap."},{"code":6036,"name":"AmountOutBelowMinimumError","msg":"Amount out is below the minimum threshold."},{"code":6037,"name":"AmountInAboveMaximumError","msg":"Amount in exceeds the maximum threshold."},{"code":6038,"name":"InvalidTickArraySequenceErrorIndexError","msg":"Invalid index for tick array sequence."},{"code":6039,"name":"AmountCalculationOverflowError","msg":"Calculated amount overflows."},{"code":6040,"name":"AmountRemainingOverflowError","msg":"Remaining amount overflows."},{"code":6041,"name":"InvalidIntermediaryMintError","msg":"Invalid intermediary mint."},{"code":6042,"name":"DuplicateTwoHopPoolError","msg":"Duplicate two-hop pool."},{"code":6043,"name":"InvalidTradeBatchIndexError","msg":"Trade batch index is out of bounds."},{"code":6044,"name":"PositionAlreadyOpenedError","msg":"Position has already been opened."},{"code":6045,"name":"PositionAlreadyClosedError","msg":"Position has already been closed."},{"code":6046,"name":"NonDeletablePositionTradeBatchError","msg":"Cannot delete position trade batch with open positions."},{"code":6047,"name":"UnsupportedTokenMintError","msg":"Unsupported token mint attributes."},{"code":6048,"name":"InvalidRemainingAccountsSliceError","msg":"Invalid remaining accounts slice."},{"code":6049,"name":"InsufficientRemainingAccountsError","msg":"Insufficient remaining accounts."},{"code":6050,"name":"MissingExtraAccountsForTransferHookError","msg":"Transfer hook requires extra accounts."},{"code":6051,"name":"AmountMismatchError","msg":"Mismatch between output and input amounts."},{"code":6052,"name":"TransferFeeCalculationError","msg":"Failed to calculate transfer fee."},{"code":6053,"name":"DuplicateAccountTypesError","msg":"Duplicate account types provided."},{"code":6054,"name":"FullRangeOnlyPoolError","msg":"Only full-range positions are supported in this pool."},{"code":6055,"name":"InvalidInputTokenMint","msg":"The provided input token mint does not match the expected value."},{"code":6056,"name":"InvalidIntermediateTokenMint","msg":"The provided intermediate token mint does not match the expected value."},{"code":6057,"name":"InvalidOutputTokenMint","msg":"The provided output token mint does not match the expected value."},{"code":6058,"name":"InvalidVault","msg":"The vault provided does not match the expected vault."},{"code":6059,"name":"InvalidTokenOwner","msg":"The token owner account does not match the expected token mint."},{"code":6060,"name":"InvalidRewardAuthorityError","msg":"The provided reward authority does not match the expected authority for the reward."},{"code":6061,"name":"InvalidSeed","msg":"The provided seed does not match the expected value."},{"code":6062,"name":"InvalidRewardMintError","msg":"The provided reward mint does not match the expected value."},{"code":6063,"name":"VaultAlreadyInitialized","msg":"Token vaults have already been initialized."},{"code":6064,"name":"SuperAdminAlreadyInitialized","msg":"Super admin has already been initialized."},{"code":6065,"name":"InvalidTemporaryPoolFunderError","msg":"Invalid temporary pool funder."},{"code":6066,"name":"LiquidityProvisionWindowClosed","msg":"Invalid liquidity provision window."},{"code":6067,"name":"SwapWindowClosed","msg":"Invalid swap window."},{"code":6068,"name":"InvalidOraclePoolTickSpacing","msg":"Pool with oracle should be only full range"},{"code":6069,"name":"MissingOraclePriceFeedId","msg":"Missing oracle price feed id"},{"code":6070,"name":"InvalidPrice","msg":"Invalid oracle price"},{"code":6071,"name":"MissingPriceUpdate","msg":"Missing oracle price update"},{"code":6072,"name":"MissingInitialSqrtPrice","msg":"Missing initial sqrt price"},{"code":6073,"name":"MissingOracleAccount","msg":"Missing oracle account"},{"code":6074,"name":"MissingTimestamps","msg":"Missing timestamps"},{"code":6075,"name":"MissingMaxAge","msg":"Missing max age"},{"code":6076,"name":"InvalidPriceUpdateAccount","msg":"Invalid price update account"},{"code":6077,"name":"ReferralRewardFeeRateExceededError","msg":"Exceeded maximum referral reward fee rate"},{"code":6078,"name":"MissingSwapReferralAccount","msg":"Missing swap referral account"},{"code":6079,"name":"MissingSwapReferralAta","msg":"Missing swap referral ATA"},{"code":6080,"name":"InvalidSwapReferralAta","msg":"Invalid swap referral ATA"},{"code":6081,"name":"ReinvestmentNotEnabled","msg":"Reinvestment is not enabled for this position."},{"code":6082,"name":"InvalidAiDexConfig","msg":"Invalid provided config account"},{"code":6083,"name":"ZeroReferralAmountWithdrawal","msg":"Zero referral amount withdrawal"},{"code":6084,"name":"FeeRateUnchanged","msg":"Fee rate unchanged"},{"code":6085,"name":"EmptyAdminInput","msg":"Empty admin input"},{"code":6086,"name":"DifferentAiDexPoolTickArrayAccount","msg":"Different AI DEX pool tick array account"},{"code":6087,"name":"TooManyTickArrays","msg":"Too many tick arrays provided in the remaining accounts slice"},{"code":6088,"name":"RemainingAccountsDuplicatedAccountsType","msg":"Remaining accounts slice contains duplicated account types"},{"code":6089,"name":"PartialFillError","msg":"Partial fill error"}],"types":[{"name":"AccountsType","type":{"kind":"enum","variants":[{"name":"TransferHookA"},{"name":"TransferHookB"},{"name":"TransferHookReward"},{"name":"TransferHookInput"},{"name":"TransferHookIntermediate"},{"name":"TransferHookOutput"},{"name":"TransferHookReferralFee"},{"name":"TickArrays"},{"name":"TickArraysOne"},{"name":"TickArraysTwo"}]}},{"name":"AiDexConfig","type":{"kind":"struct","fields":[{"name":"config_authority","type":"pubkey"},{"name":"default_protocol_fee_rate","type":"u16"},{"name":"default_swap_referral_reward_fee_rate","type":"u16"}]}},{"name":"AiDexPool","docs":["Represents the state of the AiDex program."],"serialization":"bytemuckunsafe","repr":{"kind":"rust","packed":true},"type":{"kind":"struct","fields":[{"name":"ai_dex_config","docs":["The configuration of the AiDex program."],"type":"pubkey"},{"name":"ai_dex_bump","docs":["The bump value used for account creation."],"type":{"array":["u8",1]}},{"name":"tick_spacing","docs":["The spacing between ticks."],"type":"u16"},{"name":"tick_spacing_seed","docs":["The seed value used for tick spacing."],"type":{"array":["u8",2]}},{"name":"fee_rate","docs":["The fee rate for transactions, stored as hundredths of a basis point.","A value of u16::MAX corresponds to approximately 6.5%."],"type":"u16"},{"name":"protocol_fee_rate","docs":["The portion of the fee rate taken as protocol fees, stored as basis points."],"type":"u16"},{"name":"liquidity","docs":["The maximum amount that can be held by the Solana account."],"type":"u128"},{"name":"sqrt_price","docs":["The square root of the price, stored as Q64.64."],"type":"u128"},{"name":"tick_current_index","docs":["The current index of the tick."],"type":"i32"},{"name":"protocol_fee_owed_a","docs":["The protocol fee owed for token A."],"type":"u64"},{"name":"protocol_fee_owed_b","docs":["The protocol fee owed for token B."],"type":"u64"},{"name":"token_mint_a","docs":["The mint address for token A."],"type":"pubkey"},{"name":"token_mint_b","docs":["The mint address for token B."],"type":"pubkey"},{"name":"token_vault_a","docs":["The vault address for token A."],"type":"pubkey"},{"name":"token_vault_b","docs":["The vault address for token B."],"type":"pubkey"},{"name":"fee_growth_global_a","docs":["The global fee growth for token A, stored as Q64.64."],"type":"u128"},{"name":"fee_growth_global_b","docs":["The global fee growth for token B, stored as Q64.64."],"type":"u128"},{"name":"reward_last_updated_timestamp","docs":["The timestamp when the rewards were last updated."],"type":"u64"},{"name":"start_timestamp_lp","type":"u64"},{"name":"start_timestamp_swap","type":"u64"},{"name":"end_timestamp_swap","type":"u64"},{"name":"end_timestamp_lp","type":"u64"},{"name":"oracle_address","type":"pubkey"},{"name":"last_updated_oracle_timestamp","type":"u64"},{"name":"is_temporary_pool","type":"bool"},{"name":"is_oracle_pool","type":"bool"},{"name":"reward_infos","docs":["The reward information for each reward."],"type":{"array":[{"defined":{"name":"AiDexRewardInfo"}},3]}}]}},{"name":"AiDexReinvestments","type":{"kind":"struct","fields":[{"name":"reinvestments_authority","type":"pubkey"},{"name":"default_reinvestment_fee_rate","type":"u16"}]}},{"name":"AiDexRewardInfo","docs":["Stores the state relevant for tracking liquidity mining rewards at the `AiDex` level.","These values are used in conjunction with `PositionRewardInfo`, `Tick.reward_growths_outside`,","and `AiDex.reward_last_updated_timestamp` to determine how many rewards are earned by open","positions."],"serialization":"bytemuckunsafe","repr":{"kind":"rust","packed":true},"type":{"kind":"struct","fields":[{"name":"mint","docs":["Reward token mint."],"type":"pubkey"},{"name":"vault","docs":["Reward vault token account."],"type":"pubkey"},{"name":"authority","docs":["Authority account that has permission to initialize the reward and set emissions."],"type":"pubkey"},{"name":"emissions_per_second_x64","docs":["Q64.64 number that indicates how many tokens per second are earned per unit of liquidity."],"type":"u128"},{"name":"growth_global_x64","docs":["Q64.64 number that tracks the total tokens earned per unit of liquidity since the reward","emissions were turned on."],"type":"u128"}]}},{"name":"CollectProtocolFeesEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"protocol_fee_owed_a","type":"u64"},{"name":"protocol_fee_owed_b","type":"u64"},{"name":"token_mint_a","type":"pubkey"},{"name":"token_vault_a","type":"pubkey"},{"name":"token_destination_a","type":"pubkey"},{"name":"token_mint_b","type":"pubkey"},{"name":"token_vault_b","type":"pubkey"},{"name":"token_destination_b","type":"pubkey"}]}},{"name":"CollectReferralFeesEvent","type":{"kind":"struct","fields":[{"name":"swap_referral","type":"pubkey"},{"name":"referrer_address","type":"pubkey"},{"name":"token_mint","type":"pubkey"},{"name":"referral_ata","type":"pubkey"},{"name":"destination_token_account","type":"pubkey"}]}},{"name":"ConfigInitializedEvent","type":{"kind":"struct","fields":[{"name":"config_key","type":"pubkey"},{"name":"super_admin_authority","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"default_protocol_fee_rate","type":"u16"},{"name":"default_referral_reward_fee_rate","type":"u16"}]}},{"name":"DecreaseLiquidityEvent","type":{"kind":"struct","fields":[{"name":"liquidity_amount","type":"u128"},{"name":"token_min_a","type":"u64"},{"name":"token_min_b","type":"u64"},{"name":"position_authority","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"token_mint_a","type":"pubkey"},{"name":"token_mint_b","type":"pubkey"},{"name":"token_vault_a","type":"pubkey"},{"name":"token_vault_b","type":"pubkey"},{"name":"token_owner_account_a","type":"pubkey"},{"name":"token_owner_account_b","type":"pubkey"},{"name":"delta_a","type":"u64"},{"name":"delta_b","type":"u64"},{"name":"transfer_fee_excluded_delta_a","type":"u64"},{"name":"transfer_fee_excluded_delta_b","type":"u64"},{"name":"sqrt_price","type":"u128"},{"name":"new_liquidity_value","type":"u128"},{"name":"update_position","type":{"defined":{"name":"PositionUpdate"}}},{"name":"referral_code","type":"string"},{"name":"timestamp","type":"u64"}]}},{"name":"DefaultFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"fee_tier_key","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"previous_default_fee_rate","type":"u16"},{"name":"new_default_fee_rate","type":"u16"}]}},{"name":"DefaultProtocolFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"new_default_protocol_fee_rate","type":"u16"}]}},{"name":"DefaultReinvestmentFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"reinvestments_account","type":"pubkey"},{"name":"reinvestments_authority","type":"pubkey"},{"name":"new_default_reinvestment_fee_rate","type":"u16"}]}},{"name":"DefaultSwapReferralRewardFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"default_swap_referral_reward_fee_rate","type":"u16"}]}},{"name":"EndTimestampLpSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_timestamp","type":"u64"},{"name":"new_timestamp","type":"u64"}]}},{"name":"EndTimestampSwapSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_timestamp","type":"u64"},{"name":"new_timestamp","type":"u64"}]}},{"name":"FeeAuthorityUpdatedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"old_fee_authority","type":"pubkey"},{"name":"new_fee_authority","type":"pubkey"}]}},{"name":"FeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_fee_rate","type":"u16"},{"name":"new_fee_rate","type":"u16"}]}},{"name":"FeeTier","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"tick_spacing","type":"u16"},{"name":"default_fee_rate","type":"u16"}]}},{"name":"FeeTierInitializedEvent","type":{"kind":"struct","fields":[{"name":"config_key","type":"pubkey"},{"name":"fee_tier_key","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"tick_spacing","type":"u16"},{"name":"default_fee_rate","type":"u16"}]}},{"name":"FeesAndRewardsUpdatedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position_key","type":"pubkey"},{"name":"position_update_info","type":{"defined":{"name":"PositionUpdate"}}},{"name":"timestamp","type":"u64"}]}},{"name":"FeesCollectedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position_authority","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"position_token_account","type":"pubkey"},{"name":"token_mint_a","type":"pubkey"},{"name":"token_mint_b","type":"pubkey"},{"name":"token_owner_account_a","type":"pubkey"},{"name":"token_vault_a","type":"pubkey"},{"name":"token_owner_account_b","type":"pubkey"},{"name":"token_vault_b","type":"pubkey"},{"name":"fee_owed_a","type":"u64"},{"name":"fee_owed_b","type":"u64"}]}},{"name":"IncreaseLiquidityEvent","type":{"kind":"struct","fields":[{"name":"liquidity_amount","type":"u128"},{"name":"token_max_a","type":"u64"},{"name":"token_max_b","type":"u64"},{"name":"position_authority","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"token_mint_a","type":"pubkey"},{"name":"token_mint_b","type":"pubkey"},{"name":"token_vault_a","type":"pubkey"},{"name":"token_vault_b","type":"pubkey"},{"name":"token_owner_account_a","type":"pubkey"},{"name":"token_owner_account_b","type":"pubkey"},{"name":"delta_a","type":"u64"},{"name":"delta_b","type":"u64"},{"name":"transfer_fee_included_delta_a","type":"u64"},{"name":"transfer_fee_included_delta_b","type":"u64"},{"name":"sqrt_price","type":"u128"},{"name":"new_liquidity_value","type":"u128"},{"name":"update_position","type":{"defined":{"name":"PositionUpdate"}}},{"name":"referral_code","type":"string"},{"name":"timestamp","type":"u64"}]}},{"name":"InitializePositionTradeBatchWithMetadataEvent","type":{"kind":"struct","fields":[{"name":"funder","type":"pubkey"},{"name":"position_trade_batch","type":"pubkey"},{"name":"position_trade_batch_mint","type":"pubkey"},{"name":"position_trade_batch_metadata","type":"pubkey"},{"name":"position_trade_batch_token_account_key","type":"pubkey"},{"name":"position_trade_batch_token_account_mint","type":"pubkey"},{"name":"position_trade_batch_owner","type":"pubkey"},{"name":"metadata_update_auth","type":"pubkey"},{"name":"token_program","type":"pubkey"},{"name":"associated_token_program","type":"pubkey"},{"name":"metadata_program","type":"pubkey"},{"name":"position_seed","type":"u64"}]}},{"name":"InitializeTradeBatchPositionEvent","type":{"kind":"struct","fields":[{"name":"position_trade_batch","type":"pubkey"},{"name":"position_trade_batch_mint","type":"pubkey"},{"name":"position_trade_batch_token_account_key","type":"pubkey"},{"name":"position_trade_batch_token_account_mint","type":"pubkey"},{"name":"position_trade_batch_owner","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"position_seed","type":"u64"}]}},{"name":"NewOracleAccountSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"new_oracle_account","type":"pubkey"}]}},{"name":"NewOracleMaxAgeSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"oracle_account","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_maximum_age","type":"u64"},{"name":"new_maximum_age","type":"u64"}]}},{"name":"OracleAccount","type":{"kind":"struct","fields":[{"name":"price_feed_id","type":"string"},{"name":"maximum_age","type":"u64"},{"name":"mint_a","type":"pubkey"},{"name":"mint_b","type":"pubkey"}]}},{"name":"PoolInitializedBasicEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"token_mint_a","type":"pubkey"},{"name":"token_mint_b","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"tick_spacing","type":"u16"},{"name":"initial_sqrt_price","type":"u128"},{"name":"default_fee_rate","type":"u16"},{"name":"fee_tier","type":"pubkey"},{"name":"current_tick","type":"i32"},{"name":"protocol_fee_owed_a","type":"u64"},{"name":"protocol_fee_owed_b","type":"u64"},{"name":"is_temporary_pool","type":"bool"},{"name":"is_oracle_pool","type":"bool"},{"name":"oracle_account","type":"pubkey"},{"name":"price_update","type":"pubkey"},{"name":"price_feed_id","type":"string"}]}},{"name":"PoolInitializedFinalEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"token_vault_a","type":"pubkey"},{"name":"token_vault_b","type":"pubkey"},{"name":"token_program_a","type":"pubkey"},{"name":"token_program_b","type":"pubkey"},{"name":"fee_growth_global_a","type":"u128"},{"name":"fee_growth_global_b","type":"u128"},{"name":"start_timestamp_lp","type":"u64"},{"name":"end_timestamp_lp","type":"u64"},{"name":"start_timestamp_swap","type":"u64"},{"name":"end_timestamp_swap","type":"u64"},{"name":"tick_spacing","type":"u16"}]}},{"name":"Position","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position_mint","type":"pubkey"},{"name":"liquidity","type":"u128"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"fee_growth_checkpoint_a","type":"u128"},{"name":"fee_owed_a","type":"u64"},{"name":"fee_growth_checkpoint_b","type":"u128"},{"name":"fee_owed_b","type":"u64"},{"name":"reward_infos","type":{"array":[{"defined":{"name":"PositionRewardInfo"}},3]}},{"name":"is_reinvestment_on","type":"bool"}]}},{"name":"PositionClosedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position_authority","type":"pubkey"},{"name":"receiver","type":"pubkey"},{"name":"position_mint","type":"pubkey"},{"name":"position_token_account_key","type":"pubkey"},{"name":"position_token_account_amount","type":"u64"},{"name":"position_token_account_mint","type":"pubkey"},{"name":"position","type":"pubkey"}]}},{"name":"PositionOpenedEvent","type":{"kind":"struct","fields":[{"name":"funder","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"position_mint","type":"pubkey"},{"name":"position_token_account","type":"pubkey"},{"name":"owner","type":"pubkey"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"token_program","type":"pubkey"},{"name":"position_seed","type":"u64"},{"name":"is_reinvestment_on","type":"bool"}]}},{"name":"PositionRewardInfo","type":{"kind":"struct","fields":[{"name":"growth_inside_checkpoint","type":"u128"},{"name":"amount_owed","type":"u64"}]}},{"name":"PositionTradeBatch","type":{"kind":"struct","fields":[{"name":"position_trade_batch_mint","type":"pubkey"},{"name":"position_bitmap","type":{"array":["u8",32]}}]}},{"name":"PositionTradeBatchDeletedEvent","type":{"kind":"struct","fields":[{"name":"position_trade_batch","type":"pubkey"},{"name":"position_trade_batch_mint","type":"pubkey"},{"name":"position_trade_batch_token_account_key","type":"pubkey"},{"name":"position_trade_batch_token_account_amount","type":"u64"},{"name":"position_trade_batch_token_account_owner","type":"pubkey"},{"name":"position_trade_batch_owner","type":"pubkey"},{"name":"receiver","type":"pubkey"},{"name":"token_program","type":"pubkey"}]}},{"name":"PositionUpdate","type":{"kind":"struct","fields":[{"name":"liquidity","type":"u128"},{"name":"fee_growth_checkpoint_a","type":"u128"},{"name":"fee_owed_a","type":"u64"},{"name":"fee_growth_checkpoint_b","type":"u128"},{"name":"fee_owed_b","type":"u64"},{"name":"reward_infos","type":{"array":[{"defined":{"name":"PositionRewardInfo"}},3]}}]}},{"name":"PositionWithMetadataOpenedEvent","type":{"kind":"struct","fields":[{"name":"funder","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"position_mint","type":"pubkey"},{"name":"position_token_account","type":"pubkey"},{"name":"position_metadata_account","type":"pubkey"},{"name":"owner","type":"pubkey"},{"name":"tick_lower_index","type":"i32"},{"name":"tick_upper_index","type":"i32"},{"name":"token_program","type":"pubkey"},{"name":"position_seed","type":"u64"},{"name":"is_reinvestment_on","type":"bool"}]}},{"name":"ProtocolFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"new_protocol_fee_rate","type":"u16"}]}},{"name":"ReinvestFeesEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position","type":"pubkey"},{"name":"reinvestments_authority","type":"pubkey"},{"name":"reinvested_amount_a","type":"u64"},{"name":"reinvested_amount_b","type":"u64"},{"name":"liquidity_delta_added","type":"u128"},{"name":"protocol_fee_added_a","type":"u64"},{"name":"protocol_fee_added_b","type":"u64"}]}},{"name":"ReinvestmentNewAuthoritySetEvent","type":{"kind":"struct","fields":[{"name":"reinvestments_account","type":"pubkey"},{"name":"reinvestments_authority","type":"pubkey"},{"name":"new_reinvestments_authority","type":"pubkey"}]}},{"name":"ReinvestmentsAuthorityInitializedEvent","type":{"kind":"struct","fields":[{"name":"reinvestments_account","type":"pubkey"},{"name":"super_admin_authority","type":"pubkey"},{"name":"reinvestments_authority","type":"pubkey"},{"name":"default_reinvestment_fee_rate","type":"u16"}]}},{"name":"RemainingAccountsInfo","type":{"kind":"struct","fields":[{"name":"slices","type":{"vec":{"defined":{"name":"RemainingAccountsSlice"}}}}]}},{"name":"RemainingAccountsSlice","type":{"kind":"struct","fields":[{"name":"accounts_type","type":{"defined":{"name":"AccountsType"}}},{"name":"length","type":"u8"}]}},{"name":"RewardAuthoritySetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"reward_index","type":"u8"},{"name":"old_reward_authority","type":"pubkey"},{"name":"new_reward_authority","type":"pubkey"},{"name":"config_authority","type":"pubkey"}]}},{"name":"RewardAuthorityUpdatedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"reward_index","type":"u8"},{"name":"previous_reward_authority","type":"pubkey"},{"name":"new_reward_authority","type":"pubkey"}]}},{"name":"RewardCollectedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"position_key","type":"pubkey"},{"name":"position_authority","type":"pubkey"},{"name":"reward_mint","type":"pubkey"},{"name":"reward_vault","type":"pubkey"},{"name":"reward_owner_account","type":"pubkey"},{"name":"reward_index","type":"u8"},{"name":"transfer_amount","type":"u64"},{"name":"updated_amount_owed","type":"u64"}]}},{"name":"RewardEmissionsSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"reward_index","type":"u8"},{"name":"reward_authority","type":"pubkey"},{"name":"reward_vault_key","type":"pubkey"},{"name":"reward_vault_amount","type":"u64"},{"name":"emissions_per_second_x64","type":"u128"},{"name":"emissions_per_day","type":"u64"},{"name":"timestamp","type":"u64"}]}},{"name":"RewardInitializedEvent","type":{"kind":"struct","fields":[{"name":"reward_index","type":"u8"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"reward_authority","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"reward_mint","type":"pubkey"},{"name":"reward_vault","type":"pubkey"}]}},{"name":"StartTimestampLpSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_timestamp","type":"u64"},{"name":"new_timestamp","type":"u64"}]}},{"name":"StartTimestampSwapSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"ai_dex_config","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"old_timestamp","type":"u64"},{"name":"new_timestamp","type":"u64"}]}},{"name":"SuperAdmin","docs":["The SuperAdmin account which holds the super admin's public key."],"type":{"kind":"struct","fields":[{"name":"super_admin","type":"pubkey"}]}},{"name":"SwapExecutedEvent","type":{"kind":"struct","fields":[{"name":"token_authority","type":"pubkey"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"amount","type":"u64"},{"name":"other_amount_threshold","type":"u64"},{"name":"sqrt_price_limit","type":"u128"},{"name":"amount_specified_is_input","type":"bool"},{"name":"a_to_b","type":"bool"},{"name":"sqrt_price","type":"u128"},{"name":"liquidity","type":"u128"},{"name":"current_tick","type":"i32"},{"name":"fee_growth_global_a","type":"u128"},{"name":"fee_growth_global_b","type":"u128"},{"name":"timestamp","type":"u64"}]}},{"name":"SwapReferral","type":{"kind":"struct","fields":[{"name":"referrer_address","type":"pubkey"},{"name":"referral_reward_fee_rate","type":"u16"},{"name":"referral_code","type":"string"},{"name":"referral_bump","type":{"array":["u8",1]}}]}},{"name":"SwapReferralInitialized","type":{"kind":"struct","fields":[{"name":"config_account","type":"pubkey"},{"name":"referrer","type":"pubkey"},{"name":"referral_code","type":"string"},{"name":"swap_referral","type":"pubkey"}]}},{"name":"SwapReferralRewardFeeRateSetEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_config","type":"pubkey"},{"name":"swap_referral_account","type":"pubkey"},{"name":"config_authority","type":"pubkey"},{"name":"new_swap_referral_reward_fee_rate","type":"u16"}]}},{"name":"SwapTickUpdate","type":{"kind":"struct","fields":[{"name":"tick_array_start_index","type":"i32"},{"name":"tick_index","type":"i32"},{"name":"tick_update","type":{"defined":{"name":"TickUpdate"}}}]}},{"name":"TVL","type":{"kind":"struct","fields":[{"name":"amount_in_vault_a","type":"u64"},{"name":"amount_out_vault_a","type":"u64"},{"name":"amount_in_vault_b","type":"u64"},{"name":"amount_out_vault_b","type":"u64"}]}},{"name":"Tick","serialization":"bytemuckunsafe","repr":{"kind":"rust","packed":true},"type":{"kind":"struct","fields":[{"name":"initialized","type":"bool"},{"name":"liquidity_net","type":"i128"},{"name":"liquidity_gross","type":"u128"},{"name":"fee_growth_outside_a","type":"u128"},{"name":"fee_growth_outside_b","type":"u128"},{"name":"reward_growths_outside","type":{"array":["u128",3]}}]}},{"name":"TickArray","serialization":"bytemuckunsafe","repr":{"kind":"rust","packed":true},"type":{"kind":"struct","fields":[{"name":"start_tick_index","type":"i32"},{"name":"ticks","type":{"array":[{"defined":{"name":"Tick"}},88]}},{"name":"ai_dex_pool","type":"pubkey"}]}},{"name":"TickArrayInitializedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"tick_array","type":"pubkey"},{"name":"start_tick_index","type":"i32"}]}},{"name":"TickUpdate","type":{"kind":"struct","fields":[{"name":"initialized","type":"bool"},{"name":"liquidity_net","type":"i128"},{"name":"liquidity_gross","type":"u128"},{"name":"fee_growth_outside_a","type":"u128"},{"name":"fee_growth_outside_b","type":"u128"},{"name":"reward_growths_outside","type":{"array":["u128",3]}}]}},{"name":"TradeBatchPositionClosedEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"trade_batch_index","type":"u16"},{"name":"position_trade_batch","type":"pubkey"},{"name":"position_trade_batch_token_account","type":"pubkey"},{"name":"position_trade_batch_authority","type":"pubkey"},{"name":"trade_batch_position","type":"pubkey"},{"name":"receiver","type":"pubkey"}]}},{"name":"TradeBatchPositionOpenedEvent","type":{"kind":"struct","fields":[{"name":"trade_batch_index","type":"u16"},{"name":"position_trade_batch_key","type":"pubkey"},{"name":"position_trade_batch_mint","type":"pubkey"},{"name":"trade_batch_position_tick_lower_index","type":"i32"},{"name":"trade_batch_position_tick_upper_index","type":"i32"},{"name":"position_trade_batch_authority","type":"pubkey"},{"name":"position_trade_batch_token_account_key","type":"pubkey"},{"name":"position_trade_batch_token_account_mint","type":"pubkey"},{"name":"position_trade_batch_token_account_amount","type":"u64"},{"name":"ai_dex_pool","type":"pubkey"},{"name":"funder","type":"pubkey"},{"name":"is_reinvestment_on","type":"bool"}]}},{"name":"TransferReferralFeeEvent","type":{"kind":"struct","fields":[{"name":"ai_dex_pool","type":"pubkey"},{"name":"swap_referral","type":"pubkey"},{"name":"amount","type":"u64"},{"name":"token_mint","type":"pubkey"},{"name":"token_vault","type":"pubkey"},{"name":"token_program","type":"pubkey"},{"name":"a_to_b","type":"bool"},{"name":"swap_referral_ata","type":"pubkey"}]}},{"name":"UpdateTicksEvent","type":{"kind":"struct","fields":[{"name":"tick_lower_index","type":"i32"},{"name":"tick_lower_update","type":{"defined":{"name":"TickUpdate"}}},{"name":"tick_upper_index","type":"i32"},{"name":"tick_upper_update","type":{"defined":{"name":"TickUpdate"}}},{"name":"tick_array_lower","type":"pubkey"},{"name":"tick_array_upper","type":"pubkey"}]}}]}
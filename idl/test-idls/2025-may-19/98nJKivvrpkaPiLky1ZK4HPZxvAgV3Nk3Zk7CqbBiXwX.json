{"address":"98nJKivvrpkaPiLky1ZK4HPZxvAgV3Nk3Zk7CqbBiXwX","metadata":{"name":"source_chain_guard","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"cancel_order","docs":["Cancels Order","","### Restrictions","* Can't cancel order if it's being executed","* User must have `Token IN` account if `Token IN` is recovered","* User must have `Stablecoin` account if `Stablecoin` is recovered","* User must have `Collateral token` account if `Collateral token` is recovered","(was taken from the solver)"],"discriminator":[95,129,237,240,8,49,223,132],"accounts":[{"name":"user","docs":["User that is order creator which wants to cancel the order"],"writable":true,"signer":true,"relations":["order"]},{"name":"order","docs":["Order data"],"writable":true},{"name":"guard","docs":["Guard address, that protects this order execution"],"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]},"relations":["order"]},{"name":"recovered_token_mint","docs":["Recovered token mint"]},{"name":"user_recovered_token_account","docs":["User token account to which tokens IN or stablecoins will be sent.","- Must be either Token IN account or stablecoin account","- Must be same token as Guard token account"],"writable":true},{"name":"guard_recovered_token_account","docs":["Guard token account from which tokens IN or stablecoins will be sent to the user","- Must be either Token IN account or stablecoin account","- Must be same token as Guard token account"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"recovered_token_program"},{"kind":"account","path":"user_recovered_token_account.mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"recovered_token_program","docs":["Recovered token program"]},{"name":"collateral_token_mint","docs":["Recovered token mint"]},{"name":"user_collateral_token_account","docs":["User collateral token account to which taken collateral (if any) will be sent."],"writable":true,"optional":true},{"name":"guard_collateral_token_account","docs":["Guard collateral token account to which taken collateral (if any) will be sent."],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"guard.collateral_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]}],"args":[]},{"name":"claim_tokens","docs":["Function for a Solver to claim tokens after confirmed by Auctioneer order fulfilment","Should be called before `order.solver_deadline`.","Order account is closed","","### Restrictions","Instruction to `Ed25519SigVerify111111111111111111111111111` program","with signed success confirmation verification MUST be executed before this call"],"discriminator":[108,216,210,231,0,212,42,64],"accounts":[{"name":"solver","docs":["Solver that has successfully executed the order and claims tokens"],"writable":true,"signer":true},{"name":"order","docs":["Order data"],"writable":true},{"name":"user","docs":["User account that will receive lamports after closing Order account"],"writable":true,"relations":["order"]},{"name":"guard","docs":["Guard address, that protects this order execution"],"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]},"relations":["order"]},{"name":"ix_sysvar","docs":["the supplied Sysvar could be anything else.","The Instruction Sysvar has not been implemented","in the Anchor framework yet, so this is the safe approach."],"address":"Sysvar1nstructions1111111111111111111111111"},{"name":"recovered_token_mint","docs":["Recovered token mint"]},{"name":"solver_recovered_token_account","docs":["Solver token account to which tokens IN or stablecoins will be sent.","- Must be either Token IN account or stablecoin account","- Must be same token as Guard token account"],"writable":true},{"name":"guard_recovered_token_account","docs":["Guard token account from which tokens IN or stablecoins will be sent to the solver","- Must be either Token IN account or stablecoin account","- Must be same token as Guard token account"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"recovered_token_program"},{"kind":"account","path":"solver_recovered_token_account.mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"recovered_token_program","docs":["Recovered token program"]},{"name":"collateral_token_mint","docs":["Recovered token mint"]},{"name":"solver_collateral_token_account","docs":["Solver collateral token account to which taken collateral will be sent."],"writable":true},{"name":"user_collateral_token_account","docs":["Solver collateral token account to which taken collateral will be sent."],"writable":true,"optional":true},{"name":"guard_collateral_token_account","docs":["Guard collateral token account to which taken collateral will be sent."],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"guard.collateral_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]}],"args":[]},{"name":"collect_protocol_fees","docs":["Collect protocol fees","","### Restrictions","Only Admin can call this function"],"discriminator":[22,67,23,98,150,178,70,220],"accounts":[{"name":"admin","docs":["Admin signer"],"writable":true,"signer":true,"relations":["admin_singleton"]},{"name":"admin_singleton","docs":["Admin singleton account that grants access to"],"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110]}]}},{"name":"guard","docs":["Guard account"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]}},{"name":"collateral_token_mint","docs":["Collateral token mint"]},{"name":"admin_collateral_token_account","docs":["Solver collateral account, from which solver is paying collateral tokens and fees"],"writable":true},{"name":"guard_collateral_token_account","docs":["Guard collateral account, where Guard is collecting collateral tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"guard.collateral_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]}],"args":[]},{"name":"create_guard","docs":["Creates Guard account","","### Arguments","","* `auctioneer_pub_key` - Public key of auctioneer that will sign permissions and confirmations","","### Restrictions","Only Admin can call this function"],"discriminator":[251,254,17,198,219,218,154,99],"accounts":[{"name":"admin","docs":["Admin, creating Guard"],"writable":true,"signer":true,"relations":["admin_singleton"]},{"name":"guard","docs":["Account that will store guard data"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"collateral_token_mint"},{"kind":"account","path":"stablecoin_token_mint"}]}},{"name":"admin_singleton","docs":["Admin singleton account that allows Guard creation"],"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110]}]}},{"name":"system_program","docs":["Solana System program"],"address":"11111111111111111111111111111111"},{"name":"associated_token_program","docs":["Associated Token account program"],"address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"collateral_token_mint","docs":["Token that will be used as collateral and fees"]},{"name":"collateral_token_account","docs":["Token account where fees will be collected and collateral will be locked"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"collateral_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]},{"name":"stablecoin_token_mint","docs":["Token that will be used as token OUT when swapping Token IN during order execution start"]},{"name":"stablecoin_token_account","docs":["Token account where fees will be collected","Using `init_if_needed` fot the case with same stablecoin and collateral token"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"stablecoin_token_program"},{"kind":"account","path":"stablecoin_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"stablecoin_token_program","docs":["Solana token program"]}],"args":[{"name":"auctioneer_pub_key","type":"pubkey"}]},{"name":"create_order","docs":["Places new Order","","### Arguments","","* `amount_in` - Amount of tokens IN to spend","* `min_stablecoins_amount` - Min amount of stablecoins to receive if token IN will be swapped","* `deadline` - Deadline until which this order can be executed","* `execution_details_hash` - 32 bytes SHA-256 hash of execution details JSON string. Everything that's not used in smart contract"],"discriminator":[141,54,37,207,237,210,250,215],"accounts":[{"name":"user","docs":["User creating the order"],"writable":true,"signer":true},{"name":"order","docs":["Account that will store order data"],"writable":true,"signer":true},{"name":"guard","docs":["Guard address, that will protect this order execution"],"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]}},{"name":"system_program","docs":["Solana System program"],"address":"11111111111111111111111111111111"},{"name":"associated_token_program","docs":["Solana token program"],"address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"token_in_mint","docs":["Token IN that user wants to spend"]},{"name":"user_token_in_account","docs":["Token IN account from which user is spending tokens IN"],"writable":true},{"name":"guard_token_in_account","docs":["Token IN account that will store Tokens IN after order creation"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"token_in_program"},{"kind":"account","path":"token_in_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_in_program","docs":["Solana token program"]}],"args":[{"name":"amount_in","type":"u64"},{"name":"min_stablecoins_amount","type":"u64"},{"name":"deadline","type":"u32"},{"name":"execution_details_hash","type":{"array":["u8",32]}}]},{"name":"initialize","docs":["Creates singleton Admin account"],"discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"initial_admin","docs":["Admin, creating Guard"],"writable":true,"signer":true},{"name":"admin_singleton","docs":["Account that will store guard data"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110]}]}},{"name":"system_program","docs":["Solana System program"],"address":"11111111111111111111111111111111"}],"args":[]},{"name":"pre_start_order_execution","docs":["Function, called by Solver to initiate start order execution,","take tokens IN and swap them into stablecoins.","Fees are collected during this instruction","","### Restrictions","- Instruction to `Ed25519SigVerify111111111111111111111111111` program","with signed start execution permission verification MUST be executed before this call","- Instruction `start_order_execution_after_swap` to this program","must be executed after swapping tokens IN into stablecoins in same transaction.","Works like flash loan"],"discriminator":[69,230,54,217,254,93,181,32],"accounts":[{"name":"solver","docs":["Solver that starts order execution"],"writable":true,"signer":true},{"name":"order","docs":["Order data"],"writable":true},{"name":"guard","docs":["Guard address, that protects this order execution"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]},"relations":["order"]},{"name":"ix_sysvar","docs":["the supplied Sysvar could be anything else.","The Instruction Sysvar has not been implemented","in the Anchor framework yet, so this is the safe approach."],"address":"Sysvar1nstructions1111111111111111111111111"},{"name":"collateral_token_mint","docs":["Collateral token mint"]},{"name":"solver_collateral_token_account","docs":["Solver collateral account, from which solver is paying collateral tokens and fees"],"writable":true},{"name":"guard_collateral_token_account","docs":["Guard collateral account, where Guard is collecting collateral tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"guard.collateral_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]},{"name":"token_in_mint","docs":["Token IN mint"]},{"name":"solver_token_in_account","docs":["Solver Token IN account, to which token IN will be sent"],"writable":true},{"name":"guard_token_in_account","docs":["Guard Token IN account, where Tokens IN is stored"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"token_in_program"},{"kind":"account","path":"order.token_in_mint","account":"Order"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_in_program","docs":["Solana token program"]}],"args":[]},{"name":"set_admin","docs":["Changes admin","","### Arguments","","* `new_admin` - New admin","","### Restrictions","Only Admin can call this function"],"discriminator":[251,163,0,52,91,194,187,92],"accounts":[{"name":"admin","docs":["Admin signer"],"writable":true,"signer":true,"relations":["admin_singleton"]},{"name":"admin_singleton","docs":["Admin singleton account that grants access to"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110]}]}}],"args":[{"name":"new_admin","type":"pubkey"}]},{"name":"set_auctioneer_pub_key","docs":["Changes auctioneer public key on specific guard","","### Arguments","","* `auctioneer_pub_key` - Public key of auctioneer that will sign permissions and confirmations","","### Restrictions","Only Admin can call this function"],"discriminator":[153,39,10,108,220,0,84,47],"accounts":[{"name":"admin","docs":["Admin signer"],"writable":true,"signer":true,"relations":["admin_singleton"]},{"name":"admin_singleton","docs":["Admin singleton account that grants access to"],"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110]}]}},{"name":"guard","docs":["Guard account"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]}}],"args":[{"name":"auctioneer_pub_key","type":"pubkey"}]},{"name":"start_order_execution","docs":["Function, called by Solver to start order execution without swap.","Tokens are locked until execution_deadline.","Fees are collected during this instruction","","### Restrictions","Instruction to `Ed25519SigVerify111111111111111111111111111` program","with signed start execution permission verification MUST be executed before this call"],"discriminator":[38,237,19,225,182,31,246,143],"accounts":[{"name":"solver","docs":["Solver that starts order execution"],"writable":true,"signer":true},{"name":"order","docs":["Order data"],"writable":true},{"name":"guard","docs":["Guard address, that protects this order execution"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]},"relations":["order"]},{"name":"ix_sysvar","docs":["the supplied Sysvar could be anything else.","The Instruction Sysvar has not been implemented","in the Anchor framework yet, so this is the safe approach."],"address":"Sysvar1nstructions1111111111111111111111111"},{"name":"collateral_token_mint","docs":["Collateral token mint"]},{"name":"solver_collateral_token_account","docs":["Solver collateral account, from which solver is paying collateral tokens and fees"],"writable":true},{"name":"guard_collateral_token_account","docs":["Guard collateral account, where Guard is collecting collateral tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"collateral_token_program"},{"kind":"account","path":"guard.collateral_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"collateral_token_program","docs":["Solana token program"]}],"args":[]},{"name":"start_order_execution_after_swap","docs":["Function, called by Solver to start order execution after Tokens IN were swapped into Stablecoins","Tokens are locked until execution_deadline","Fees are NOT collected during this instruction","","### Arguments","","* `stablecoins_amount` - Amount of stablecoins Solver is providing in exchange for Tokens IN","","### Restrictions","- Instruction to `Ed25519SigVerify111111111111111111111111111` program","with signed start execution permission verification MUST be executed before this call","- Instruction `pre_start_order_execution` to this program should be executed","before this instruction."],"discriminator":[142,117,45,141,169,107,117,209],"accounts":[{"name":"solver","docs":["Solver that starts order execution"],"writable":true,"signer":true},{"name":"order","docs":["Order data"],"writable":true},{"name":"guard","docs":["Guard address, that protects this order execution"],"pda":{"seeds":[{"kind":"const","value":[103,117,97,114,100]},{"kind":"account","path":"guard.collateral_token","account":"Guard"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}]},"relations":["order"]},{"name":"ix_sysvar","docs":["the supplied Sysvar could be anything else.","The Instruction Sysvar has not been implemented","in the Anchor framework yet, so this is the safe approach."],"address":"Sysvar1nstructions1111111111111111111111111"},{"name":"stablecoin_token_mint","docs":["Stablecoin token mint"]},{"name":"solver_stablecoin_token_account","docs":["Solver stablecoin account, from which solver is paying stablecoin tokens","after swapping Tokens IN"],"writable":true},{"name":"guard_stablecoin_token_account","docs":["Guard stablecoin account, where Guard is collecting stablecoins"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"guard"},{"kind":"account","path":"stablecoin_token_program"},{"kind":"account","path":"guard.stablecoin_token","account":"Guard"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"stablecoin_token_program","docs":["Solana token program"]}],"args":[{"name":"stablecoins_amount","type":"u64"}]}],"accounts":[{"name":"AdminSingleton","discriminator":[179,22,254,245,204,230,222,194]},{"name":"Guard","discriminator":[54,187,84,137,192,15,74,248]},{"name":"Order","discriminator":[134,173,223,185,77,86,28,51]}],"events":[{"name":"AdminUpdated","discriminator":[69,82,49,171,43,3,80,161]},{"name":"AuctioneerPubkeyUpdated","discriminator":[26,173,88,38,168,76,14,199]},{"name":"ExecutionStarted","discriminator":[64,31,243,162,12,87,193,123]},{"name":"GuardCreated","discriminator":[137,249,125,83,3,164,81,198]},{"name":"OrderCancelled","discriminator":[108,56,128,68,168,113,168,239]},{"name":"OrderCreated","discriminator":[224,1,229,63,254,60,190,159]},{"name":"OrderFulfilled","discriminator":[164,164,123,194,209,112,40,63]},{"name":"TokenInSwapped","discriminator":[131,33,229,193,231,211,209,149]}],"errors":[{"code":6000,"name":"InstructionNotFound","msg":"Ed25519Program instruction"},{"code":6001,"name":"SigVerificationFailed","msg":"Signature verification failed"},{"code":6002,"name":"InvalidSigner","msg":"Invalid signer"}],"types":[{"name":"AdminSingleton","docs":["The main admin account which allows to create and modify guards as well as collect fees"],"type":{"kind":"struct","fields":[{"name":"admin","docs":["Guard admin"],"type":"pubkey"},{"name":"bump","docs":["PDA bump"],"type":"u8"}]}},{"name":"AdminUpdated","type":{"kind":"struct","fields":[{"name":"new_admin","type":"pubkey"}]}},{"name":"AuctioneerPubkeyUpdated","type":{"kind":"struct","fields":[{"name":"guard_id","type":"pubkey"},{"name":"auctioneer_pub_key","type":"pubkey"}]}},{"name":"ExecutionStarted","type":{"kind":"struct","fields":[{"name":"order_id","type":"pubkey"},{"name":"solver","type":"pubkey"},{"name":"collateral_amount","type":"u64"},{"name":"protocol_fee_amount","type":"u64"},{"name":"solver_deadline","type":"u32"}]}},{"name":"Guard","docs":["Guard account that stores collected fees, auctioneer PK to verify signature","and manages Collateral token account","(where collateral tokens and tokens IN are stored and fees are collected)"],"type":{"kind":"struct","fields":[{"name":"collateral_token","docs":["Token that is used as collateral and fees"],"type":"pubkey"},{"name":"stablecoin_token","docs":["Token that is used as token OUT when swapping Token IN during order execution start"],"type":"pubkey"},{"name":"bump","docs":["PDA bump"],"type":"u8"},{"name":"auctioneer_pub_key","docs":["Public key of auctioneer that signs permissions and confirmations"],"type":"pubkey"},{"name":"collected_fees","docs":["Amount of collected fees, in collateral tokens"],"type":"u64"}]}},{"name":"GuardCreated","type":{"kind":"struct","fields":[{"name":"guard_id","type":"pubkey"},{"name":"collateral_mint","type":"pubkey"},{"name":"stablecoin_mint","type":"pubkey"},{"name":"auctioneer_pub_key","type":"pubkey"}]}},{"name":"Order","docs":["Order Account stores order data, which is constant","and `locked_collateral` amount which is dynamic","","Order account DOES NOT owe any token account"],"type":{"kind":"struct","fields":[{"name":"user","docs":["User address, that created this order"],"type":"pubkey"},{"name":"guard","docs":["Guard address, that will protect this order execution"],"type":"pubkey"},{"name":"token_in_mint","docs":["Token IN that user wants to spend"],"type":"pubkey"},{"name":"amount_in","docs":["Amount of tokens In locked"],"type":"u64"},{"name":"min_stablecoins_amount","docs":["Min amount of stablecoins to receive if token IN will be swapped"],"type":"u64"},{"name":"deadline","docs":["Deadline for the operation, in Unix timestamp format, in SECONDS"],"type":"u32"},{"name":"execution_details_hash","docs":["32 bytes SHA-256 hash of execution details JSON string. Everything that's not used in smart contract"],"type":{"array":["u8",32]}},{"name":"tokens_in_were_swapped","docs":["`true` if tokens IN were taken for swap during `pre_swap` instruction"],"type":"bool"},{"name":"locked_stablecoins","docs":["Amount of stablecoins, locked after swap"],"type":"u64"},{"name":"locked_collateral","docs":["Collateral amount, locked during order execution"],"type":"u64"},{"name":"taken_collateral","docs":["Collateral amount, taken after solver failed to fulfill the order in time.","Transferred to the user on order fulfillment or cancellation"],"type":"u64"},{"name":"active_solver","docs":["Active solver which is currently executing this order"],"type":"pubkey"},{"name":"execution_deadline","docs":["Timestamp, until which `active_solver` MUST execute the order and claim tokens","Order is locked for everyone but `active_solver` until this deadline"],"type":"u32"}]}},{"name":"OrderCancelled","type":{"kind":"struct","fields":[{"name":"order_id","type":"pubkey"}]}},{"name":"OrderCreated","type":{"kind":"struct","fields":[{"name":"order_id","type":"pubkey"},{"name":"user","type":"pubkey"},{"name":"guard","type":"pubkey"},{"name":"token_in_mint","type":"pubkey"},{"name":"amount_in","type":"u64"},{"name":"min_stablecoins_amount","type":"u64"},{"name":"deadline","type":"u32"},{"name":"execution_details_hash","type":{"array":["u8",32]}}]}},{"name":"OrderFulfilled","type":{"kind":"struct","fields":[{"name":"order_id","type":"pubkey"}]}},{"name":"TokenInSwapped","type":{"kind":"struct","fields":[{"name":"order_id","type":"pubkey"},{"name":"solver","type":"pubkey"},{"name":"stablecoins_amount","type":"u64"}]}}]}
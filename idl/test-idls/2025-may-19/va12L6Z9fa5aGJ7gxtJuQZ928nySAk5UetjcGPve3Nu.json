{"version":"0.1.0","name":"validator_gauge_manager","instructions":[{"name":"createValidatorGauge","accounts":[{"name":"payer","isMut":true,"isSigner":true,"docs":["permissionless signer"]},{"name":"marinadeState","isMut":false,"isSigner":false,"docs":["marinade state"]},{"name":"validatorList","isMut":false,"isSigner":false,"docs":["validator list"]},{"name":"gauge","isMut":true,"isSigner":false,"docs":["initialize gauge to PDA seeded by validator_account"]},{"name":"gaugemeister","isMut":true,"isSigner":false},{"name":"foreman","isMut":false,"isSigner":false,"docs":["foreman authority seeded by marinade state to avoid invalid marinade state creates validator gauge with fake validator list."]},{"name":"escrowRelockerProgram","isMut":false,"isSigner":false,"docs":["escrow relocker program for cpi call"]},{"name":"systemProgram","isMut":false,"isSigner":false,"docs":["system program"]}],"args":[{"name":"args","type":{"defined":"CreateValidatorGaugeArgs"}}]},{"name":"closeValidatorGauge","accounts":[{"name":"admin","isMut":false,"isSigner":true,"docs":["realm admin"]},{"name":"realm","isMut":false,"isSigner":false},{"name":"rentCollector","isMut":true,"isSigner":false},{"name":"marinadeState","isMut":false,"isSigner":false,"docs":["marinade state"]},{"name":"gauge","isMut":true,"isSigner":false,"docs":["initialize gauge to PDA seeded by validator_vote"]},{"name":"gaugemeister","isMut":true,"isSigner":false},{"name":"foreman","isMut":false,"isSigner":false,"docs":["foreman authority seeded by marinade state to avoid invalid marinade state creates validator gauge with fake validator list."]},{"name":"escrowRelockerProgram","isMut":false,"isSigner":false,"docs":["escrow relocker program for cpi call"]}],"args":[]}],"accounts":[{"name":"MarinadeState","type":{"kind":"struct","fields":[{"name":"msolMint","type":"publicKey"},{"name":"adminAuthority","type":"publicKey"},{"name":"operationalSolAccount","type":"publicKey"},{"name":"treasuryMsolAccount","type":"publicKey"},{"name":"reserveBumpSeed","type":"u8"},{"name":"msolMintAuthorityBumpSeed","type":"u8"},{"name":"rentExemptForTokenAcc","type":"u64"},{"name":"rewardFee","type":{"defined":"Fee"}},{"name":"stakeSystem","type":{"defined":"StakeSystem"}},{"name":"validatorSystem","type":{"defined":"ValidatorSystem"}},{"name":"liqPool","type":{"defined":"LiqPool"}},{"name":"availableReserveBalance","type":"u64"},{"name":"msolSupply","type":"u64"},{"name":"msolPrice","type":"u64"},{"name":"circulatingTicketCount","docs":["count tickets for delayed-unstake"],"type":"u64"},{"name":"circulatingTicketBalance","docs":["total lamports amount of generated and not claimed yet tickets"],"type":"u64"},{"name":"lentFromReserve","type":"u64"},{"name":"minDeposit","type":"u64"},{"name":"minWithdraw","type":"u64"},{"name":"stakingSolCap","type":"u64"},{"name":"emergencyCoolingDown","type":"u64"}]}}],"types":[{"name":"Fee","type":{"kind":"struct","fields":[{"name":"basisPoints","type":"u32"}]}},{"name":"List","type":{"kind":"struct","fields":[{"name":"account","type":"publicKey"},{"name":"itemSize","type":"u32"},{"name":"count","type":"u32"},{"name":"newAccount","type":"publicKey"},{"name":"copiedCount","type":"u32"}]}},{"name":"StakeSystem","type":{"kind":"struct","fields":[{"name":"stakeList","type":{"defined":"List"}},{"name":"delayedUnstakeCoolingDown","type":"u64"},{"name":"stakeDepositBumpSeed","type":"u8"},{"name":"stakeWithdrawBumpSeed","type":"u8"},{"name":"slotsForStakeDelta","docs":["set by admin, how much slots before the end of the epoch, stake-delta can start"],"type":"u64"},{"name":"lastStakeDeltaEpoch","docs":["Marks the start of stake-delta operations, meaning that if somebody starts a delayed-unstake ticket","after this var is set with epoch_num the ticket will have epoch_created = current_epoch+1","(the user must wait one more epoch, because their unstake-delta will be execute in this epoch)"],"type":"u64"},{"name":"minStake","type":"u64"},{"name":"extraStakeDeltaRuns","docs":["can be set by validator-manager-auth to allow a second run of stake-delta to stake late stakers in the last minute of the epoch","so we maximize user's rewards"],"type":"u32"}]}},{"name":"ValidatorRecord","type":{"kind":"struct","fields":[{"name":"validatorAccount","docs":["Validator vote pubkey"],"type":"publicKey"},{"name":"activeBalance","docs":["Validator total balance in lamports"],"type":"u64"},{"name":"score","type":"u32"},{"name":"lastStakeDeltaEpoch","type":"u64"},{"name":"duplicationFlagBumpSeed","type":"u8"}]}},{"name":"ValidatorSystem","type":{"kind":"struct","fields":[{"name":"validatorList","type":{"defined":"List"}},{"name":"managerAuthority","type":"publicKey"},{"name":"totalValidatorScore","type":"u32"},{"name":"totalActiveBalance","docs":["sum of all active lamports staked"],"type":"u64"},{"name":"autoAddValidatorEnabled","docs":["allow & auto-add validator when a user deposits a stake-account of a non-listed validator"],"type":"u8"}]}},{"name":"LiqPool","type":{"kind":"struct","fields":[{"name":"lpMint","type":"publicKey"},{"name":"lpMintAuthorityBumpSeed","type":"u8"},{"name":"solLegBumpSeed","type":"u8"},{"name":"msolLegAuthorityBumpSeed","type":"u8"},{"name":"msolLeg","type":"publicKey"},{"name":"lpLiquidityTarget","docs":["Liquidity target. If the Liquidity reach this amount, the fee reaches lp_min_discount_fee"],"type":"u64"},{"name":"lpMaxFee","docs":["Liquidity pool max fee"],"type":{"defined":"Fee"}},{"name":"lpMinFee","docs":["SOL/mSOL Liquidity pool min fee"],"type":{"defined":"Fee"}},{"name":"treasuryCut","docs":["Treasury cut"],"type":{"defined":"Fee"}},{"name":"lpSupply","type":"u64"},{"name":"lentFromSolLeg","type":"u64"},{"name":"liquiditySolCap","type":"u64"}]}},{"name":"CreateValidatorGaugeArgs","type":{"kind":"struct","fields":[{"name":"validatorAccount","type":"publicKey"},{"name":"validatorIndex","type":"u32"}]}}],"errors":[{"code":6000,"name":"AccessDenied","msg":"Access denied"},{"code":6001,"name":"InvalidMarinadeStakingProgram","msg":"Invalid marinade staking program"},{"code":6002,"name":"InvalidMarinadeStateDiscriminator","msg":"Invalid marinade state discriminator"},{"code":6003,"name":"InvalidValidatorAccount","msg":"Invalid validator vote account"},{"code":6004,"name":"InvalidValidatorList","msg":"Invalid validator list"}]}
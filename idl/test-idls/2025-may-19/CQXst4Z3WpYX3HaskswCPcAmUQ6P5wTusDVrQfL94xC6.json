{"address":"CQXst4Z3WpYX3HaskswCPcAmUQ6P5wTusDVrQfL94xC6","metadata":{"name":"collide_program","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"docs":["Main program module containing all instruction handlers"],"instructions":[{"name":"buy","docs":["Executes a token purchase using the bonding curve","","# Arguments","* `token_amount_out` - Amount of tokens being purchased","* `max_lamports_in` - Maximum SOL expected to pay (slippage protection)"],"discriminator":[102,6,61,18,1,218,235,234],"accounts":[{"name":"user","docs":["The user buying the tokens, must sign the transaction"],"writable":true,"signer":true},{"name":"opinion_program","docs":["Program configuration account storing settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"pool","docs":["The liquidity pool account managing the token/SOL pair"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108]},{"kind":"account","path":"token_mint"}]}},{"name":"token_mint","docs":["The mint of the token being purchased"],"writable":true},{"name":"pool_token_account","docs":["The pool's token account holding the available token supply"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"pool"},{"kind":"account","path":"token_program"},{"kind":"account","path":"token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"user_token_account","docs":["The user's token account to receive purchased tokens","Will be created if it doesn't exist"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"user"},{"kind":"account","path":"token_program"},{"kind":"account","path":"token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_sol_vault","docs":["The pool's SOL vault to receive payment"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[115,111,108,95,118,97,117,108,116]},{"kind":"account","path":"token_mint"}]}},{"name":"treasury","docs":["Treasury account that receives fees"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,101,97,115,117,114,121]},{"kind":"account","path":"opinion_program"}]}},{"name":"system_program","docs":["Required system programs"],"address":"11111111111111111111111111111111"},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"token_amount_out","type":"u64"},{"name":"max_lamports_in","type":"u64"}]},{"name":"confirm_admin_transfer","docs":["Confirms and completes the admin transfer process","","# Arguments","* `ctx` - Program context containing required accounts","","# Permissions","* Must be signed by the designated new admin","* Old admin must still be the current admin","","# Effects","* Updates the program's admin to the new admin's public key","* Completes the transfer of administrative authority","","# Errors","* Returns error if old_admin is not the current admin","* Returns error if signer is not the designated new admin","","# Returns","* `Result<()>` - Success if admin transfer is completed"],"discriminator":[165,69,148,206,154,219,29,133],"accounts":[{"name":"new_admin","docs":["The new admin who must sign to accept the transfer","Must match the new_admin stored in admin_transfer account"],"writable":true,"signer":true},{"name":"old_admin","docs":["The current admin's account","Must match the current admin stored in opinion_program"]},{"name":"admin_transfer","docs":["PDA that stores the pending admin transfer details","Contains the new admin's public key for verification"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110,95,116,114,97,110,115,102,101,114]},{"kind":"account","path":"opinion_program"},{"kind":"account","path":"old_admin"}]}},{"name":"opinion_program","docs":["The program's configuration account that will be updated","Stores the current admin authority that will be transferred"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[]},{"name":"create_pool","docs":["Creates a new liquidity pool with initial token supply","Pool creator must own all tokens of the mint"],"discriminator":[233,146,209,142,207,104,64,188],"accounts":[{"name":"creator","docs":["The creator of the pool who will provide the initial token supply","Must own all tokens of the mint"],"writable":true,"signer":true},{"name":"mint","docs":["The token mint that will be used for this pool","Must have exactly 1B supply with 6 decimals and no mint/freeze authority"]},{"name":"pool","docs":["The pool account that will be initialized","PDA derived from \"pool\" and the mint address"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108]},{"kind":"account","path":"mint"}]}},{"name":"creator_token_account","docs":["The creator's token account holding the initial supply"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"creator"},{"kind":"account","path":"token_program"},{"kind":"account","path":"mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_token_account","docs":["The pool's token account that will hold the tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"pool"},{"kind":"account","path":"token_program"},{"kind":"account","path":"mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_sol_vault","docs":["The SOL vault for the pool","PDA that will hold SOL from buy operations"],"pda":{"seeds":[{"kind":"const","value":[115,111,108,95,118,97,117,108,116]},{"kind":"account","path":"mint"}]}},{"name":"opinion_program","docs":["The program's configuration account"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"treasury","docs":["Treasury account that receives setup fees"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,101,97,115,117,114,121]},{"kind":"account","path":"opinion_program"}]}},{"name":"token_program","docs":["SPL Token program for token operations"]},{"name":"associated_token_program","docs":["Required for creating ATAs"],"address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","docs":["Required for rent and PDA creation"],"address":"11111111111111111111111111111111"}],"args":[]},{"name":"initialize","docs":["Initializes the program and sets up fee settings","","# Arguments","* `ctx` - Program context containing required accounts","* `setup_fee` - One-time fee for creating a pool (in lamports)","* `buy_fees` - Fee percentage charged on buy operations (basis points)","* `sell_fees` - Fee percentage charged on sell operations (basis points)","* `raydium_init_fee` - Fee required for initializing a Raydium pool (in lamports)","* `raydium_amm_config` - Public key of the Raydium AMM configuration to use"],"discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"admin","docs":["The signer who will become the admin of the program","This account pays for the initialization and receives admin privileges"],"writable":true,"signer":true},{"name":"opinion_program","docs":["Program configuration account storing admin, fees, and treasury settings","Only one instance of this account should exist"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"treasury","docs":["Treasury account that will receive fees from operations","PDA derived from the opinion program"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,101,97,115,117,114,121]},{"kind":"account","path":"opinion_program"}]}},{"name":"system_program","docs":["Required for account creation"],"address":"11111111111111111111111111111111"}],"args":[{"name":"setup_fee","type":"u64"},{"name":"buy_fees","type":"u16"},{"name":"sell_fees","type":"u16"},{"name":"raydium_init_fee","type":"u64"},{"name":"raydium_amm_config","type":"pubkey"}]},{"name":"initialize_raydium","docs":["Completes migration to Raydium by initializing the CPMM pool","Must be called after successful preparation","","Process:","1. Validate preparation","2. Initialize Raydium pool","3. Clean up temporary accounts"],"discriminator":[71,130,182,109,162,234,206,57],"accounts":[{"name":"cpmm_program","docs":["The Raydium CPMM program that will create and manage the pool"],"address":"CPMMoo8L3F4NbTegBCKVNunggL7H1ZpdTHKxQB5qKP1C"},{"name":"signer","docs":["Address paying for the initialization. Can be anyone","Will receive rent from closed accounts"],"writable":true,"signer":true},{"name":"opinion_program","docs":["Program configuration account storing settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"opinion_pool","docs":["The Opinion pool being migrated to Raydium","Must be closed and prepared"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108]},{"kind":"account","path":"pool_token_mint"}]}},{"name":"pool_signer","docs":["PDA that holds tokens and signs for transfers during migration","Created during preparation phase","Since the fees for crating a Raydium pool cannot be paid by a PDA that has data in it we need to create a seperate PDA to hold the required lamports to pay the fees that also has the authority to sign for the SPL tokens."],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,115,105,103,110,101,114]},{"kind":"account","path":"opinion_pool"}]}},{"name":"pool_token_mint","docs":["The token mint from the Opinion pool","Must match either token_0_mint or token_1_mint"]},{"name":"amm_config","docs":["Raydium AMM configuration account","Defines fees and other pool parameters"]},{"name":"authority","docs":["Raydium pool and lp mint authority PDA"],"pda":{"seeds":[{"kind":"const","value":[118,97,117,108,116,95,97,110,100,95,108,112,95,109,105,110,116,95,97,117,116,104,95,115,101,101,100]}],"program":{"kind":"account","path":"cpmm_program"}}},{"name":"pool_state","docs":["The Raydium pool state account"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,115,116,97,116,101]},{"kind":"account","path":"opinion_pool"}]}},{"name":"token_0_mint","docs":["First token mint in the pair (smaller key)"]},{"name":"token_1_mint","docs":["Second token mint in the pair (larger key)"]},{"name":"lp_mint","docs":["LP token mint for the Raydium pool"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,108,112,95,109,105,110,116]},{"kind":"account","path":"pool_state"}],"program":{"kind":"account","path":"cpmm_program"}}},{"name":"pool_token_0","docs":["Pool signer's token account for token_0"],"writable":true},{"name":"pool_token_1","docs":["Pool signer's token account for token_1"],"writable":true},{"name":"pool_lp_token","docs":["LP token account for the pool"],"writable":true},{"name":"token_0_vault","docs":["Token vault for token_0"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,118,97,117,108,116]},{"kind":"account","path":"pool_state"},{"kind":"account","path":"token_0_mint"}],"program":{"kind":"account","path":"cpmm_program"}}},{"name":"token_1_vault","docs":["Token vault for token_1"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,118,97,117,108,116]},{"kind":"account","path":"pool_state"},{"kind":"account","path":"token_1_mint"}],"program":{"kind":"account","path":"cpmm_program"}}},{"name":"create_pool_fee","docs":["Account that receives pool creation fees"],"writable":true,"address":"DNXgeM9EiiaAbaWvwjHj9fQQLAX5ZsfHyvmYUNRAdNC8"},{"name":"observation_state","docs":["Account storing oracle price observations"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,98,115,101,114,118,97,116,105,111,110]},{"kind":"account","path":"pool_state"}],"program":{"kind":"account","path":"cpmm_program"}}},{"name":"token_program","docs":["Required system programs"],"address":"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"},{"name":"token_0_program"},{"name":"token_1_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[]},{"name":"initiate_admin_transfer","docs":["Initiates the transfer of admin rights to a new address","","# Arguments","* `ctx` - Program context containing required accounts","* `new_admin` - Public key of the account that will become the new admin","","# Permissions","* Only the current program admin can initiate the transfer","","# Effects","* Creates or reuses the admin_transfer PDA","* Stores the new admin's public key for later confirmation","* Does not complete the transfer until confirmed by the new admin","","# Returns","* `Result<()>` - Success if transfer is initiated"],"discriminator":[232,132,133,116,184,197,17,67],"accounts":[{"name":"admin","docs":["The current admin who initiates the transfer","Only the current admin can start the transfer process"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account storing admin authority"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"admin_transfer","docs":["PDA that stores the pending admin transfer details","Created or reused to track the transfer process"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[97,100,109,105,110,95,116,114,97,110,115,102,101,114]},{"kind":"account","path":"opinion_program"},{"kind":"account","path":"admin"}]}},{"name":"system_program","docs":["Required for creating the admin_transfer account"],"address":"11111111111111111111111111111111"}],"args":[{"name":"new_admin","type":"pubkey"}]},{"name":"pause_program","docs":["Pauses all program operations except admin functions","","# Arguments","* `ctx` - Program context containing required accounts","","# Permissions","* Only the current program admin can pause the program","","# Effects","* Sets program_paused flag to true","* Prevents non-admin operations while paused","","# Returns","* `Result<()>` - Success if program is paused"],"discriminator":[91,86,253,175,66,236,172,124],"accounts":[{"name":"admin","docs":["The admin signer who can pause the program","Only the current admin has permission to pause operations"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account that stores program state","Contains the program_paused flag and admin authority"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[]},{"name":"prepare_raydium","docs":["Prepares a pool for migration to Raydium","Must be called when pool is sold out (only MIN_RESERVE tokens remain)","","Process:","1. Validate pool state","2. Transfer fess required by Raydium to the PDA signer that will be used to create the Raydium pool","3. Transfer the tokens from the pool to the PDA signer","4. Wrap SOL to WSOL","5. Mark pool as prepared"],"discriminator":[155,236,70,63,218,192,236,177],"accounts":[{"name":"signer","docs":["Address paying and signing to initialize the preparation for the migration to Raydium","This account will pay for account creation and initialization"],"writable":true,"signer":true},{"name":"opinion_program","docs":["Program configuration account storing settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"opinion_pool","docs":["The opinion pool that is being migrated to Raydium","Must be sold out (only MIN_RESERVE tokens remaining) and closed"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108]},{"kind":"account","path":"pool_token_mint"}]}},{"name":"opinion_pool_sol_vault","docs":["SOL vault holding the native SOL that needs to be wrapped","Will be emptied during preparation as SOL is wrapped to WSOL"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[115,111,108,95,118,97,117,108,116]},{"kind":"account","path":"pool_token_mint"}]}},{"name":"pool_signer","docs":["PDA that will hold wrapped SOL and tokens for Raydium pool creation","Also signs for token transfers during migration"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108,95,115,105,103,110,101,114]},{"kind":"account","path":"opinion_pool"}]}},{"name":"pool_token_mint","docs":["The mint of the token being migrated"]},{"name":"wsol_mint","docs":["The Wrapped SOL mint account"]},{"name":"pool_token_account","docs":["The opinion pool's token account holding remaining tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"opinion_pool"},{"kind":"account","path":"pool_token_program"},{"kind":"account","path":"pool_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_signer_wsol_account","docs":["Account to hold the wrapped SOL after conversion","Will be initialized if it doesn't exist"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"pool_signer"},{"kind":"account","path":"wsol_token_program"},{"kind":"account","path":"wsol_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_signer_token_account","docs":["Account to hold the pool tokens during migration","Will be initialized if it doesn't exist"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"pool_signer"},{"kind":"account","path":"pool_token_program"},{"kind":"account","path":"pool_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_token_program","docs":["Required system programs"]},{"name":"wsol_token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[]},{"name":"resume_program","docs":["Resumes normal program operations after being paused","","# Arguments","* `ctx` - Program context containing required accounts","","# Permissions","* Only the current program admin can resume the program","","# Effects","* Sets program_paused flag to false","* Allows all operations to proceed normally","","# Returns","* `Result<()>` - Success if program is resumed"],"discriminator":[253,125,38,109,196,141,189,30],"accounts":[{"name":"admin","docs":["The admin signer who can resume the program","Only the current admin has permission to resume operations"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account that stores program state","Contains the program_paused flag and admin authority"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[]},{"name":"sell","docs":["Executes a token sale using the bonding curve","","# Arguments","* `token_amount_in` - Amount of tokens to sell","* `min_lamports_out` - Minimum SOL expected (slippage protection)"],"discriminator":[51,230,133,164,1,127,131,173],"accounts":[{"name":"user","docs":["The user selling the tokens, must sign the transaction"],"writable":true,"signer":true},{"name":"opinion_program","docs":["Program configuration account storing fee settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"pool","docs":["The liquidity pool account managing the token/SOL pair"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[112,111,111,108]},{"kind":"account","path":"token_mint"}]}},{"name":"token_mint","docs":["The mint of the token being sold"],"writable":true},{"name":"pool_token_account","docs":["The pool's token account to receive sold tokens"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"pool"},{"kind":"account","path":"token_program"},{"kind":"account","path":"token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"user_token_account","docs":["The user's token account holding the tokens to sell"],"writable":true,"pda":{"seeds":[{"kind":"account","path":"user"},{"kind":"account","path":"token_program"},{"kind":"account","path":"token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"pool_sol_vault","docs":["The pool's SOL vault to pay out from"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[115,111,108,95,118,97,117,108,116]},{"kind":"account","path":"token_mint"}]}},{"name":"treasury","docs":["Treasury account that receives fees"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,101,97,115,117,114,121]},{"kind":"account","path":"opinion_program"}]}},{"name":"system_program","docs":["Required system programs"],"address":"11111111111111111111111111111111"},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"}],"args":[{"name":"token_amount_in","type":"u64"},{"name":"min_lamports_out","type":"u64"}]},{"name":"update_fees","docs":["Updates the program's fee structure","","# Arguments","* `ctx` - Program context containing required accounts","* `setup_fee` - New one-time fee for creating a pool (in lamports)","* `buy_fees` - New percentage fee charged on buy operations (basis points)","* `sell_fees` - New percentage fee charged on sell operations (basis points)","","# Permissions","* Only the current program admin can update fees","","# Returns","* `Result<()>` - Success if fee update completes"],"discriminator":[225,27,13,6,69,84,172,191],"accounts":[{"name":"admin","docs":["The admin signer who can update the fees","Only the current admin can modify fee settings"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account that stores fee settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[{"name":"setup_fee","type":"u64"},{"name":"buy_fees","type":"u16"},{"name":"sell_fees","type":"u16"}]},{"name":"update_raydium_amm_config","docs":["Updates the Raydium AMM configuration used for pool migrations","","# Arguments","* `ctx` - Program context containing required accounts","* `amm_config` - Public key of the new Raydium AMM configuration to use","","# Permissions","* Only the current program admin can update the AMM config","","# Effects","* Updates the program's Raydium AMM configuration","* Affects all future pool migrations to Raydium","","# Returns","* `Result<()>` - Success if AMM config is updated"],"discriminator":[135,240,159,108,197,250,221,196],"accounts":[{"name":"admin","docs":["The admin signer who can update the fees","Only the current admin can modify fee settings"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account that stores fee settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[{"name":"amm_config","type":"pubkey"}]},{"name":"update_raydium_fees","docs":["Updates the fee required for initializing Raydium pools","","# Arguments","* `ctx` - Program context containing required accounts","* `raydium_init_fee` - New fee amount in lamports required for Raydium pool initialization","","# Permissions","* Only the current program admin can update the fee","","# Effects","* Updates the program's Raydium initialization fee","* Affects the cost of all future pool migrations to Raydium","","# Returns","* `Result<()>` - Success if fee is updated"],"discriminator":[95,129,165,173,186,75,240,184],"accounts":[{"name":"admin","docs":["The admin signer who can update the fees","Only the current admin can modify fee settings"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account that stores fee settings"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}}],"args":[{"name":"raydium_init_fee","type":"u64"}]},{"name":"withdraw_from_treasury","docs":["Allows admin to withdraw accumulated fees from treasury"],"discriminator":[0,164,86,76,56,72,12,170],"accounts":[{"name":"admin","docs":["The admin of the program who is authorized to withdraw","Must match the admin stored in the opinion program account"],"writable":true,"signer":true},{"name":"opinion_program","docs":["The program's configuration account storing admin and treasury settings"],"pda":{"seeds":[{"kind":"const","value":[111,112,105,110,105,111,110,95,112,114,111,103,114,97,109]}]}},{"name":"treasury","docs":["The treasury account from which SOL will be withdrawn","PDA derived from the opinion program that holds collected fees"],"writable":true,"pda":{"seeds":[{"kind":"const","value":[116,114,101,97,115,117,114,121]},{"kind":"account","path":"opinion_program"}]}},{"name":"system_program","docs":["Required for SOL transfers"],"address":"11111111111111111111111111111111"}],"args":[]}],"accounts":[{"name":"AdminTransfer","discriminator":[8,226,88,128,195,48,234,110]},{"name":"AmmConfig","discriminator":[218,244,33,104,203,203,43,111]},{"name":"LiquidityPool","discriminator":[66,38,17,64,188,80,68,129]},{"name":"OpinionProgram","discriminator":[111,233,52,20,131,125,24,113]}],"events":[{"name":"AdminTransferConfirmed","discriminator":[126,27,213,59,18,88,37,81]},{"name":"AdminTransferInitiated","discriminator":[157,255,0,92,52,106,16,156]},{"name":"FeesUpdated","discriminator":[65,34,234,59,248,242,101,118]},{"name":"PoolChange","discriminator":[241,7,155,154,56,57,0,101]},{"name":"PoolCreated","discriminator":[202,44,41,88,104,220,157,82]},{"name":"PoolPrepared","discriminator":[168,1,162,94,134,173,58,90]},{"name":"ProgramInitialized","discriminator":[43,70,110,241,199,218,221,245]},{"name":"ProgramPaused","discriminator":[247,9,236,38,105,35,112,115]},{"name":"ProgramResumed","discriminator":[95,149,57,242,73,51,119,169]},{"name":"RaydiumAmmConfigUpdated","discriminator":[181,78,254,182,44,64,35,178]},{"name":"RaydiumInitFeeUpdated","discriminator":[118,39,214,46,121,37,148,12]},{"name":"RaydiumPoolInitialized","discriminator":[240,6,183,43,243,83,46,217]},{"name":"TreasuryWithdraw","discriminator":[164,41,149,134,248,87,41,218]}],"errors":[{"code":6000,"name":"Unauthorized","msg":"Unauthorized"},{"code":6001,"name":"NotEnoughTokenInVault","msg":"Not enough token in vault"},{"code":6002,"name":"InvalidAmount","msg":"Invalid amount"},{"code":6003,"name":"NotEnoughTokenInPool","msg":"Not enough token in pool"},{"code":6004,"name":"NotEnoughSolInVault","msg":"Not enough SOL in vault"},{"code":6005,"name":"SlippageExceeded","msg":"Slippage exceeded"},{"code":6006,"name":"PoolNotInitialized","msg":"Pool not initialized"},{"code":6007,"name":"PoolNotSoldOut","msg":"Pool not sold out"},{"code":6008,"name":"PoolClosed","msg":"Pool closed"},{"code":6009,"name":"NoWSolMintProvided","msg":"No wSOL mint provided"},{"code":6010,"name":"TokenMintsNotSorted","msg":"Token mints not sorted"},{"code":6011,"name":"OpinionPoolMismatch","msg":"Opinion pool mismatch"},{"code":6012,"name":"PoolNotClosed","msg":"Pool not closed"},{"code":6013,"name":"PoolAlreadyPrepared","msg":"Pool already prepared"},{"code":6014,"name":"PoolNotPrepared","msg":"Pool not prepared"},{"code":6015,"name":"InvalidWsolMint","msg":"Invalid WSOL mint account"},{"code":6016,"name":"InvalidInitialAmount","msg":"Invalid initial amount for Raydium pool"},{"code":6017,"name":"AccountNotEmpty","msg":"Account must be empty before initialization"},{"code":6018,"name":"NotSupportMintExtension","msg":"Mint Extension not supported"},{"code":6019,"name":"NotAdmin","msg":"Not admin"},{"code":6020,"name":"ProgramPaused","msg":"Program paused"},{"code":6021,"name":"OldAdminNotCurrentAdmin","msg":"Old admin not current admin"},{"code":6022,"name":"SignerNotNewAdmin","msg":"Signer not new admin"},{"code":6023,"name":"InvalidDecimals","msg":"Token decimals must be 6"},{"code":6024,"name":"InvalidSupply","msg":"Token supply must be 1,000,000,000"},{"code":6025,"name":"MintAuthorityExists","msg":"Mint authority must be disabled"},{"code":6026,"name":"FreezeAuthorityExists","msg":"Freeze authority must be disabled"},{"code":6027,"name":"SetupFeeTooHigh","msg":"Setup fee exceeds maximum allowed (1 SOL)"},{"code":6028,"name":"BuyFeeTooHigh","msg":"Buy fee exceeds maximum allowed (10%)"},{"code":6029,"name":"SellFeeTooHigh","msg":"Sell fee exceeds maximum allowed (10%)"},{"code":6030,"name":"NotAcceptableAmmConfig","msg":"Not acceptable AMM config"}],"types":[{"name":"AdminTransfer","type":{"kind":"struct","fields":[{"name":"new_admin","type":"pubkey"}]}},{"name":"AdminTransferConfirmed","type":{"kind":"struct","fields":[{"name":"old_admin","docs":["The previous admin's address"],"type":"pubkey"},{"name":"new_admin","docs":["The new admin's address"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"}]}},{"name":"AdminTransferInitiated","type":{"kind":"struct","fields":[{"name":"admin","docs":["The current admin's address"],"type":"pubkey"},{"name":"new_admin","docs":["The proposed new admin's address"],"type":"pubkey"}]}},{"name":"AmmConfig","docs":["Holds the current owner of the factory"],"type":{"kind":"struct","fields":[{"name":"bump","docs":["Bump to identify PDA"],"type":"u8"},{"name":"disable_create_pool","docs":["Status to control if new pool can be create"],"type":"bool"},{"name":"index","docs":["Config index"],"type":"u16"},{"name":"trade_fee_rate","docs":["The trade fee, denominated in hundredths of a bip (10^-6)"],"type":"u64"},{"name":"protocol_fee_rate","docs":["The protocol fee"],"type":"u64"},{"name":"fund_fee_rate","docs":["The fund fee, denominated in hundredths of a bip (10^-6)"],"type":"u64"},{"name":"create_pool_fee","docs":["Fee for create a new pool"],"type":"u64"},{"name":"protocol_owner","docs":["Address of the protocol fee owner"],"type":"pubkey"},{"name":"fund_owner","docs":["Address of the fund fee owner"],"type":"pubkey"},{"name":"padding","docs":["padding"],"type":{"array":["u64",16]}}]}},{"name":"FeesUpdated","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who updated the fees"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"},{"name":"setup_fee","docs":["One-time fee for creating a pool (in lamports)"],"type":"u64"},{"name":"buy_fees","docs":["Fee percentage charged on buy operations (basis points)"],"type":"u16"},{"name":"sell_fees","docs":["Fee percentage charged on sell operations (basis points)"],"type":"u16"}]}},{"name":"LiquidityPool","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"token","type":"pubkey"},{"name":"total_supply","type":"u64"},{"name":"reserve_token","type":"u64"},{"name":"reserve_sol","type":"u64"},{"name":"closed","type":"bool"},{"name":"prepared","type":"bool"},{"name":"buy_fees","type":"u16"},{"name":"sell_fees","type":"u16"},{"name":"sol_vault_bump","type":"u8"},{"name":"bump","type":"u8"}]}},{"name":"OpinionProgram","type":{"kind":"struct","fields":[{"name":"admin","type":"pubkey"},{"name":"treasury","type":"pubkey"},{"name":"setup_fee","type":"u64"},{"name":"buy_fees","type":"u16"},{"name":"sell_fees","type":"u16"},{"name":"program_paused","type":"bool"},{"name":"raydium_init_fee","type":"u64"},{"name":"raydium_amm_config","type":"pubkey"},{"name":"treasury_bump","type":"u8"},{"name":"bump","type":"u8"}]}},{"name":"PoolChange","type":{"kind":"struct","fields":[{"name":"user","docs":["The user who executed the trade"],"type":"pubkey"},{"name":"pool","docs":["The pool's address"],"type":"pubkey"},{"name":"token_mint","docs":["The token mint address"],"type":"pubkey"},{"name":"fee","docs":["The fee charged for this trade"],"type":"u64"},{"name":"reserve_sol_before","docs":["Pool's SOL reserve before the trade"],"type":"u64"},{"name":"reserve_token_before","docs":["Pool's token reserve before the trade"],"type":"u64"},{"name":"reserve_sol_after","docs":["Pool's SOL reserve after the trade"],"type":"u64"},{"name":"reserve_token_after","docs":["Pool's token reserve after the trade"],"type":"u64"}]}},{"name":"PoolCreated","type":{"kind":"struct","fields":[{"name":"creator","docs":["The creator of the pool"],"type":"pubkey"},{"name":"pool","docs":["The pool's address"],"type":"pubkey"},{"name":"mint","docs":["The token mint address"],"type":"pubkey"}]}},{"name":"PoolPrepared","type":{"kind":"struct","fields":[{"name":"pool","docs":["The pool's address"],"type":"pubkey"}]}},{"name":"ProgramInitialized","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin's address"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"},{"name":"treasury","docs":["The treasury account"],"type":"pubkey"},{"name":"setup_fee","docs":["One-time fee for creating a pool (in lamports)"],"type":"u64"},{"name":"buy_fees","docs":["Fee percentage charged on buy operations (basis points)"],"type":"u16"},{"name":"sell_fees","docs":["Fee percentage charged on sell operations (basis points)"],"type":"u16"}]}},{"name":"ProgramPaused","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who paused the program"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"}]}},{"name":"ProgramResumed","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who resumed the program"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"}]}},{"name":"RaydiumAmmConfigUpdated","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who updated the Raydium AMM config"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"},{"name":"raydium_amm_config","docs":["The new Raydium AMM config"],"type":"pubkey"}]}},{"name":"RaydiumInitFeeUpdated","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who updated the Raydium init fee"],"type":"pubkey"},{"name":"opinion_program","docs":["The program's configuration account"],"type":"pubkey"},{"name":"raydium_init_fee","docs":["The new Raydium init fee"],"type":"u64"}]}},{"name":"RaydiumPoolInitialized","type":{"kind":"struct","fields":[{"name":"signer","docs":["The signer who initialized the Raydium pool"],"type":"pubkey"},{"name":"opinion_pool","docs":["The original opinion pool being migrated"],"type":"pubkey"},{"name":"token_0_mint","docs":["The first token mint in the Raydium pool"],"type":"pubkey"},{"name":"token_1_mint","docs":["The second token mint in the Raydium pool"],"type":"pubkey"},{"name":"raydium_pool","docs":["The Raydium pool state account"],"type":"pubkey"}]}},{"name":"TreasuryWithdraw","type":{"kind":"struct","fields":[{"name":"admin","docs":["The admin who withdrew from the treasury"],"type":"pubkey"},{"name":"treasury","docs":["The treasury account"],"type":"pubkey"},{"name":"amount","docs":["The amount withdrawn in lamports"],"type":"u64"}]}}]}
{"version":"4.0.1","name":"spl_token_bonding","instructions":[{"name":"createCurveV0","accounts":[{"name":"payer","isMut":true,"isSigner":true},{"name":"curve","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false}],"args":[{"name":"args","type":{"defined":"CreateCurveV0Args"}}]},{"name":"initializeTokenBondingV0","accounts":[{"name":"payer","isMut":true,"isSigner":true},{"name":"curve","isMut":false,"isSigner":false},{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"baseMint","isMut":false,"isSigner":false},{"name":"targetMint","isMut":false,"isSigner":false},{"name":"baseStorage","isMut":false,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false}],"args":[{"name":"args","type":{"defined":"InitializeTokenBondingV0Args"}}]},{"name":"closeTokenBondingV0","accounts":[{"name":"refund","isMut":true,"isSigner":false},{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"generalAuthority","isMut":false,"isSigner":true},{"name":"targetMint","isMut":true,"isSigner":false},{"name":"baseStorage","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"transferReservesV0","accounts":[{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"reserveAuthority","isMut":false,"isSigner":true},{"name":"baseMint","isMut":false,"isSigner":false},{"name":"baseStorage","isMut":true,"isSigner":false},{"name":"destination","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"amount","type":"u64"}]},{"name":"updateReserveAuthorityV0","accounts":[{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"reserveAuthority","isMut":false,"isSigner":true}],"args":[{"name":"args","type":{"defined":"UpdateReserveAuthorityV0Args"}}]},{"name":"updateTokenBondingV0","accounts":[{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"targetMint","isMut":false,"isSigner":false},{"name":"generalAuthority","isMut":false,"isSigner":true}],"args":[{"name":"generalAuthority","type":{"option":"publicKey"}},{"name":"buyFrozen","type":"bool"}]},{"name":"buyV1","accounts":[{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"curve","isMut":false,"isSigner":false},{"name":"baseMint","isMut":false,"isSigner":false},{"name":"targetMint","isMut":true,"isSigner":false},{"name":"baseStorage","isMut":true,"isSigner":false},{"name":"destination","isMut":true,"isSigner":false},{"name":"auditLog","isMut":true,"isSigner":false},{"name":"source","isMut":true,"isSigner":false},{"name":"sourceAuthority","isMut":false,"isSigner":true},{"name":"tokenProgram","isMut":false,"isSigner":false}],"args":[{"name":"args","type":{"defined":"BuyV0Args"}}]},{"name":"initAuditLog","accounts":[{"name":"payer","isMut":true,"isSigner":true,"docs":["The wallet paying for the rent and tx fee"]},{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"auditLog","isMut":true,"isSigner":false},{"name":"systemProgram","isMut":false,"isSigner":false},{"name":"rent","isMut":false,"isSigner":false}],"args":[]},{"name":"closeAuditLog","accounts":[{"name":"refund","isMut":true,"isSigner":false},{"name":"generalAuthority","isMut":true,"isSigner":true,"docs":["Only the general authority can shut down the audit log and recover rent"]},{"name":"tokenBonding","isMut":true,"isSigner":false},{"name":"auditLog","isMut":true,"isSigner":false},{"name":"tokenProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"registerSwapper","accounts":[{"name":"generalAuthority","isMut":true,"isSigner":true,"docs":["Only the general authority can change the bond's swapper params"]},{"name":"tokenBonding","isMut":true,"isSigner":false}],"args":[{"name":"swapperBase","type":"publicKey"},{"name":"swapperTarget","type":"publicKey"}]}],"accounts":[{"name":"CurveV0","docs":["Size = (4 + 68 * pieces) for Expontential","or (4 + 102 * pieces) for Time Decay Exponential","or (4 + 36 * pieces) for LBP style","","* Note that Vec has an overhead of 2 + 2 = 4 bytes","* The size of the account is fixed once it's intialized, use a multiple of 4 + 68x or 4 + 102x","such as 72, 140, 208, 276, etc"],"type":{"kind":"struct","fields":[{"name":"definition","type":{"defined":"PiecewiseCurve"}}]}},{"name":"TokenBondingV0","type":{"kind":"struct","fields":[{"name":"baseMint","docs":["Asset users with buy with"],"type":"publicKey"},{"name":"targetMint","docs":["Asset users purchase."],"type":"publicKey"},{"name":"generalAuthority","docs":["Can edit bonding params. Regains mint authority when bonding is closed at the end of the","sale. Mint is seized forever if not provided."],"type":{"option":"publicKey"}},{"name":"reserveAuthority","docs":["Can withdraw earned funds. Earned funds are lost forever if not provided."],"type":{"option":"publicKey"}},{"name":"curveAuthority","docs":["Can edit curve params"],"type":{"option":"publicKey"}},{"name":"baseStorage","docs":["Earned based funds are stored here."],"type":"publicKey"},{"name":"curve","docs":["The bonding curve to use"],"type":"publicKey"},{"name":"mintCap","docs":["Max amount of token the curve will sell (note that tokens are minted when sold). Infinite if","not provided."],"type":{"option":"u64"}},{"name":"purchaseCap","docs":["Max value of Target token that can be purchased in one ix, in native decimals. Buyers can","make multiple transactions to purchase more, this value merely guarantees the validity of","some math that requires delta target to be less than some value or a generic overflow","occurs."],"type":{"option":"u64"}},{"name":"goLiveUnixTime","docs":["Unix timestamp when sale begins"],"type":"i64"},{"name":"freezeBuyUnixTime","docs":["Unix timestamp when sale ends. Never ends if not provided (unless supply runs out)"],"type":{"option":"i64"}},{"name":"createdAtUnixTime","docs":["Unix timestamp when this bonding was created"],"type":"i64"},{"name":"buyFrozen","docs":["False if buying is permitted, true if disabled. Note that buying is always forbidden before","the go_live time and after the freeze_buy time, even if enabled here."],"type":"bool"},{"name":"sellFrozen","docs":["Note: Selling not implemented, reserved for future use."],"type":"bool"},{"name":"index","docs":["Nonce, needed to derive the PDA of this instance"],"type":"u16"},{"name":"bumpSeed","type":"u8"},{"name":"reservedU80","docs":["Reserved for future use"],"type":"u8"},{"name":"reservedU81","docs":["Reserved for future use"],"type":"u8"},{"name":"reservedU82","docs":["Reserved for future use"],"type":{"option":"u8"}},{"name":"reserveBalanceFromBonding","type":"u64"},{"name":"supplyFromBonding","type":"u64"},{"name":"ignoreExternalReserveChanges","docs":["Whether or not to ignore changes to base storage and target supply outside of the curve"],"type":"bool"},{"name":"ignoreExternalSupplyChanges","type":"bool"},{"name":"auditLog","docs":["Uses default pubkey until initialized"],"type":"publicKey"},{"name":"swapperBase","docs":["Pubkey of the token swapper where the base coin is the target. Pubkey default if unused."],"type":"publicKey"},{"name":"swapperTarget","docs":["Pubkey of the token swapper where the target coin is the base. Pubkey default if unused."],"type":"publicKey"},{"name":"reserveBalanceStart","docs":["When `reserve_balance_from_bonding` starts at a non-zero value, this records the initial value"],"type":"u64"},{"name":"supplyStart","docs":["When `supply_from_bonding` starts at a non-zero value, this records the initial value"],"type":"u64"}]}},{"name":"AuditLog","docs":["A log of all sales made in the current auction"],"type":{"kind":"struct","fields":[{"name":"nextChunk","docs":["Next chunk index with free slots"],"type":"u16"},{"name":"nextSlot","docs":["Next free slot in the chunk"],"type":"u16"},{"name":"inOrder","docs":["If 1, the log is in chronological order. If 0, the log has filled and wrapped around,","so new entries are over-writing the oldest entries"],"type":"u8"},{"name":"padding","docs":["Buffer for future use"],"type":{"array":["u8",3]}},{"name":"logChunks","docs":["Audit log of sales"],"type":{"array":[{"array":[{"defined":"AuditEntry"},1024]},18]}},{"name":"reserved1","docs":["Buffer for future use"],"type":{"array":["u8",24]}}]}}],"types":[{"name":"BuyV0Args","type":{"kind":"struct","fields":[{"name":"buyWithBase","type":{"option":{"defined":"BuyWithBaseV0Args"}}},{"name":"buyTargetAmount","type":{"option":{"defined":"BuyTargetAmountV0Args"}}}]}},{"name":"BuyWithBaseV0Args","type":{"kind":"struct","fields":[{"name":"baseAmount","type":"u64"},{"name":"minimumTargetAmount","type":"u64"}]}},{"name":"BuyTargetAmountV0Args","type":{"kind":"struct","fields":[{"name":"targetAmount","type":"u64"},{"name":"maximumPrice","type":"u64"}]}},{"name":"CreateCurveV0Args","type":{"kind":"struct","fields":[{"name":"definition","type":{"defined":"PiecewiseCurve"}}]}},{"name":"InitializeTokenBondingV0Args","type":{"kind":"struct","fields":[{"name":"goLiveUnixTime","type":"i64"},{"name":"freezeBuyUnixTime","type":{"option":"i64"}},{"name":"mintCap","type":{"option":"u64"}},{"name":"purchaseCap","type":{"option":"u64"}},{"name":"generalAuthority","type":{"option":"publicKey"}},{"name":"reserveAuthority","type":{"option":"publicKey"}},{"name":"curveAuthority","type":{"option":"publicKey"}},{"name":"buyFrozen","type":"bool"},{"name":"index","type":"u16"},{"name":"bumpSeed","type":"u8"},{"name":"sellFrozen","type":"bool"},{"name":"ignoreExternalReserveChanges","docs":["Whether or not to ignore changes to base storage and target supply outside of the curve"],"type":"bool"},{"name":"ignoreExternalSupplyChanges","type":"bool"},{"name":"initialReservesPad","docs":["* Allow starting a curve from a later reserve/supply ratio of ignor reserve and supply changes.\n     *\n     * This allows for things like the LBC where you don't need to provide any initial liquidity"],"type":"u64"},{"name":"initialSupplyPad","type":"u64"}]}},{"name":"UpdateReserveAuthorityV0Args","type":{"kind":"struct","fields":[{"name":"newReserveAuthority","type":{"option":"publicKey"}}]}},{"name":"TimeCurveV0","docs":["Size = 16 + 34 or 68 + 8 + 1 + 8 + 1 = 68 for Exponential or 102 for Time Decay Exponential or","36 for LBP style","","* Note that Option has an overhead of 1 byte"],"type":{"kind":"struct","fields":[{"name":"offset","type":"i64"},{"name":"curve","type":{"defined":"PrimitiveCurve"}},{"name":"buyTransitionFees","type":{"option":{"defined":"TransitionFeeV0"}}},{"name":"sellTransitionFees","type":{"option":{"defined":"TransitionFeeV0"}}}]}},{"name":"TransitionFeeV0","docs":["A fee that slowly decreases over the course of interval. This is used to prevent botting when curves change","Size = 4 + 4 = 8"],"type":{"kind":"struct","fields":[{"name":"percentage","type":"u32"},{"name":"interval","type":"u32"}]}},{"name":"AuditEntry","docs":["A log of a single sale"],"type":{"kind":"struct","fields":[{"name":"user","docs":["Key of the payer that made the tx"],"type":"publicKey"},{"name":"timestamp","docs":["System clock when sale was made"],"type":"i64"},{"name":"totalCost","docs":["Base tokens spent on this purchase in total, in native decimals"],"type":"u64"},{"name":"totalProceeds","docs":["Target tokens earned in this purchased in totale, in native decimals"],"type":"u64"}]}},{"name":"PrimitiveCurve","docs":["All u128 values use 12-decimal precision, e.g. 5.456456 = 5_456_456_000_000","","Size = 16 + 16 + 1 + 1 = 34 for Exponential","(Actual size 40 due to alignment)","or 16 + 16 + 16 + 4 + 16 = 68 for Time Decay Exponential","(Actual size 72 due to alignment)","or 16 + 16 + 4 = 36 for LBP style","(Actual size 40 due to alignment)"],"type":{"kind":"enum","variants":[{"name":"ExponentialCurveV0","fields":[{"name":"c","type":"u128"},{"name":"b","type":"u128"},{"name":"pow","type":"u8"},{"name":"frac","type":"u8"}]},{"name":"TimeDecayExponentialCurveV0","fields":[{"name":"c","type":"u128"},{"name":"k1","type":"u128"},{"name":"k0","type":"u128"},{"name":"interval","type":"u32"},{"name":"d","type":"u128"}]},{"name":"LbpStyleCurve","fields":[{"name":"wb0","docs":["Base weight at start of interval.","Target weight is always derived using `base + target weight = 1`"],"type":"u128"},{"name":"wb1","docs":["Base weight at end of interval.","Target weight is always derived using `base + target weight = 1`"],"type":"u128"},{"name":"interval","docs":["in seconds. Weight moves linearly from start to end over this duration."],"type":"u32"}]}]}},{"name":"PiecewiseCurve","docs":["Size = (4 + 68 * pieces) for Expontential or (4 + 102 * pieces) for Time Decay Exponential or","(4 + 36 * pieces) for LBP style","","* Note that Vec has an overhead of 2 + 2 = 4 bytes","* The size of the account is fixed once it's intialized, use a multiple of 4 + 68x or 4 + 102x","such as 72, 140, 208, 276, etc"],"type":{"kind":"enum","variants":[{"name":"TimeV0","fields":[{"name":"curves","type":{"vec":{"defined":"TimeCurveV0"}}}]}]}}],"events":[{"name":"AuditEvent","fields":[{"name":"user","type":"publicKey","index":false},{"name":"timestamp","type":"i64","index":false},{"name":"totalCost","type":"u64","index":false},{"name":"totalProceeds","type":"u64","index":false}]}],"errors":[{"code":6000,"name":"NoMintAuthority","msg":"Target mint must have an authority"},{"code":6001,"name":"InvalidMintAuthority","msg":"Target mint must have an authority that is a pda of this program"},{"code":6002,"name":"InvalidBaseStorageAuthority","msg":"Invalid base storage authority pda or seed did not match canonical seed for base storage authority"},{"code":6003,"name":"NoAuthority","msg":"Token bonding does not have an authority"},{"code":6004,"name":"ArithmeticError","msg":"Error in precise number arithmetic"},{"code":6005,"name":"PriceTooHigh","msg":"Buy price was higher than the maximum buy price. Try increasing max_price or slippage configuration"},{"code":6006,"name":"PriceTooLow","msg":"Sell price was lower than the minimum sell price. Try decreasing min_price or increasing slippage configuration"},{"code":6007,"name":"MintSupplyTooLow","msg":"Cannot sell more than the target mint currently has in supply"},{"code":6008,"name":"SellDisabled","msg":"Sell is not enabled on this bonding curve"},{"code":6009,"name":"NotLiveYet","msg":"This bonding curve is not live yet"},{"code":6010,"name":"PassedMintCap","msg":"Passed the mint cap"},{"code":6011,"name":"OverPurchaseCap","msg":"Cannot purchase that many tokens because of purchase cap"},{"code":6012,"name":"BuyFrozen","msg":"Buy is frozen on this bonding curve, purchases not allowed"},{"code":6013,"name":"WrappedSolNotAllowed","msg":"Use token bonding wrapped sol via buy_wrapped_sol, sell_wrapped_sol commands. We may one day provide liquid staking rewards on this stored sol."},{"code":6014,"name":"InvalidCurve","msg":"The provided curve is invalid"},{"code":6015,"name":"InvalidMint","msg":"An account was provided that did not have the correct mint"},{"code":6016,"name":"IgnoreExternalV1Only","msg":"Ignoring external changes is only supported on v1 of buy and sell endpoints. Please upgrade your client"},{"code":6017,"name":"InvalidPad","msg":"Cannot pad token bonding without ignoring external reserve and supply changes. This is an advanced feature, incorrect use could lead to insufficient resreves to cover sells"},{"code":6018,"name":"AuditLogExists","msg":"Audit log already exists. Close it to start a new one."},{"code":6019,"name":"AuditLogNotClosed","msg":"Close the audit log before closing the bonding."}]}
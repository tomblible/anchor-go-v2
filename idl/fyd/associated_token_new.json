{
  "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL",
  "metadata": {
    "name": "spl_associated_token_account",
    "version": "1.1.0",
    "spec": "0.1.0"
  },
  "instructions": [
    {
      "name": "create",
      "docs": [
        "Creates an associated token account for the given wallet address and token mint",
        "",
        "Accounts expected by this instruction:",
        "",
        "0. `[writeable, signer]` Funding account (must be a system account)",
        "1. `[writeable]` Associated token account address to be created",
        "2. `[]` Wallet address for the new associated token account",
        "3. `[]` The token mint for the new associated token account",
        "4. `[]` System program",
        "5. `[]` SPL Token program",
        "6. `[]` Rent sysvar"
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "associated_token",
          "writable": true
        },
        {
          "name": "authority"
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        },
        {
          "name": "rent"
        }
      ],
      "args": []
    },
    {
      "name": "create_idempotent",
      "docs": [
        "Creates an associated token account for the given wallet address and token mint,",
        "if it doesn't already exist.  This is useful for programs that need to use",
        "associated token accounts but cannot assume that the account exists.",
        "",
        "Accounts expected by this instruction:",
        "",
        "0. `[writeable, signer]` Funding account (must be a system account)",
        "1. `[writeable]` Associated token account address to be created",
        "2. `[]` Wallet address for the new associated token account",
        "3. `[]` The token mint for the new associated token account",
        "4. `[]` System program",
        "5. `[]` SPL Token program"
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "associated_token",
          "writable": true
        },
        {
          "name": "authority"
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        }
      ],
      "args": []
    },
    {
      "name": "recover_nested",
      "docs": [
        "Transfers tokens from a nested associated token account to an associated token account",
        "with the owner of the nested associated token account as the wallet address.",
        "",
        "Accounts expected by this instruction:",
        "",
        "0. `[writeable, signer]` Funding account (must be a system account)",
        "1. `[writeable]` Nested associated token account, must have `wallet` as owner.",
        "2. `[]` Token mint for the nested associated token account",
        "3. `[]` Wallet address for the owner of the nested associated token account, which will",
        "   receive the tokens in an associated token account with `wallet` as the wallet address.",
        "4. `[writeable]` Associated token account for the wallet and mint, may need to be created",
        "5. `[]` System program",
        "6. `[]` SPL Token program"
      ],
      "accounts": [
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "nested_associated_token_account",
          "writable": true
        },
        {
          "name": "nested_mint"
        },
        {
          "name": "owner_associated_token_account",
          "writable": true
        },
        {
          "name": "owner"
        },
        {
          "name": "owner_mint"
        },
        {
          "name": "wallet"
        },
        {
          "name": "system_program"
        },
        {
          "name": "token_program"
        }
      ],
      "args": []
    }
  ],
  "errors": [
    {
      "code": 0,
      "name": "InvalidOwner",
      "msg": "Associated token account owner does not match address derivation"
    }
  ]
}